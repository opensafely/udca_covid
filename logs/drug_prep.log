
. 
. cap mkdir ./output/tables/

. 
. tempfile tempfile 

. import delimited using ./output/input_pbc.csv
(32 vars, 1,000 obs)

. save `tempfile' 
file /tmp/St00015.000001 saved

. 
. ** First import udca population
. import delimited using ./output/input_additional.csv, clear
(41 vars, 1,000 obs)

. 
. describe 

Contains data
  obs:         1,000                          
 vars:            41                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
udca_1          str10   %10s                  
udca_2          str10   %10s                  
udca_3          str10   %10s                  
udca_4          str10   %10s                  
udca_5          str10   %10s                  
udca_6          str10   %10s                  
udca_7          str10   %10s                  
udca_8          str10   %10s                  
udca_9          str10   %10s                  
udca_10         str10   %10s                  
udca_11         str10   %10s                  
udca_12         str10   %10s                  
udca_13         str10   %10s                  
udca_14         str10   %10s                  
udca_15         str10   %10s                  
udca_16         str10   %10s                  
udca_17         str10   %10s                  
udca_18         str10   %10s                  
udca_19         str10   %10s                  
udca_20         str10   %10s                  
udca_21         str10   %10s                  
udca_22         str10   %10s                  
udca_23         str10   %10s                  
udca_24         str10   %10s                  
udca_25         str10   %10s                  
udca_26         str10   %10s                  
udca_27         str10   %10s                  
udca_28         str10   %10s                  
udca_29         str10   %10s                  
udca_30         str10   %10s                  
udca_31         str10   %10s                  
udca_32         str10   %10s                  
udca_33         str10   %10s                  
udca_34         str10   %10s                  
udca_35         str10   %10s                  
udca_36         str10   %10s                  
udca_37         str10   %10s                  
udca_38         str10   %10s                  
udca_39         str10   %10s                  
udca_40         str10   %10s                  
patient_id      int     %8.0g                 
-------------------------------------------------------------------------------
Sorted by: 
     Note: Dataset has changed since last saved.

. 
. *missings report, minimum(12400)
. missings dropvars udca_*, force

Checking missings in udca_1 udca_2 udca_3 udca_4 udca_5 udca_6 udca_7 udca_8
    udca_9 udca_10 udca_11 udca_12 udca_13 udca_14 udca_15 udca_16 udca_17
    udca_18 udca_19 udca_20 udca_21 udca_22 udca_23 udca_24 udca_25 udca_26
    udca_27 udca_28 udca_29 udca_30 udca_31 udca_32 udca_33 udca_34 udca_35
    udca_36 udca_37 udca_38 udca_39 udca_40:
1000 observations with missing values

note: no variables qualify

. 
. * Format dates 
. forvalues i=1/40 {
  2. gen udcaA`i' = date(udca_`i', "YMD")
  3. format udcaA`i' %dD/N/CY
  4. drop udca_`i'
  5. }
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)

. 
. * Reshape to long format 
. reshape long udcaA, i(patient_id) j(presc_number)
(note: j = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
>  27 28 29 30 31 32 33 34 35 36 37 38 39 40)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                     1000   ->   40000
Number of variables                  41   ->       3
j variable (40 values)                    ->   presc_number
xij variables:
              udcaA1 udcaA2 ... udcaA40   ->   udcaA
-----------------------------------------------------------------------------

. 
. * Drop rows where there is no prescription
. drop if udcaA==.
(20,000 observations deleted)

. 
. * Check that prescriptions are in order
. gen order_flag = (udcaA<udcaA[_n-1] & patient_id==patient_id[_n-1])

. tab order_flag 

 order_flag |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,497       52.48       52.48
          1 |      9,503       47.52      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. * Create flag if any out of order prescriptions in the data - should only be 
> in dummy data 
. egen out_of_order = max(order_flag)

. tab out_of_order

out_of_orde |
          r |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     20,000      100.00      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. 
. * Sort if out of order - should only apply to dummy data 
. sort patient_id udcaA 

. 
. drop order_flag

. * Check in order
. gen order_flag = (udcaA<udcaA[_n-1] & patient_id==patient_id[_n-1])

. tab order_flag

 order_flag |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     20,000      100.00      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. 
. * Identify prescriptions with the same date 
. bys patient_id: gen dup_presc = (udcaA==udcaA[_n-1])

. tab dup_presc 

  dup_presc |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     19,809       99.05       99.05
          1 |        191        0.95      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. * Drop them 
. drop if dup_presc 
(191 observations deleted)

. 
. drop order_flag out_of_order dup_presc presc_number

. 
. * Re-count number of prescriptions 
. gen udca=1

. bys patient_id: egen total_no_presc = total(udca)

. 
. * Assume end date is 60 days after prescription generated
. gen stop_date = udcaA + 60 

. format stop_date %dD/N/CY 

. 
. * Drop rows where prescriptions ends prior to March 2020
. count if stop_date <= date("01March2020", "DMY")
  0

. drop if stop_date <= date("01March2020", "DMY")
(0 observations deleted)

. 
. * Collapse adjacent prescriptions that are continuous prescribing into one pe
> riod 
. * Flag if start date is greater than assumed stop date of previous prescripti
> on 
. bys patient_id (udcaA): gen spell = udcaA > stop_date[_n-1]

. bys patient_id (udcaA): replace spell = 1 if _n==1
(1000 real changes made)

. * Flag each row associated with each spell 
. bys patient_id (udcaA): gen spell_sum = sum(spell) 

. * Start date of spell 
. bys patient_id spell_sum (udcaA): gen start = udcaA[1] 

. bys patient_id spell_sum (udcaA): gen stop = stop_date[_N] 

. format start stop %dD/N/CY

. keep patient_id start stop udca total_no_presc

. duplicates drop 

Duplicates in terms of all variables

(12,425 observations deleted)

. 
. * Add in rows where there are gaps in prescriptions 
. bys patient_id (start): gen to_expand = 1 + (stop < start[_n+1])*(start[_n+1]
> ~=.)

. tab to_expand 

  to_expand |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      1,000       13.54       13.54
          2 |      6,384       86.46      100.00
------------+-----------------------------------
      Total |      7,384      100.00

. expand to_expand 
(6,384 observations created)

. 
. * Flag new rows
. bys patient_id start: gen new_record = (_n==2)

. tab to_expand new_record 

           |      new_record
 to_expand |         0          1 |     Total
-----------+----------------------+----------
         1 |     1,000          0 |     1,000 
         2 |     6,384      6,384 |    12,768 
-----------+----------------------+----------
     Total |     7,384      6,384 |    13,768 

. 
. * Updating new rows 
. replace udca=0 if new_record==1
(6,384 real changes made)

. replace start = stop if new_record==1
(6,384 real changes made)

. replace stop = start[_n+1] if new_record==1
(6,384 real changes made)

. drop new_record to_expand

. 
. * Update to match follow-up time
. * merge variables from original study definition 
. merge m:1 patient_id using `tempfile', keepusing(dereg_date died_date_ons) 

    Result                           # of obs.
    -----------------------------------------
    not matched                        13,516
        from master                    12,599  (_merge==1)
        from using                        917  (_merge==2)

    matched                             1,169  (_merge==3)
    -----------------------------------------

. tab _merge

                 _merge |      Freq.     Percent        Cum.
------------------------+-----------------------------------
        master only (1) |     12,599       85.80       85.80
         using only (2) |        917        6.24       92.04
            matched (3) |      1,169        7.96      100.00
------------------------+-----------------------------------
                  Total |     14,685      100.00

. 
. * Update variables for people without prescriptions 
. replace start = date("01/03/2020", "DMY") if _merge==2
(917 real changes made)

. replace udca = 0 if _merge==2
(917 real changes made)

. replace stop = date("31/12/2022", "DMY") if _merge==2
(917 real changes made)

. replace total_no_presc = 0 if _merge==2
(917 real changes made)

. 
. * Determine end of follow-up date
. gen dereg_dateA = date(dereg_date, "YMD")
(13,561 missing values generated)

. format %dD/N/CY dereg_dateA

. drop dereg_date

. gen died_dateA = date(died_date_ons, "YMD")
(13,591 missing values generated)

. format %dD/N/CY died_dateA

. drop died_date_ons

. gen end_study = date("31/12/2022", "DMY")

. egen end_date = rowmin(dereg_dateA end_study died_dateA)

. * Count number of days of follow-up 
. gen total_fu = end_date - date("01/03/2020", "DMY")

. 
. ** Update start and end of follow-up for cohort
. * Identify prescriptions that start prior to March 2020
. gen start_prior = (start < date("01/03/2020", "DMY"))

. replace start = date("01/03/2020", "DMY") if start_prior==1
(0 real changes made)

. 
. * Identify rows that end after study end date for person 
. gen end_after = (stop > end_date )

. gen end_before = (start > end_date) 

. 
. tab end_after

  end_after |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     11,539       78.58       78.58
          1 |      3,146       21.42      100.00
------------+-----------------------------------
      Total |     14,685      100.00

. tab end_before 

 end_before |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     13,135       89.45       89.45
          1 |      1,550       10.55      100.00
------------+-----------------------------------
      Total |     14,685      100.00

. 
. * Drop whole rows that are after end_date 
. drop if end_before 
(1,550 observations deleted)

. 
. * Check those flagged as ending after are last row only 
. bys patient_id: gen last = _n==_N

. tab last end_after 

           |       end_after
      last |         0          1 |     Total
-----------+----------------------+----------
         0 |    10,346        875 |    11,221 
         1 |     1,193        721 |     1,914 
-----------+----------------------+----------
     Total |    11,539      1,596 |    13,135 

. 
. replace stop = end_date if end_after==1 & end_before==0
(1,596 real changes made)

. 
. count if start > stop 
  0

. 
. * Drop unnecessary variables
. drop _merge - end_date start_prior - last

. 
. save ./output/time_varying_udca
file ./output/time_varying_udca.dta saved

. 
. */
. 
. 
. 
. 
. 
. 
. 
. 
end of do-file

. . file open output using "/tmp/drug_prep.do.U9jg.out", write text replace

. . file write output "success" 

. . file close output

. 
end of do-file


