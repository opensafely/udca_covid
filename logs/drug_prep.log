
. 
. cap mkdir ./output/tables/

. 
. tempfile tempfile 

. import delimited using ./output/input_pbc.csv
(17 vars, 1,000 obs)

. save `tempfile' 
file /tmp/St00015.000001 saved

. 
. ** First import udca population
. import delimited using ./output/input_additional.csv, clear
(41 vars, 1,000 obs)

. 
. * Format dates 
. forvalues i=1/40 {
  2. gen udcaA`i' = date(udca_`i', "YMD")
  3. format udcaA`i' %dD/N/CY
  4. drop udca_`i'
  5. }
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)
(500 missing values generated)

. 
. * Reshape to long format 
. reshape long udcaA, i(patient_id) j(presc_number)
(note: j = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
>  27 28 29 30 31 32 33 34 35 36 37 38 39 40)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                     1000   ->   40000
Number of variables                  41   ->       3
j variable (40 values)                    ->   presc_number
xij variables:
              udcaA1 udcaA2 ... udcaA40   ->   udcaA
-----------------------------------------------------------------------------

. 
. * Drop rows where there is no prescription
. drop if udcaA==.
(20,000 observations deleted)

. 
. * Check that prescriptions are in order
. gen order_flag = (udcaA<udcaA[_n-1] & patient_id==patient_id[_n-1])

. tab order_flag 

 order_flag |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,434       52.17       52.17
          1 |      9,566       47.83      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. * Create flag if any out of order prescriptions in the data - should only be 
> in dummy data 
. egen out_of_order = max(order_flag)

. tab out_of_order

out_of_orde |
          r |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     20,000      100.00      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. 
. * Sort if out of order - should only apply to dummy data 
. sort patient_id udcaA 

. 
. drop order_flag

. * Check in order
. gen order_flag = (udcaA<udcaA[_n-1] & patient_id==patient_id[_n-1])

. tab order_flag

 order_flag |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     20,000      100.00      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. 
. * Identify prescriptions with the same date 
. bys patient_id: gen dup_presc = (udcaA==udcaA[_n-1] & patient_id==patient_id[
> _n-1])

. tab dup_presc 

  dup_presc |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     19,812       99.06       99.06
          1 |        188        0.94      100.00
------------+-----------------------------------
      Total |     20,000      100.00

. * Drop them 
. drop if dup_presc 
(188 observations deleted)

. 
. drop order_flag out_of_order dup_presc 

. 
. * Assume end date is 60 days after prescription generated
. gen stop_date = udcaA + 60 

. format stop_date %dD/N/CY 

. 
. * Drop rows where prescriptions ends prior to March 2020
. count if stop_date <= date("01March2020", "DMY")
  0

. drop if stop_date <= date("01March2020", "DMY")
(0 observations deleted)

. 
. * Collapse adjacent prescriptions that are continuous prescribing into one pe
> riod 
. * Flag if start date is greater than assumed stop date of previous prescripti
> on 
. bys patient_id (udcaA): gen spell = udcaA > stop_date[_n-1]

. bys patient_id (udcaA): replace spell = 1 if _n==1
(1000 real changes made)

. * Flag each row associated with each spell 
. bys patient_id (udcaA): gen spell_sum = sum(spell) 

. * Start date of spell 
. bys patient_id spell_sum (udcaA): gen start = udcaA[1] 

. bys patient_id spell_sum (udcaA): gen stop = stop_date[_N] 

. format start stop %dD/N/CY

. keep patient_id start stop 

. duplicates drop 

Duplicates in terms of all variables

(12,541 observations deleted)

. gen udca=1

. 
. * Add in rows where there are gaps in prescriptions 
. bys patient_id (start): gen to_expand = 1 + (stop < start[_n+1])*(start[_n+1]
> ~=.)

. tab to_expand 

  to_expand |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      1,000       13.75       13.75
          2 |      6,271       86.25      100.00
------------+-----------------------------------
      Total |      7,271      100.00

. expand to_expand 
(6,271 observations created)

. 
. * Flag new rows
. bys patient_id start: gen new_record = (_n==2)

. tab to_expand new_record 

           |      new_record
 to_expand |         0          1 |     Total
-----------+----------------------+----------
         1 |     1,000          0 |     1,000 
         2 |     6,271      6,271 |    12,542 
-----------+----------------------+----------
     Total |     7,271      6,271 |    13,542 

. 
. * Updating new rows 
. replace udca=0 if new_record==1
(6,271 real changes made)

. replace start = stop if new_record==1
(6,271 real changes made)

. replace stop = start[_n+1] if new_record==1
(6,271 real changes made)

. drop new_record to_expand

. 
. * Update to match follow-up time
. * merge variables from original study definition 
. merge m:1 patient_id using `tempfile', keepusing(dereg_date died_date_ons) 

    Result                           # of obs.
    -----------------------------------------
    not matched                        12,918
        from master                    12,030  (_merge==1)
        from using                        888  (_merge==2)

    matched                             1,512  (_merge==3)
    -----------------------------------------

. 
. * Determine end of follow-up date
. gen dereg_dateA = date(dereg_date, "YMD")
(13,178 missing values generated)

. format %dD/N/CY dereg_dateA

. drop dereg_date

. gen died_dateA = date(died_date_ons, "YMD")
(13,200 missing values generated)

. format %dD/N/CY died_dateA

. drop died_date_ons

. gen end_study = date("31/12/2022", "DMY")

. egen end_date = rowmin(dereg_dateA end_study died_dateA)

. 
. ** Update start and end of follow-up for cohort
. * Identify prescriptions that start prior to March 2020
. gen start_prior = (start < date("01/03/2020", "DMY"))

. replace start = date("01/03/2020", "DMY") if start_prior==1
(0 real changes made)

. 
. * Identify rows that end after study end date for person 
. gen end_after = (stop > end_date )

. gen end_before = (start > end_date) 

. 
. tab end_after

  end_after |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     11,036       76.48       76.48
          1 |      3,394       23.52      100.00
------------+-----------------------------------
      Total |     14,430      100.00

. tab end_before 

 end_before |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     11,984       83.05       83.05
          1 |      2,446       16.95      100.00
------------+-----------------------------------
      Total |     14,430      100.00

. 
. * Drop whole rows that are after end_date 
. drop if end_before 
(2,446 observations deleted)

. 
. * Check those flagged as ending after are last row only 
. bys patient_id: gen last = _n==_N

. tab last end_after 

           |       end_after
      last |         0          1 |     Total
-----------+----------------------+----------
         0 |    10,990          0 |    10,990 
         1 |        46        948 |       994 
-----------+----------------------+----------
     Total |    11,036        948 |    11,984 

. 
. replace stop = end_date if end_after==1 & end_before==0
(948 real changes made)

. 
. count if start > stop 
  0

. 
. save ./output/time_varying_udca
file ./output/time_varying_udca.dta saved

. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
end of do-file

. . file open output using "/tmp/drug_prep.do.Myej.out", write text replace

. . file write output "success" 

. . file close output

. 
end of do-file


