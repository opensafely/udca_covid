
. * Open file to write results to 
. file open tablecontent using ./output/tables/cum_incidence.txt, write text re
> place
(note: file ./output/tables/cum_incidence.txt not found)

. file write tablecontent ("Outcome") _tab ("Exposure") _tab ("Cumulative incid
> ence") _tab ("95% confidence interval") _n

. 
. 
. /* plot for each outcome - age and sex adjusted only
> foreach outcome in hosp_any composite_any {
>     use ./output/an_dataset_`outcome', clear 
>     describe
>     gen index_date = date("01/03/2020", "DMY")
>     stset stop, fail(`outcome'_flag) id(patient_id) enter(index_date) origin(
> index_date)
> 
>     * Add cumulative incidence plots 
>     * Not stratifying by stp as cannot use tvc and stratify  
>     
>     * Age and sex adjusted model 
>     * Setting df (degrees of freedom for restricted cubic splines) as 3 as th
> is is default 
>     * Setting dftvc (degrees of freedom for time-dependent effects) as 1 = li
> near effect of log time 
>     stpm2 udca age_tv male, tvc(udca) dftvc(1) df(3) scale(hazard) eform
>     summ _t
>     local tmax=r(max)
>     local tmaxplus1=r(max)+1
> 
>     range days 0 `tmax' `tmaxplus1'
>     stpm2_standsurv if udca == 1, at1(udca 0) at2(udca 1) timevar(days) ci co
> ntrast(difference) fail
> 
>     gen date = d(1/3/2020)+ days
>     format date %tddd_Month
> 
>     for var _at1 _at2 _at1_lci _at1_uci _at2_lci _at2_uci _contrast2_1 _contr
> ast2_1_lci _contrast2_1_uci: replace X=100*X
> 
>     *cumulative mortality at last day of follow-up - write to file 
>     file write tablecontent ("`outcome'") _tab ("No UDCA") _tab  
>     * cumulative outcome - no UDCA 
>     sum _at1 if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at1_lci if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at1_uci if days==`tmax'
>     file write tablecontent (r(mean)) _tab _n 
>     * cumulative outcome - UDCA 
>     file write tablecontent ("`outcome'") _tab ("UDCA") _tab  
>     sum _at2 if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at2_lci if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at2_uci if days==`tmax'
>     file write tablecontent (r(mean)) _tab _n 
>     
>     *l date days _at1 _at1_lci _at1_uci _at2 _at2_lci _at2_uci if days<.
> 
>     twoway  (rarea _at1_lci _at1_uci days, color(red%25)) ///
>                     (rarea _at2_lci _at2_uci days, color(blue%25)) ///
>                     (line _at1 days, sort lcolor(red)) ///
>                     (line _at2 days, sort lcolor(blue) lpattern(dash)) ///
>                     , legend(order(1 "No UDCA" 2 "UDCA") ring(0) cols(1) pos(
> 11) region(lwidth(none))) ///
>                     title("Time to `outcome'", justification(left) size(med) 
> )             ///
>                     yscale(range(0, 1))                                      
>                                                    ///
>                     ylabel(0 (1) 10, angle(0) format(%4.1f) labsize(small))  
>    ///
>                     xlabel(0 (200) 1035, labsize(small))                     
>                                            ///                     
>                     ytitle("Cumulative outcomes (%)", size(medsmall)) ///
>                     xtitle("Days since 1 Mar 2020", size(medsmall))          
>            ///
>                     graphregion(fcolor(white)) saving(adjcurv_`outcome', repl
> ace)
> 
>     graph export "./output/graphs/adjcurv_`outcome'.svg", as(svg) replace
> 
>     * Close window 
>     graph close
> 
> }
> 
> use ./output/an_dataset_died_covid_any, clear 
>     describe
>     gen index_date = date("01/03/2020", "DMY")
>     stset stop, fail(died_covid_any_flag) id(patient_id) enter(index_date) or
> igin(index_date)
> 
>     * Add cumulative incidence plots 
>     * Not stratifying by stp as cannot use tvc and stratify 
>     
>     * Age and sex adjusted model 
>     * Setting df (degrees of freedom for restricted cubic splines) as 3 as th
> is is default 
>     * Setting dftvc (degrees of freedom for time-dependent effects) as 1 = li
> near effect of log time 
>     stpm2 udca age_tv male, tvc(udca) dftvc(1) df(3) scale(hazard) eform
>     summ _t
>     local tmax=r(max)
>     local tmaxplus1=r(max)+1
> 
>     range days 0 `tmax' `tmaxplus1'
>     stpm2_standsurv if udca == 1, at1(udca 0) at2(udca 1) timevar(days) ci co
> ntrast(difference) fail
> 
>     gen date = d(1/3/2020)+ days
>     format date %tddd_Month
> 
>     for var _at1 _at2 _at1_lci _at1_uci _at2_lci _at2_uci _contrast2_1 _contr
> ast2_1_lci _contrast2_1_uci: replace X=100*X
> 
>     *cumulative mortality at last day of follow-up - write to file 
>     file write tablecontent ("Death") _tab ("No UDCA") _tab  
>     * cumulative outcome - no UDCA 
>     sum _at1 if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at1_lci if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at1_uci if days==`tmax'
>     file write tablecontent (r(mean)) _tab _n 
>     * cumulative outcome - UDCA 
>     file write tablecontent ("Death") _tab ("UDCA") _tab  
>     sum _at2 if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at2_lci if days==`tmax'
>     file write tablecontent (r(mean)) _tab 
>     sum _at2_uci if days==`tmax'
>     file write tablecontent (r(mean)) _tab _n 
> 
>     *l date days _at1 _at1_lci _at1_uci _at2 _at2_lci _at2_uci if days<.
> 
>     twoway  (rarea _at1_lci _at1_uci days, color(red%25)) ///
>                     (rarea _at2_lci _at2_uci days, color(blue%25)) ///
>                     (line _at1 days, sort lcolor(red)) ///
>                     (line _at2 days, sort lcolor(blue) lpattern(dash)) ///
>                     , legend(order(1 "No UDCA" 2 "UDCA") ring(0) cols(1) pos(
> 11) region(lwidth(none))) ///
>                     title("Time to COVID-19 death", justification(left) size(
> med) )        ///
>                     yscale(range(0, 1))                                      
>                                                    ///
>                     ylabel(0 (0.2) 2, angle(0) format(%4.1f) labsize(small)) 
>    ///
>                     xlabel(0 (200) 1035, labsize(small))                     
>                                            ///                     
>                     ytitle("Cumulative mortality (%)", size(medsmall)) ///
>                     xtitle("Days since 1 Mar 2020", size(medsmall))          
>            ///
>                     graphregion(fcolor(white)) saving(adjcurv_`outcome', repl
> ace)
> 
>     graph export "./output/graphs/adjcurv_died_covid_any.svg", as(svg) replac
> e
> 
>     * Close window 
>     graph close
>     */
. set trace on 

. * plot for each outcome - fully adjusted 
. foreach outcome in hosp_any composite_any {
  2.     use ./output/an_dataset_`outcome', clear 
  3.     describe
  4.     gen index_date = date("01/03/2020", "DMY")
  5.     stset stop, fail(`outcome'_flag) id(patient_id) enter(index_date) orig
> in(index_date)
  6. 
.     * Add cumulative incidence plots 
.     * Not stratifying by stp as cannot use tvc and stratify 
.     * Fully adjusted model (though not including wave as not right in main mo
> del)
.     * Setting df (degrees of freedom for restricted cubic splines) as 3 as th
> is is default 
.     * Setting dftvc (degrees of freedom for time-dependent effects) as 1 = li
> near effect of log time
.     * stpm2_standsurv cannot use factor variables so creating dummy variables
> :
.     tab imd, gen(imd) 
  7.     tab bmi_cat, gen(bmi_cat)
  8.     tab smoking, gen(smoking)
  9.     * Check all binary 
.     foreach vars in udca male any_high_risk_condition eth_bin imd1 imd2 imd3 
> imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 ///
>     bmi_cat4 bmi_cat5 smoking1 smoking2 smoking3 severe_disease covid_vacc_fi
> rst liver_trans {
 10.         tab `vars', m nolabel
 11.     } 
 12.     
.     stpm2 udca male age_tv any_high_risk_condition eth_bin imd1 imd2 imd3 imd
> 4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 ///
>     bmi_cat4 bmi_cat5 smoking1 smoking2 smoking3 severe_disease covid_vacc_fi
> rst liver_trans, ///
>      tvc(udca severe_disease covid_vacc_first liver_trans age_tv) dftvc(1) df
> (1) scale(hazard) eform
 13.    
.     summ _t
 14.     local tmax=r(max)
 15.     local tmaxplus1=r(max)+1
 16. 
.     range days 0 `tmax' `tmaxplus1'
 17.     stpm2_standsurv if udca == 1, at1(udca 0) at2(udca 1) timevar(days) ci
>  contrast(difference) fail
 18. 
.     gen date = d(1/3/2020)+ days
 19.     format date %tddd_Month
 20. 
.     for var _at1 _at2 _at1_lci _at1_uci _at2_lci _at2_uci _contrast2_1 _contr
> ast2_1_lci _contrast2_1_uci: replace X=100*X
 21. 
.     *cumulative mortality at last day of follow-up
.     list _at1* if days==`tmax', noobs
 22.     list _at2* if days==`tmax', noobs
 23.     list _contrast* if days==`tmax', noobs
 24. 
.     *l date days _at1 _at1_lci _at1_uci _at2 _at2_lci _at2_uci if days<.
. 
.     twoway  (rarea _at1_lci _at1_uci days, color(red%25)) ///
>                     (rarea _at2_lci _at2_uci days, color(blue%25)) ///
>                     (line _at1 days, sort lcolor(red)) ///
>                     (line _at2 days, sort lcolor(blue) lpattern(dash)) ///
>                     , legend(order(1 "No UDCA" 2 "UDCA") ring(0) cols(1) pos(
> 11) region(lwidth(none))) ///
>                     title("Time to `outcome'", justification(left) size(med) 
> )             ///
>                     yscale(range(0, 1))                                      
>                                                    ///
>                     ylabel(0 (1) 10, angle(0) format(%4.1f) labsize(small))  
>    ///
>                     xlabel(0 (200) 1035, labsize(small))                     
>                                            ///                     
>                     ytitle("Cumulative outcomes (%)", size(medsmall)) ///
>                     xtitle("Days since 1 Mar 2020", size(medsmall))          
>            ///
>                     graphregion(fcolor(white)) saving(adjcurv_f_`outcome', re
> place)
 25. 
.     graph export "./output/graphs/adjcurv_f_`outcome'.svg", as(svg) replace
 26. 
.     * Close window 
.     graph close
 27. 
. }
  - foreach outcome in hosp_any composite_any {
  - use ./output/an_dataset_`outcome', clear
  = use ./output/an_dataset_hosp_any, clear
  - describe
    -------------------------------------------------------- begin describe ---
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {
    = if (""!="") {
      describe_mk `0'
      return add
      exit
      }
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {
    = if ("" == "") {
    - `version' _describe `0'
    = version 16.1: _describe 

Contains data from ./output/an_dataset_hosp_any.dta
  obs:         2,870                          
 vars:            18                          22 Aug 2023 08:39
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
stp             str4    %9s                   
imd             byte    %8.0g                 
ethnicity       byte    %8.0g      eth5       
patient_id      int     %8.0g                 
male            float   %9.0g                 
eth_bin         float   %9.0g      eth2       
bmi_cat         float   %14.0g     bmi        
smoking         float   %14.0g     smok       
any_high_risk~n float   %9.0g                 
start           float   %9.0g                 
stop            float   %9.0g                 
hosp_any_flag   float   %9.0g                 
age_tv          float   %9.0g                 
udca            float   %9.0g                 
liver_trans     float   %9.0g                 
covid_vacc_fi~t float   %9.0g                 
severe_disease  float   %9.0g                 
total_hosp      float   %9.0g                 
-------------------------------------------------------------------------------
Sorted by: 
    - return add
    - }
    - else {
      if (`"`options'"' != "") {
      di as err "simple may not be combined with other options"
      exit 198
      }
      if (`"`using'"' != "") {
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {
      local vars "`r(varlist)'"
      }
      else {
      local vars "`varlist'"
      }
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {
      exit
      }
      if "`c(hasicu)'" == "1" {
      foreach x of local vars {
      local wid = max(`wid', udstrlen(`"`x'"'))
      }
      }
      else {
      foreach x of local vars {
      local wid = max(`wid', strlen(`"`x'"'))
      }
      }
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {
      foreach x of local `vars' {
      di as txt `col' `"`x'"'
      }
      exit
      }
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      }
      di as txt
      }
      qui `version' describe `varlist' `using', short
      return add
      }
      else {
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      }
      }
    ---------------------------------------------------------- end describe ---
  - gen index_date = date("01/03/2020", "DMY")
  - stset stop, fail(`outcome'_flag) id(patient_id) enter(index_date) origin(in
> dex_date)
  = stset stop, fail(hosp_any_flag) id(patient_id) enter(index_date) origin(ind
> ex_date)
    ----------------------------------------------------------- begin stset ---
    - version 6, missing
    - if _caller()<6 {
      ztset_5 `0'
      exit
      }
    - if replay() {
      syntax [, CLEAR NOShow Show MI]
      if ("`mi'"=="") {
      u_mi_not_mi_set stset
      local chkvars "*"
      }
      else {
      local chkvars "u_mi_check_setvars settime stset"
      }
      st_is 2 full
      if ("`clear'"=="" & "`show'"=="" & "`noshow'"=="") {
      streset, `mi'
      exit
      }
      if "`clear'" != "" {
      st_set clear "`chkvars'"
      exit
      }
      if ("`show'"!="" & "`noshow'"!="") {
      di as smcl as err "may not specify both {bf:show} and {bf:nowshow}"
      exit 198
      }
      if ("`show'"!="") {
      char _dta[st_show]
      }
      else char _dta[st_show] "noshow"
      exit
      }
    - syntax varlist(numeric max=2) [if/] [fw pw iw/] [, AFTER(string) BEFORe(s
> tring) ENter(string) ENTRy(string) EXit(string) EVER(string) Failure(string) 
> ID(varname) IFopt(string) MI NEVER(string) Origin(string) SCale(real 1) noSho
> w TIME0(string) ]
    - if ("`mi'"=="") {
    = if (""=="") {
    - u_mi_not_mi_set stset
      ----------------------------------------------- begin u_mi_not_mi_set ---
      - version 11
      - args name other
      - if ("`_dta[_mi_marker]'"=="") {
      = if (""=="") {
      - exit
      ------------------------------------------------- end u_mi_not_mi_set ---
    - local chkvars "*"
    - }
    - else {
      local chkvars "u_mi_check_setvars settime stset"
      }
    - `chkvars' `varlist'
    = * stop
    - tokenize `varlist'
    = tokenize stop
    - if "`2'"!="" {
    = if ""!="" {
      if `"`failure'"' != "" {
      di in red "may not mix old and new syntax"
      di in red "may not specify two variables and failure()"
      exit 198
      }
      local failure "`2'"
      }
    - if `"`entry'"' != "" {
    = if `""' != "" {
      if `"`enter'"'!="" {
      error 198
      }
      local enter `"`entry'"'
      }
    - st_set set "`chkvars'" "nocmd" "`id'" "`1'" `"`time0'"' "`failure'" `scal
> e' `"`enter'"' `"`exit'"' `"`origin'"' `"`if'"' `"`ifopt'"' `"`ever'"' `"`nev
> er'"' `"`after'"' `"`before'"' "`weight'" `"`exp'"' "`show'"
    = st_set set "*" "nocmd" "patient_id" "stop" `""' "hosp_any_flag" 1 `"index
> _date"' `""' `"index_date"' `""' `""' `""' `""' `""' `""' "" `""' ""
      -------------------------------------------------------- begin st_set ---
      - version 6, missing
      - if ("`1'"=="clear") {
      = if ("set"=="clear") {
        Clear
        exit
        }
      - if ("`1'" != "set") { exit 198 }
      = if ("set" != "set") { exit 198 }
      - args cmd chkvars stopts id bt bt0 failure bs enter exit origin ifexp if
>  ever never after before wt wv show full
      - if ("`chkvars'"=="") {
      = if ("*"=="") {
        local chkvars "*"
        }
      - `chkvars' `id' `bt'
      = * patient_id stop
      - if ("`full'"!="") {
      = if (""!="") {
        local fenter `"`enter'"'
        local fexit `"`exit'"'
        local forig `"`origin'"'
        local fif `"`if'"'
        local fever `"`ever'"'
        local fbefor `"`before'"'
        local fafter `"`after'"'
        tempvar ever
        qui gen byte `ever' = _st
        local if
        if "`full'"=="past future" | "`full'"=="past" {
        local origin "min"
        local enter
        local after
        }
        if "`full'"=="past future" | "`full'"=="future" {
        local exit "time ."
        local before
        }
        }
      - if `"`bt0'"'=="." { local bt0 }
      = if `""'=="." { local bt0 }
      - if `"`enter'"'=="." { local enter }
      = if `"index_date"'=="." { local enter }
      - if `"`exit'"'=="." { local exit }
      = if `""'=="." { local exit }
      - if `"`origin'"'=="." { local origin }
      = if `"index_date"'=="." { local origin }
      - if `"`scale'"'=="." { local scale 1 }
      = if `""'=="." { local scale 1 }
      - if `"`if'"'=="." { local if }
      = if `""'=="." { local if }
      - if `"`if'"'=="1" { local if }
      = if `""'=="1" { local if }
      - if `"`ever'"'=="." { local ever }
      = if `""'=="." { local ever }
      - if `"`ever'"'=="1" { local ever }
      = if `""'=="1" { local ever }
      - if `"`never'"'=="." { local never }
      = if `""'=="." { local never }
      - if `"`never'"'=="0" { local never }
      = if `""'=="0" { local never }
      - if `"`before'"'=="." { local before }
      = if `""'=="." { local before }
      - if `"`ifexp'"'=="." { local ifexp }
      = if `""'=="." { local ifexp }
      - if `"`ifexp'"'=="1" { local ifexp }
      = if `""'=="1" { local ifexp }
      - if "`id'"!="" {
      = if "patient_id"!="" {
      - if `"`failure'"'=="" {
      = if `"hosp_any_flag"'=="" {
        di in red "specifying option id() requires you also specify option fail
> ure()"
        exit 198
        }
      - }
      - if "`bt0'" != "" {
      = if "" != "" {
        unab bt0: `bt0', max(1) name(time0())
        `chkvars' `bt0'
        }
      - if (`"`failure'"'!="1" & `"`failure'"'!=".") | `"`id'"'!="" {
      = if (`"hosp_any_flag"'!="1" & `"hosp_any_flag"'!=".") | `"patient_id"'!=
> "" {
      - Failure "`chkvars'" `failure'
      = Failure "*" hosp_any_flag
        ---------------------------------------------- begin st_set.Failure ---
        - sret clear
        - gettoken chkvars 0 : 0
        - if (strtrim(`"`0'"')) == "" { exit }
        = if (strtrim(`" hosp_any_flag"')) == "" { exit }
        - gettoken name 0 : 0, parse(" =")
        - gettoken eqsign 0 : 0, parse(" =")
        - if !(`"`eqsign'"'=="" | `"`eqsign'"'=="=" | `"`eqsign'"'=="==") {
        = if !(`""'=="" | `""'=="=" | `""'=="==") {
          di in red "option failure():  syntax error"
          exit 198
          }
        - unab name: `name', max(1)
        = unab name: hosp_any_flag, max(1)
          ------------------------------------------------------ begin unab ---
          - version 6
          - gettoken user 0: 0, parse(" :")
          - gettoken colon 0: 0, parse(" :")
          - if `"`colon'"' != ":" { error 198 }
          = if `":"' != ":" { error 198 }
          - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 12000
> 0) NAME(string)]
          - c_local `user' `varlist'
          = c_local name hosp_any_flag
          - local n : word count `varlist'
          = local n : word count hosp_any_flag
          - if `n'>=`min' & `n'<=`max' { exit }
          = if 1>=1 & 1<=1 { exit }
          -------------------------------------------------------- end unab ---
        - `chkvars' `name'
        = * hosp_any_flag
        - sret local bd `name'
        = sret local bd hosp_any_flag
        - if `"`eqsign'"'=="" { exit }
        = if `""'=="" { exit }
        ------------------------------------------------ end st_set.Failure ---
      - local bd `s(bd)'
      = local bd hosp_any_flag
      - local event `s(event)'
      = local event 
      - }
      - Iop "`chkvars'" "`id'" "enter" `"`enter'"'
      = Iop "*" "patient_id" "enter" `"index_date"'
        -------------------------------------------------- begin st_set.Iop ---
        - args chkvars idvar opname cnts
        - sret clear
        - if `"`cnts'"' == "" { exit }
        = if `"index_date"' == "" { exit }
        - gettoken word cnts : cnts, parse(" =")
        - gettoken eqsign : cnts, parse(" =")
        - if `"`eqsign'"'=="" {
        = if `""'=="" {
        - unab word : `word', max(1) name(`opname'())
        = unab word : index_date, max(1) name(enter())
          ------------------------------------------------------ begin unab ---
          - version 6
          - gettoken user 0: 0, parse(" :")
          - gettoken colon 0: 0, parse(" :")
          - if `"`colon'"' != ":" { error 198 }
          = if `":"' != ":" { error 198 }
          - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 12000
> 0) NAME(string)]
          - c_local `user' `varlist'
          = c_local word index_date
          - local n : word count `varlist'
          = local n : word count index_date
          - if `n'>=`min' & `n'<=`max' { exit }
          = if 1>=1 & 1<=1 { exit }
          -------------------------------------------------------- end unab ---
        - `chkvars' `word'
        = * index_date
        - sret local texp `word'
        = sret local texp index_date
        - exit
        ---------------------------------------------------- end st_set.Iop ---
      - if `"`s(texp)'"' != "0" {
      = if `"index_date"' != "0" {
      - local en_exp `s(texp)'
      = local en_exp index_date
      - }
      - local en_ivar `s(ivar)'
      = local en_ivar 
      - local en_list `s(ilist)'
      = local en_list 
      - if `"`exit'"'!="failure" {
      = if `""'!="failure" {
      - Iop "`chkvars'" "`id'" "exit" `"`exit'"'
      = Iop "*" "patient_id" "exit" `""'
        -------------------------------------------------- begin st_set.Iop ---
        - args chkvars idvar opname cnts
        - sret clear
        - if `"`cnts'"' == "" { exit }
        = if `""' == "" { exit }
        ---------------------------------------------------- end st_set.Iop ---
      - local ex_exp `s(texp)'
      = local ex_exp 
      - local ex_ivar `s(ivar)'
      = local ex_ivar 
      - local ex_list `s(ilist)'
      = local ex_list 
      - }
      - if `"`origin'"'!="min" {
      = if `"index_date"'!="min" {
      - Iop "`chkvars'" "`id'" "origin" `"`origin'"'
      = Iop "*" "patient_id" "origin" `"index_date"'
        -------------------------------------------------- begin st_set.Iop ---
        - args chkvars idvar opname cnts
        - sret clear
        - if `"`cnts'"' == "" { exit }
        = if `"index_date"' == "" { exit }
        - gettoken word cnts : cnts, parse(" =")
        - gettoken eqsign : cnts, parse(" =")
        - if `"`eqsign'"'=="" {
        = if `""'=="" {
        - unab word : `word', max(1) name(`opname'())
        = unab word : index_date, max(1) name(origin())
          ------------------------------------------------------ begin unab ---
          - version 6
          - gettoken user 0: 0, parse(" :")
          - gettoken colon 0: 0, parse(" :")
          - if `"`colon'"' != ":" { error 198 }
          = if `":"' != ":" { error 198 }
          - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 12000
> 0) NAME(string)]
          - c_local `user' `varlist'
          = c_local word index_date
          - local n : word count `varlist'
          = local n : word count index_date
          - if `n'>=`min' & `n'<=`max' { exit }
          = if 1>=1 & 1<=1 { exit }
          -------------------------------------------------------- end unab ---
        - `chkvars' `word'
        = * index_date
        - sret local texp `word'
        = sret local texp index_date
        - exit
        ---------------------------------------------------- end st_set.Iop ---
      - if `"`s(texp)'"' != "0" {
      = if `"index_date"' != "0" {
      - local or_exp `s(texp)'
      = local or_exp index_date
      - }
      - local or_ivar `s(ivar)'
      = local or_ivar 
      - local or_list `s(ilist)'
      = local or_list 
      - }
      - else local or_cl "min"
      - if `"`wv'"'=="1" {
      = if `""'=="1" {
        local wt
        local wv
        }
      - else if "`wv'"!="" {
      = else if ""!="" {
        unab wv: `wv', max(1)
        `chkvars' `wv'
        }
      - quietly {
      - if (`"`ifexp'"' != "") {
      = if (`""' != "") {
        local ifif `"if `ifexp'"'
        }
      - if ("`wt'" != "") {
      = if ("" != "") {
        tempvar goodwgt
        mark `goodwgt' `ifif' [`wt'=`wv']
        }
      - tempvar touse
      - mark `touse' `ifif'
      = mark __000001 
      - local ifif
      - count if `touse'==0
      = count if __000001==0
      - local L_ifexp = r(N)
      - local L_id 0
      - if "`id'"!="" {
      = if "patient_id"!="" {
      - count if missing(`id') & `touse'
      = count if missing(patient_id) & __000001
      - local L_id = r(N)
      - replace `touse' = 0 if missing(`id')
      = replace __000001 = 0 if missing(patient_id)
      - }
      - count if `bt'>=. & `touse'
      = count if stop>=. & __000001
      - local L_bt = r(N)
      - replace `touse' = 0 if `bt'>=.
      = replace __000001 = 0 if stop>=.
      - if "`wt'"!="" & "`id'"!="" {
      = if ""!="" & "patient_id"!="" {
        sort `touse' `id' `bt'
        capture by `touse' `id': assert `wv'==`wv'[1] if `touse'
        if _rc {
        di in red "weight not constant within `id'"
        exit 459
        }
        }
      - tempvar d
      - if `"`event'"'!="" {
      = if `""'!="" {
        gen byte `d' = 0 if `touse'
        tokenize `event'
        while "`1'"!="" {
        replace `d' = 1 if `bd'==`1' & `touse'
        mac shift
        }
        }
      - else {
      - if "`bd'"!="" {
      = if "hosp_any_flag"!="" {
      - gen byte `d' = (`bd'!=0 & `bd'<.) if `touse'
      = gen byte __000002 = (hosp_any_flag!=0 & hosp_any_flag<.) if __000001
      - }
      - else gen byte `d' = 1 if `touse'
      = else gen byte __000002 = 1 if __000001
      - }
      - if "`or_cl'"=="" {
      = if ""=="" {
      - if `"`or_exp'"'!="" | `"`or_ivar'"'!="" {
      = if `"index_date"'!="" | `""'!="" {
      - tempvar zero
      - if `"`or_exp'"' != "" {
      = if `"index_date"' != "" {
      - tempvar z1
      - Smallest `z1' `"`or_exp'"' `touse' "`id'" `bt'
      = Smallest __000004 `"index_date"' __000001 "patient_id" stop
        --------------------------------------------- begin st_set.Smallest ---
        - args newvar exp touse id bt
        - if "`id'"!="" {
        = if "patient_id"!="" {
        - sort `touse' `id' `bt'
        = sort __000001 patient_id stop
        - by `touse' `id': gen double `newvar'=`exp' if `touse'
        = by __000001 patient_id: gen double __000004=index_date if __000001
        - sort `touse' `id' `newvar'
        = sort __000001 patient_id __000004
        - by `touse' `id': replace `newvar' = `newvar'[1]
        = by __000001 patient_id: replace __000004 = __000004[1]
        - }
        - else gen double `newvar' = `exp' if `touse'
        = else gen double __000004 = index_date if __000001
        ----------------------------------------------- end st_set.Smallest ---
      - }
      - if "`or_ivar'" != "" {
      = if "" != "" {
        tempvar z2
        FirstEv `z2' `"`or_list'"' `touse' "`id'" `bt' `or_ivar'
        }
      - Choose `zero' max "`z1'" "`z2'" `touse'
      = Choose __000003 max "__000004" "" __000001
        ----------------------------------------------- begin st_set.Choose ---
        - args newvar minmax t1 t2 touse
        - if "`t2'"=="" {
        = if ""=="" {
        - rename `t1' `newvar'
        = rename __000004 __000003
        - }
        - else if "`t1'"=="" {
        = else if "__000004"=="" {
          rename `t2' `newvar'
          }
        - else {
          replace `t1' = `minmax'(`t1',`t2') if `touse'
          drop `t2'
          rename `t1' `newvar'
          }
        ------------------------------------------------- end st_set.Choose ---
      - compress `zero'
      = compress __000003
      - }
      - else local zero 0
      - }
      - else {
        tempvar zero
        if `"`bt0'"'!="" {
        summarize `bt0' if `touse'
        gen double `zero' = r(min) if `touse'
        }
        else {
        summarize `bt' if `touse'
        gen double `zero' = r(min)-1 if `touse'
        }
        compress `zero'
        }
      - tempvar t
      - gen double `t' = (`bt'-`zero')/`bs' if `touse'
      = gen double __000005 = (stop-__000003)/1 if __000001
      - compress `t'
      = compress __000005
      - tempvar t0 touse2
      - gen byte `touse2' = `touse'
      = gen byte __000007 = __000001
      - local L_ut0m 0
      - local L_ut0t 0
      - local L_order 0
      - local L_ord2 0
      - if "`bt0'"!="" {
      = if ""!="" {
        count if (`bt0')>=. & `touse2'
        local L_ut0m = r(N)
        replace `touse2' = 0 if (`bt0')>=.
        count if (`bt0')>=`bt' & `touse2'
        local L_ut0t = r(N)
        replace `touse2' = 0 if (`bt0')>=`bt'
        gen double `t0' = ((`bt0')-`zero')/`bs' if `touse2'
        if "`id'"!="" {
        tempvar bad
        sort `touse2' `id' `bt'
        by `touse2' `id': gen byte `bad' = (`bt'[_n-1]>`bt0' & _n>1) | `bt0'>`b
> t'[_n+1] if `touse2'
        count if `bad'==1
        local L_ord2 = r(N)
        replace `touse2'=0 if `bad'==1
        drop `bad'
        }
        }
      - else {
      - if "`id'"!="" {
      = if "patient_id"!="" {
      - sort `touse2' `id' `bt'
      = sort __000007 patient_id stop
      - tempvar bad
      - by `touse2' `id': gen byte `bad' = `bt'==`bt'[_n-1] | `bt'==`bt'[_n+1] 
> if `touse2'
      = by __000007 patient_id: gen byte __000008 = stop==stop[_n-1] | stop==st
> op[_n+1] if __000007
      - count if `bad'==1
      = count if __000008==1
      - local L_order = r(N)
      - by `touse2' `id': gen double `t0' = cond(_n==1, cond(`t'[2]<=0, 2*`t'[1
> ], 0), `t'[_n-1]) if `touse2'
      = by __000007 patient_id: gen double __000006 = cond(_n==1, cond(__000005
> [2]<=0, 2*__000005[1], 0), __000005[_n-1]) if __000007
      - replace `touse2' = 0 if `bad'==1
      = replace __000007 = 0 if __000008==1
      - replace `t0' = . if `bad'==1
      = replace __000006 = . if __000008==1
      - drop `bad'
      = drop __000008
      - }
      - else gen double `t0' = 0 if `touse2'
      = else gen double __000006 = 0 if __000007
      - }
      - if `"`en_ivar'"'!="" | `"`en_exp'"'!="" {
      = if `""'!="" | `"index_date"'!="" {
      - tempvar t_en
      - if `"`en_exp'"'!="" {
      = if `"index_date"'!="" {
      - tempvar t1
      - Smallest `t1' `"`en_exp'"' `touse' "`id'" `bt'
      = Smallest __00000A `"index_date"' __000001 "patient_id" stop
        --------------------------------------------- begin st_set.Smallest ---
        - args newvar exp touse id bt
        - if "`id'"!="" {
        = if "patient_id"!="" {
        - sort `touse' `id' `bt'
        = sort __000001 patient_id stop
        - by `touse' `id': gen double `newvar'=`exp' if `touse'
        = by __000001 patient_id: gen double __00000A=index_date if __000001
        - sort `touse' `id' `newvar'
        = sort __000001 patient_id __00000A
        - by `touse' `id': replace `newvar' = `newvar'[1]
        = by __000001 patient_id: replace __00000A = __00000A[1]
        - }
        - else gen double `newvar' = `exp' if `touse'
        = else gen double __00000A = index_date if __000001
        ----------------------------------------------- end st_set.Smallest ---
      - }
      - if `"`en_ivar'"'!="" {
      = if `""'!="" {
        tempvar t2
        FirstEv `t2' `"`en_list'"' `touse' "`id'" `bt' `en_ivar'
        }
      - Choose `t_en' max "`t1'" "`t2'" `touse'
      = Choose __000009 max "__00000A" "" __000001
        ----------------------------------------------- begin st_set.Choose ---
        - args newvar minmax t1 t2 touse
        - if "`t2'"=="" {
        = if ""=="" {
        - rename `t1' `newvar'
        = rename __00000A __000009
        - }
        - else if "`t1'"=="" {
        = else if "__00000A"=="" {
          rename `t2' `newvar'
          }
        - else {
          replace `t1' = `minmax'(`t1',`t2') if `touse'
          drop `t2'
          rename `t1' `newvar'
          }
        ------------------------------------------------- end st_set.Choose ---
      - replace `t_en' = (`t_en'-`zero')/`bs'
      = replace __000009 = (__000009-__000003)/1
      - compress `t_en'
      = compress __000009
      - }
      - else local t_en 0
      - if `"`ex_ivar'"'!="" | `"`ex_exp'"'!="" {
      = if `""'!="" | `""'!="" {
        tempvar t_ex
        if `"`ex_exp'"'!="" {
        tempvar tex1
        Smallest `tex1' `"`ex_exp'"' `touse' "`id'" `bt'
        }
        if `"`ex_ivar'"'!="" {
        tempvar tex2
        FirstEv `tex2' `"`ex_list'"' `touse' "`id'" `bt' `ex_ivar'
        }
        Choose `t_ex' min "`tex1'" "`tex2'" `touse'
        replace `t_ex' = (`t_ex'-`zero')/`bs'
        compress `t_ex'
        }
      - else {
      - if "`id'"!="" {
      = if "patient_id"!="" {
      - tempvar t_ex
      - FirstEv `t_ex' "1" `touse' "`id'" `bt' `d'
      = FirstEv __00000B "1" __000001 "patient_id" stop __000002
        ---------------------------------------------- begin st_set.FirstEv ---
        - args newvar list touse id bt bd
        - sort `touse' `id' `bt'
        = sort __000001 patient_id stop
        - gen double `newvar' = .
        = gen double __00000B = .
        - tokenize `list'
        = tokenize 1
        - while "`1'"!="" {
        = while "1"!="" {
        - replace `newvar' = `bt' if `bd'==`1' & `touse'
        = replace __00000B = stop if __000002==1 & __000001
        - mac shift
        - }
        - while "`1'"!="" {
        = while ""!="" {
          replace `newvar' = `bt' if `bd'==`1' & `touse'
          mac shift
          }
        - by `touse' `id': replace `newvar' = `newvar'[_n-1] if `touse' & `newv
> ar'[_n-1]<.
        = by __000001 patient_id: replace __00000B = __00000B[_n-1] if __000001
>  & __00000B[_n-1]<.
        - by `touse' `id': replace `newvar' = `newvar'[_N] if `touse'
        = by __000001 patient_id: replace __00000B = __00000B[_N] if __000001
        ------------------------------------------------ end st_set.FirstEv ---
      - replace `t_ex' = (`t_ex'-`zero')/`bs'
      = replace __00000B = (__00000B-__000003)/1
      - compress `t_ex'
      = compress __00000B
      - }
      - else local t_ex .
      - }
      - replace `touse' = 0 if `touse2'==0
      = replace __000001 = 0 if __000007==0
      - drop `touse2'
      = drop __000007
      - tempvar alsorm wrk
      - gen byte `alsorm' = 0
      = gen byte __00000C = 0
      - if `"`if'"'!="" {
      = if `""'!="" {
        replace `alsorm'=1 if (`if')==0
        }
      - if `"`ever'"'!="" {
      = if `""'!="" {
        HasId ever `id'
        sort `touse' `id' `bt'
        by `touse' `id': gen float `wrk'= sum(cond(`ever',1,0)) if `touse'
        by `touse' `id': replace `alsorm'=1 if `wrk'[_N]==0
        drop `wrk'
        }
      - if `"`never'"' != "" {
      = if `""' != "" {
        HasId never `id'
        sort `touse' `id' `bt'
        by `touse' `id': gen float `wrk'= sum(cond(`never',1,0)) if `touse'
        by `touse' `id': replace `alsorm'=1 if `wrk'[_N]
        drop `wrk'
        }
      - if `"`after'"' != "" {
      = if `""' != "" {
        HasId after `id'
        sort `touse' `id' `bt'
        by `touse' `id': gen float `wrk' = sum(cond(`after',1,0)) if `touse'
        by `touse' `id': replace `alsorm'=1 if `wrk'==0
        drop `wrk'
        }
      - if `"`before'"' != "" {
      = if `""' != "" {
        HasId before `id'
        sort `touse' `id' `bt'
        by `touse' `id': gen float `wrk' = sum(cond(`before',1,0)) if `touse'
        by `touse' `id': replace `alsorm'=1 if `wrk'
        drop `wrk'
        }
      - count if `alsorm' & `touse'
      = count if __00000C & __000001
      - local L_res = r(N)
      - replace `touse'=0 if `alsorm'
      = replace __000001=0 if __00000C
      - drop `alsorm'
      = drop __00000C
      - count if (`t_en'>=. | `zero'>=.) & `touse'
      = count if (__000009>=. | __000003>=.) & __000001
      - local L_never = r(N)
      - replace `touse'=0 if `t_en'>=. | `zero'>=.
      = replace __000001=0 if __000009>=. | __000003>=.
      - count if `t'<=`t_en' & `t_en'<. & `touse'
      = count if __000005<=__000009 & __000009<. & __000001
      - local L_prior = r(N)
      - replace `touse'=0 if `t'<=`t_en' & `t_en'<.
      = replace __000001=0 if __000005<=__000009 & __000009<.
      - replace `t0' = `t_en' if `t0'<=`t_en' & `t'>`t_en' & `touse'
      = replace __000006 = __000009 if __000006<=__000009 & __000005>__000009 &
>  __000001
      - count if `t0'>=`t_ex' & `touse'
      = count if __000006>=__00000B & __000001
      - local L_after = r(N)
      - replace `touse'=0 if `t0'>=`t_ex'
      = replace __000001=0 if __000006>=__00000B
      - replace `d' = 0 if `t0'<`t_ex' & `t'>`t_ex'
      = replace __000002 = 0 if __000006<__00000B & __000005>__00000B
      - replace `t' = `t_ex' if `t0'<`t_ex' & `t'>`t_ex'
      = replace __000005 = __00000B if __000006<__00000B & __000005>__00000B
      - replace `t0' = 0 if `t0'<0 & `touse'
      = replace __000006 = 0 if __000006<0 & __000001
      - count if `t0' >= `t' & `touse'
      = count if __000006 >= __000005 & __000001
      - local L_t0t = r(N)
      - replace `touse'=0 if `t0'>=`t'
      = replace __000001=0 if __000006>=__000005
      - if "`goodwgt'"!="" {
      = if ""!="" {
        count if `goodwgt'==0 & `touse'
        local L_wgt = r(N)
        replace `touse'=0 if `goodwgt'==0
        }
      - else local L_wgt 0
      - replace `t'=. if !`touse'
      = replace __000005=. if !__000001
      - replace `t0'=. if !`touse'
      = replace __000006=. if !__000001
      - replace `d' = . if !`touse'
      = replace __000002 = . if !__000001
      - compress `t0'
      = compress __000006
      - }
      - Clear
        ------------------------------------------------ begin st_set.Clear ---
        - nobreak {
        - char _dta[_dta]
        - char _dta[st_set]
        - char _dta[st_ver]
        - char _dta[st_id]
        - char _dta[st_bt0]
        - char _dta[st_bt]
        - char _dta[st_bd]
        - char _dta[st_ev]
        - char _dta[st_enter]
        - char _dta[st_enexp]
        - char _dta[st_envn]
        - char _dta[st_ennl]
        - char _dta[st_exit]
        - char _dta[st_exexp]
        - char _dta[st_exvn]
        - char _dta[st_exnl]
        - char _dta[st_orig]
        - char _dta[st_orexp]
        - char _dta[st_orvn]
        - char _dta[st_ornl]
        - char _dta[st_bs]
        - char _dta[st_ifexp]
        - char _dta[st_if]
        - char _dta[st_ever]
        - char _dta[st_never]
        - char _dta[st_after]
        - char _dta[st_befor]
        - char _dta[st_wt]
        - char _dta[st_wv]
        - char _dta[st_w]
        - char _dta[st_show]
        - capture drop `_dta[st_o]'
        = capture drop 
        - char _dta[st_o]
        - char _dta[st_s]
        - Drop _dta[st_t] _t
          ----------------------------------------------- begin st_set.Drop ---
          - args char default
          - if "``char''" == "`default'" {
          = if "" == "_t" {
            capture drop `default'
            }
          - char `char'
          = char _dta[st_t]
          ------------------------------------------------- end st_set.Drop ---
        - Drop _dta[st_t0] _t0
          ----------------------------------------------- begin st_set.Drop ---
          - args char default
          - if "``char''" == "`default'" {
          = if "" == "_t0" {
            capture drop `default'
            }
          - char `char'
          = char _dta[st_t0]
          ------------------------------------------------- end st_set.Drop ---
        - Drop _dta[st_d] _d
          ----------------------------------------------- begin st_set.Drop ---
          - args char default
          - if "``char''" == "`default'" {
          = if "" == "_d" {
            capture drop `default'
            }
          - char `char'
          = char _dta[st_d]
          ------------------------------------------------- end st_set.Drop ---
        - novarabbrev {
        - capture drop _st
        - }
        - capture confirm integer number `_dta[st_n0]'
        = capture confirm integer number 
        - if _rc == 0 {
          local i 1
          while `i' <= `_dta[st_n0]' {
          char _dta[st_n`i']
          local i = `i' + 1
          }
          }
        - char _dta[st_n0]
        - char _dta[st_fev]
        - char _dta[st_fente]
        - char _dta[st_fexit]
        - char _dta[st_forig]
        - char _dta[st_fif]
        - char _dta[st_fever]
        - char _dta[st_fafte]
        - char _dta[st_fbefo]
        - char _dta[st_full]
        - capture drop _insmpl
        - capture drop _origin
        - }
        -------------------------------------------------- end st_set.Clear ---
      - confirm new var _st _d _t _t0 _origin _insmpl
      - nobreak {
      - rename `touse' _st
      = rename __000001 _st
      - rename `d' _d
      = rename __000002 _d
      - rename `t' _t
      = rename __000005 _t
      - rename `t0' _t0
      = rename __000006 _t0
      - lab var _st "1 if record is to be used; 0 otherwise"
        --------------------------------------------------------- begin lab ---
        - label `0'
        = label var _st "1 if record is to be used; 0 otherwise"
          ----------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("var", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 6, missing: _label var _st "1 if record is to be used; 0 ot
> herwise"
          - }
          ------------------------------------------------------- end label ---
        ----------------------------------------------------------- end lab ---
      - lab var _d "1 if failure; 0 if censored"
        --------------------------------------------------------- begin lab ---
        - label `0'
        = label var _d "1 if failure; 0 if censored"
          ----------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("var", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 6, missing: _label var _d "1 if failure; 0 if censored"
          - }
          ------------------------------------------------------- end label ---
        ----------------------------------------------------------- end lab ---
      - lab var _t0 "analysis time when record begins"
        --------------------------------------------------------- begin lab ---
        - label `0'
        = label var _t0 "analysis time when record begins"
          ----------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("var", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 6, missing: _label var _t0 "analysis time when record begin
> s"
          - }
          ------------------------------------------------------- end label ---
        ----------------------------------------------------------- end lab ---
      - lab var _t "analysis time when record ends"
        --------------------------------------------------------- begin lab ---
        - label `0'
        = label var _t "analysis time when record ends"
          ----------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("var", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 6, missing: _label var _t "analysis time when record ends"
          - }
          ------------------------------------------------------- end label ---
        ----------------------------------------------------------- end lab ---
      - char _dta[st_fente] `"`fenter'"'
      = char _dta[st_fente] `""'
      - char _dta[st_fexit] `"`fexit'"'
      = char _dta[st_fexit] `""'
      - char _dta[st_forig] `"`forig'"'
      = char _dta[st_forig] `""'
      - char _dta[st_fif] `"`fif'"'
      = char _dta[st_fif] `""'
      - char _dta[st_fever] `"`fever'"'
      = char _dta[st_fever] `""'
      - char _dta[st_fbefo] `"`fbefor'"'
      = char _dta[st_fbefo] `""'
      - char _dta[st_fafte] `"`fafter'"'
      = char _dta[st_fafte] `""'
      - char _dta[st_full] `"`full'"'
      = char _dta[st_full] `""'
      - char _dta[st_t] "_t"
      - char _dta[st_t0] "_t0"
      - char _dta[st_d] "_d"
      - char _dta[st_ifexp] `"`ifexp'"'
      = char _dta[st_ifexp] `""'
      - char _dta[st_if] `"`if'"'
      = char _dta[st_if] `""'
      - if `"`full'"' != "" {
      = if `""' != "" {
        rename `ever' _insmpl
        char _dta[st_ever] _insmpl
        }
      - else char _dta[st_ever] `"`ever'"'
      = else char _dta[st_ever] `""'
      - char _dta[st_never] `"`never'"'
      = char _dta[st_never] `""'
      - char _dta[st_after] `"`after'"'
      = char _dta[st_after] `""'
      - char _dta[st_befor] `"`before'"'
      = char _dta[st_befor] `""'
      - char _dta[st_wt] "`wt'"
      = char _dta[st_wt] ""
      - char _dta[st_wv] "`wv'"
      = char _dta[st_wv] ""
      - if "`wt'"!="" {
      = if ""!="" {
        char _dta[st_w] `"[`wt'=`wv']"'
        }
      - Combine st_exit `"`ex_ivar'"' `"`ex_list'"' `"`ex_exp'"'
      = Combine st_exit `""' `""' `""'
        ---------------------------------------------- begin st_set.Combine ---
        - args chname ivar ilist texp
        - local abb = usubstr(`"`chname'"',1,5)
        = local abb = usubstr(`"st_exit"',1,5)
        - if `"`ivar'"'=="" & `"`texp'"'=="" { exit }
        = if `""'=="" & `""'=="" { exit }
        ------------------------------------------------ end st_set.Combine ---
      - Combine st_enter `"`en_ivar'"' `"`en_list'"' `"`en_exp'"'
      = Combine st_enter `""' `""' `"index_date"'
        ---------------------------------------------- begin st_set.Combine ---
        - args chname ivar ilist texp
        - local abb = usubstr(`"`chname'"',1,5)
        = local abb = usubstr(`"st_enter"',1,5)
        - if `"`ivar'"'=="" & `"`texp'"'=="" { exit }
        = if `""'=="" & `"index_date"'=="" { exit }
        - if `"`ivar'"' != "" {
        = if `""' != "" {
          char _dta[`chname'] `"`ivar'==`ilist'"'
          char _dta[`abb'vn] `"`ivar'"'
          char _dta[`abb'nl] `"`ilist'"'
          if `"`texp'"'!="" {
          char _dta[`abb'exp] `"`texp'"'
          char _dta[`chname'] `"`_dta[`chname']' time `texp'"'
          }
          exit
          }
        - char _dta[`abb'exp] `"`texp'"'
        = char _dta[st_enexp] `"index_date"'
        - char _dta[`chname'] `"time `texp'"'
        = char _dta[st_enter] `"time index_date"'
        ------------------------------------------------ end st_set.Combine ---
      - char _dta[st_bs] "`bs'"
      = char _dta[st_bs] "1"
      - char _dta[st_s] `_dta[st_bs]'
      = char _dta[st_s] 1
      - if "`or_cl'"!="" {
      = if ""!="" {
        char _dta[st_orig] "min"
        }
      - else Combine st_orig `"`or_ivar'"' `"`or_list'"' `"`or_exp'"'
      = else Combine st_orig `""' `""' `"index_date"'
        ---------------------------------------------- begin st_set.Combine ---
        - args chname ivar ilist texp
        - local abb = usubstr(`"`chname'"',1,5)
        = local abb = usubstr(`"st_orig"',1,5)
        - if `"`ivar'"'=="" & `"`texp'"'=="" { exit }
        = if `""'=="" & `"index_date"'=="" { exit }
        - if `"`ivar'"' != "" {
        = if `""' != "" {
          char _dta[`chname'] `"`ivar'==`ilist'"'
          char _dta[`abb'vn] `"`ivar'"'
          char _dta[`abb'nl] `"`ilist'"'
          if `"`texp'"'!="" {
          char _dta[`abb'exp] `"`texp'"'
          char _dta[`chname'] `"`_dta[`chname']' time `texp'"'
          }
          exit
          }
        - char _dta[`abb'exp] `"`texp'"'
        = char _dta[st_orexp] `"index_date"'
        - char _dta[`chname'] `"time `texp'"'
        = char _dta[st_orig] `"time index_date"'
        ------------------------------------------------ end st_set.Combine ---
      - if "`zero'"!="0" {
      = if "__000003"!="0" {
      - qui summarize `zero' if _st
      = qui summarize __000003 if _st
      - local zmin = r(min)
      - if !(r(min)==r(max) & r(min)<. & r(min)==`zmin') {
      = if !(r(min)==r(max) & r(min)<. & r(min)==21975) {
        rename `zero' _origin
        lab var _origin "evaluated value of origin()"
        char _dta[st_o] "_origin"
        }
      - else char _dta[st_o] `zmin'
      = else char _dta[st_o] 21975
      - local zmin
      - }
      - else char _dta[st_o] "0"
      - char _dta[st_ev] `"`event'"'
      = char _dta[st_ev] `""'
      - char _dta[st_bd] `"`bd'"'
      = char _dta[st_bd] `"hosp_any_flag"'
      - char _dta[st_bt] "`bt'"
      = char _dta[st_bt] "stop"
      - char _dta[st_bt0] `"`bt0'"'
      = char _dta[st_bt0] `""'
      - char _dta[st_id] "`id'"
      = char _dta[st_id] "patient_id"
      - if "`show'"=="noshow" {
      = if ""=="noshow" {
        char _dta[st_show] "noshow"
        }
      - char _dta[st_ver] 2
      - char _dta[_dta] "st"
      - }
      - if ("`chkvars'"=="*") {
      = if ("*"=="*") {
      - st, `stopts'
      = st, nocmd
        ---------------------------------------------------------- begin st ---
        - version 6
        - if _caller()<6 {
          di in gr "(you are running st from Stata version 5)"
          if "`*'"!="" { error 198 }
          ztset_5
          exit
          }
        - syntax [, noCmd noTable MI]
        - if ("`mi'"=="") {
        = if (""=="") {
        - u_mi_not_mi_set "st"
          ------------------------------------------- begin u_mi_not_mi_set ---
          - version 11
          - args name other
          - if ("`_dta[_mi_marker]'"=="") {
          = if (""=="") {
          - exit
          --------------------------------------------- end u_mi_not_mi_set ---
        - }
        - st_is 2 full
          ----------------------------------------------------- begin st_is ---
          - version 6
          - if "`1'"=="2" & `"`_dta[_dta]'"'=="st" & `"`_dta[st_ver]'"'=="2" & 
> _caller()>5 {
          = if "2"=="2" & `"st"'=="st" & `"2"'=="2" & _caller()>5 {
          - if "`2'"=="analysis" & `"`_dta[st_full]'"'=="" | "`2'"=="full" {
          = if "full"=="analysis" & `""'=="" | "full"=="full" {
          - exit
          ------------------------------------------------------- end st_is ---
        - if "`cmd'"=="" {
        = if "nocmd"=="" {
          ShowCmd
          }
        - if "`table'"!="" {
        = if ""!="" {
          exit
          }
        - di

        - if `"`_dta[st_id]'"' != "" {
        = if `"patient_id"' != "" {
        - di in gr _col(17) "id:  " in ye `"`_dta[st_id]'"'
        = di in gr _col(17) "id:  " in ye `"patient_id"'
                id:  patient_id
        - }
        - if `"`_dta[st_bd]'"' != "" {
        = if `"hosp_any_flag"' != "" {
        - di in gr _col(6) "failure event:  " _c
     failure event:          - if `"`_dta[st_ev]'"' != "" {
        = if `""' != "" {
          di in ye `"`_dta[st_bd]' == `_dta[st_ev]'"'
          }
        - else di in ye `"`_dta[st_bd]' != 0 & `_dta[st_bd]' < ."'
        = else di in ye `"hosp_any_flag != 0 & hosp_any_flag < ."'
hosp_any_flag != 0 & hosp_any_flag < .
        - }
        - else {
          di in gr _col(6) "failure event:  " in ye `"(assumed to fail at time=
> `_dta[st_bt]')"'
          }
        - di in gr "obs. time interval:  " in ye "(" _c
obs. time interval:  (        - if `"`_dta[st_bt0]'"' != "" {
        = if `""' != "" {
          di in ye `"`_dta[st_bt0]'"' _c
          }
        - else if `"`_dta[st_id]'"' != "" {
        = else if `"patient_id"' != "" {
        - di in ye `"`_dta[st_bt]'[_n-1]"' _c
        = di in ye `"stop[_n-1]"' _c
stop[_n-1]        - }
        - else if `"`_dta[st_orig]'"' != "" {
        = else if `"time index_date"' != "" {
          di in ye `"origin"' _c
          }
        - else {
          di in ye "0" _c
          }
        - di in ye `", `_dta[st_bt]']"'
        = di in ye `", stop]"'
, stop]
        - if `"`_dta[st_enter]'"' != "" {
        = if `"time index_date"' != "" {
        - di in gr " enter on or after:  " in ye `"`_dta[st_enter]'"'
        = di in gr " enter on or after:  " in ye `"time index_date"'
 enter on or after:  time index_date
        - }
        - di in gr " exit on or before:  " _c
 exit on or before:          - if `"`_dta[st_exit]'"' != "" {
        = if `""' != "" {
          di in ye `"`_dta[st_exit]'"'
          }
        - else di in ye "failure"
failure
        - if `"`_dta[st_orig]'"'!="" | `"`_dta[st_bs]'"'!="1" {
        = if `"time index_date"'!="" | `"1"'!="1" {
        - di in gr _col(5) "t for analysis:  " _c
    t for analysis:          - if `"`_dta[st_orig]'"' != "" {
        = if `"time index_date"' != "" {
        - di in ye "(time-origin)" _c
(time-origin)        - }
        - else di in ye "time" _c
        - if `"`_dta[st_bs]'"'!="1" {
        = if `"1"'!="1" {
          di in ye `"/`_dta[st_bs]'"' _c
          }
        - di

        - if `"`_dta[st_orig]'"' != "" {
        = if `"time index_date"' != "" {
        - di in gr _col(13) "origin:  " in ye `"`_dta[st_orig]'"'
        = di in gr _col(13) "origin:  " in ye `"time index_date"'
            origin:  time index_date
        - }
        - }
        - if `"`_dta[st_w]'"' != "" {
        = if `""' != "" {
          di in gr _col(13) "weight:  " in ye `"`_dta[st_w]'"'
          }
        - if `"`_dta[st_ifexp]'"' != "" {
        = if `""' != "" {
          di in gr _col(13) "if exp:  " in ye `"`_dta[st_ifexp]'"'
          }
        - if `"`_dta[st_if]'"' != "" {
        = if `""' != "" {
          di in gr _col(17) "if:  " in ye `"`_dta[st_if]'"'
          }
        - if `"`_dta[st_ever]'"' != "" {
        = if `""' != "" {
          di in gr _col(15) "ever:  " in ye `"`_dta[st_ever]'"'
          }
        - if `"`_dta[st_never]'"' != "" {
        = if `""' != "" {
          di in gr _col(14) "never:  " in ye `"`_dta[st_never]'"'
          }
        - if `"`_dta[st_after]'"' != "" {
        = if `""' != "" {
          di in gr _col(14) "after:  " in ye `"`_dta[st_after]'"'
          }
        - if `"`_dta[st_befor]'"' != "" {
        = if `""' != "" {
          di in gr _col(13) "before:  " in ye `"`_dta[st_befor]'"'
          }
        - capture confirm integer number `_dta[st_n0]'
        = capture confirm integer number 
        - if _rc == 0 {
          di _col(15) in gr "note:  " in ye `"`_dta[st_n1]'"'
          local i 2
          while `i' <= `_dta[st_n0]' {
          di in ye _col(22) `"`_dta[st_n`i']'"'
          local i = `i' + 1
          }
          }
        ------------------------------------------------------------ end st ---
      - }
      - else {
        st, `stopts' mi
        }
      - di in smcl _n in gr "{hline 78}"

------------------------------------------------------------------------------
      - local obs="observation"+cond(_N==1,"","s")
      - Di1 _N "total `obs'"
      = Di1 _N "total observations"
        -------------------------------------------------- begin st_set.Di1 ---
        - di in ye %11.0gc round(`1',0.001) in gr `"  `2'"'
        = di in ye %11.0gc round(_N,0.001) in gr `"  total observations"'
      2,870  total observations
        - mac shift 2
        - while `"`1'"' != "" {
        = while `""' != "" {
          di in gr _skip(13) `"`1'"'
          mac shift
          }
        ---------------------------------------------------- end st_set.Di1 ---
      - qui count if _st==0
      - local Left = _N - r(N)
      - if r(N) {
        Di2 `L_ifexp' "ignored at outset because of -if <exp>-"
        Di2 `L_id' `"ignored because `_dta[st_id]' missing"'
        Di2h `L_bt' "event time missing" "(`_dta[st_bt]'>=.)"
        Di2h `L_ut0m' "entry time missing" "(`_dta[st_bt0]'>=.)"
        Di2h `L_ut0t' "entry on or after exit" `"(`_dta[st_bt0]'>`_dta[st_bt]')
> "'
        Di2h `L_order' `"multiple records at same instant"' "" `"(`_dta[st_bt]'
> [_n-1]==`_dta[st_bt]')"'
        Di2h `L_ord2' "overlapping records" `"(`_dta[st_bt]'[_n-1]>`_dta[st_bt0
> ]')"'
        Di2 `L_res' "ignored per request (if(), etc.)"
        Di2 `L_never' "ignored because never entered"
        if (`L_prior'==1) {
        Di2 `L_prior' "observation ends on or before enter()"
        }
        else Di2 `L_prior' "observations end on or before enter()"
        if (`L_t0t'==1) {
        Di2 `L_t0t' "observation ends on or before origin()"
        }
        else Di2 `L_t0t' "observations end on or before origin()"
        if `L_after' {
        if `"`exit'"'=="" | `"`exit'"'=="failure" {
        local m "(first) failure"
        }
        else local m "exit"
        if (`L_after'==1) {
        Di1 `L_after' "observation begins on or after `m'"
        }
        else Di1 `L_after' "observations begin on or after `m'"
        }
        Di2h `L_wgt' "weights invalid"
        }
      - else Di1 0 "exclusions"
        -------------------------------------------------- begin st_set.Di1 ---
        - di in ye %11.0gc round(`1',0.001) in gr `"  `2'"'
        = di in ye %11.0gc round(0,0.001) in gr `"  exclusions"'
          0  exclusions
        - mac shift 2
        - while `"`1'"' != "" {
        = while `""' != "" {
          di in gr _skip(13) `"`1'"'
          mac shift
          }
        ---------------------------------------------------- end st_set.Di1 ---
      - di in smcl in gr "{hline 78}"
------------------------------------------------------------------------------
      - if "`_dta[st_wt]'" == "fweight" {
      = if "" == "fweight" {
        local obs = "observation"+ cond(`Left'==1,"","s")
        Di1 `Left' "physical `obs' remaining, equal to"
        local wv `_dta[st_wv]'
        qui sum `wv' if _st, meanonly
        local obs = "observation"+cond(`r(sum)'==1,"","s")
        Di1 `r(sum)' "weighted `obs', representing"
        }
      - else {
      - local obs = "observation"+ cond(`Left'==1,"","s")
      = local obs = "observation"+ cond(2870==1,"","s")
      - Di1 `Left' "`obs' remaining, representing"
      = Di1 2870 "observations remaining, representing"
        -------------------------------------------------- begin st_set.Di1 ---
        - di in ye %11.0gc round(`1',0.001) in gr `"  `2'"'
        = di in ye %11.0gc round(2870,0.001) in gr `"  observations remaining, 
> representing"'
      2,870  observations remaining, representing
        - mac shift 2
        - while `"`1'"' != "" {
        = while `""' != "" {
          di in gr _skip(13) `"`1'"'
          mac shift
          }
        ---------------------------------------------------- end st_set.Di1 ---
      - tempvar wv
      - qui gen byte `wv'=1 if _st
      = qui gen byte __00000E=1 if _st
      - }
      - tempvar wrk
      - if "`_dta[st_id]'" != "" {
      = if "patient_id" != "" {
      - sort _st `_dta[st_id]' _t
      = sort _st patient_id _t
      - qui by _st `_dta[st_id]': gen byte `wrk' = 1 if _n==1 & _st
      = qui by _st patient_id: gen byte __00000F = 1 if _n==1 & _st
      - qui sum `wv' if `wrk'==1, meanonly
      = qui sum __00000E if __00000F==1, meanonly
      - local msg = "subject" + cond(r(sum)==1,"","s")
      - Di1 `r(sum)' "`msg'"
      = Di1 1000 "subjects"
        -------------------------------------------------- begin st_set.Di1 ---
        - di in ye %11.0gc round(`1',0.001) in gr `"  `2'"'
        = di in ye %11.0gc round(1000,0.001) in gr `"  subjects"'
      1,000  subjects
        - mac shift 2
        - while `"`1'"' != "" {
        = while `""' != "" {
          di in gr _skip(13) `"`1'"'
          mac shift
          }
        ---------------------------------------------------- end st_set.Di1 ---
      - drop `wrk'
      = drop __00000F
      - }
      - if "`_dta[st_id]'" != "" {
      = if "patient_id" != "" {
      - capture by _st `_dta[st_id]': assert sum(_d)<=1 if _st
      = capture by _st patient_id: assert sum(_d)<=1 if _st
      - if _rc == 0 {
      - local m "in single-failure-per-subject data"
      - local chk yes
      - }
      - else local m "in multiple-failure-per-subject data"
      - }
      - else local m "in single-record/single-failure data"
      - qui sum `wv' if _d & _st, meanonly
      = qui sum __00000E if _d & _st, meanonly
      - local msg = "failure" + cond(r(sum)==1,"","s")
      - Di1 `r(sum)' "`msg' `m'"
      = Di1 58 "failures in single-failure-per-subject data"
        -------------------------------------------------- begin st_set.Di1 ---
        - di in ye %11.0gc round(`1',0.001) in gr `"  `2'"'
        = di in ye %11.0gc round(58,0.001) in gr `"  failures in single-failure
> -per-subject data"'
         58  failures in single-failure-per-subject data
        - mac shift 2
        - while `"`1'"' != "" {
        = while `""' != "" {
          di in gr _skip(13) `"`1'"'
          mac shift
          }
        ---------------------------------------------------- end st_set.Di1 ---
      - if "`chk'"=="yes" {
      = if "yes"=="yes" {
      - qui by _st `_dta[st_id]': gen float `wrk' = sum(_d) & _n<_N if _st
      = qui by _st patient_id: gen float __00000F = sum(_d) & _n<_N if _st
      - qui by _st `_dta[st_id]': replace `wrk' = sum(`wrk')
      = qui by _st patient_id: replace __00000F = sum(__00000F)
      - capture assert `wrk'==0 if _st
      = capture assert __00000F==0 if _st
      - if _rc {
        qui by _st `_dta[st_id]': replace `wrk'=0 if _n!=_N
        qui sum `wv' if `wrk', meanonly
        local msg = cond(r(sum)~=1,"subjects remain", "subject remains")
        Di1 `r(sum)' "`msg' at risk after failure"
        }
      - drop `wrk'
      = drop __00000F
      - }
      - qui gen double `wrk' = `wv'*(_t - _t0) if _st
      = qui gen double __00000F = __00000E*(_t - _t0) if _st
      - qui sum `wrk', meanonly
      = qui sum __00000F, meanonly
      - di in ye %11.0gc round(r(sum),0.001) in gr "  total analysis time at ri
> sk and under observation"
    630,402  total analysis time at risk and under observation
      - di in gr _col(49) "at risk from t = " in ye %9.0gc 0
                                                at risk from t =         0
      - drop `wrk'
      = drop __00000F
      - qui sum _t0 if _st, meanonly
      - di in gr _col(38) "earliest observed entry t = " in ye %9.0gc r(min)
                                     earliest observed entry t =         0
      - qui sum _t if _st, meanonly
      - di in gr _col(43) "last observed exit t = " in ye %9.0gc r(max)
                                          last observed exit t =     1,035
      ---------------------------------------------------------- end st_set ---
    ------------------------------------------------------------- end stset ---
  - tab imd, gen(imd)

        imd |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        605       21.08       21.08
          2 |        565       19.69       40.77
          3 |        505       17.60       58.36
          4 |        574       20.00       78.36
          5 |        455       15.85       94.22
          6 |        166        5.78      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - tab bmi_cat, gen(bmi_cat)

       bmi_cat |      Freq.     Percent        Cum.
---------------+-----------------------------------
   Underweight |        199        6.93        6.93
 Healthy range |      1,135       39.55       46.48
    Overweight |        565       19.69       66.17
         Obese |        785       27.35       93.52
Morbidly obese |        186        6.48      100.00
---------------+-----------------------------------
         Total |      2,870      100.00
  - tab smoking, gen(smoking)

       smoking |      Freq.     Percent        Cum.
---------------+-----------------------------------
  Never smoked |        277        9.65        9.65
Current smoker |      2,103       73.28       82.93
     Ex-smoker |        490       17.07      100.00
---------------+-----------------------------------
         Total |      2,870      100.00
  - foreach vars in udca male any_high_risk_condition eth_bin imd1 imd2 imd3 im
> d4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 smokin
> g3 severe_disease covid_vacc_first liver_trans {
  - tab `vars', m nolabel
  = tab udca, m nolabel

       udca |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,582       89.97       89.97
          1 |        288       10.03      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab male, m nolabel

       male |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      1,398       48.71       48.71
          1 |      1,441       50.21       98.92
          . |         31        1.08      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab any_high_risk_condition, m nolabel

any_high_ri |
sk_conditio |
          n |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      2,870      100.00      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab eth_bin, m nolabel

    eth_bin |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |        407       14.18       14.18
          1 |      2,463       85.82      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab imd1, m nolabel

      imd== |
     1.0000 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,265       78.92       78.92
          1 |        605       21.08      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab imd2, m nolabel

      imd== |
     2.0000 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,305       80.31       80.31
          1 |        565       19.69      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab imd3, m nolabel

      imd== |
     3.0000 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,365       82.40       82.40
          1 |        505       17.60      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab imd4, m nolabel

      imd== |
     4.0000 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,296       80.00       80.00
          1 |        574       20.00      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab imd5, m nolabel

      imd== |
     5.0000 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,415       84.15       84.15
          1 |        455       15.85      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab bmi_cat1, m nolabel

bmi_cat==Un |
  derweight |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,671       93.07       93.07
          1 |        199        6.93      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab bmi_cat2, m nolabel

bmi_cat==He |
althy range |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      1,735       60.45       60.45
          1 |      1,135       39.55      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab bmi_cat3, m nolabel

bmi_cat==Ov |
   erweight |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,305       80.31       80.31
          1 |        565       19.69      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab bmi_cat4, m nolabel

bmi_cat==Ob |
        ese |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,085       72.65       72.65
          1 |        785       27.35      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab bmi_cat5, m nolabel

bmi_cat==Mo |
     rbidly |
      obese |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,684       93.52       93.52
          1 |        186        6.48      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab smoking1, m nolabel

smoking==Ne |
 ver smoked |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,593       90.35       90.35
          1 |        277        9.65      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab smoking2, m nolabel

smoking==Cu |
      rrent |
     smoker |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |        767       26.72       26.72
          1 |      2,103       73.28      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab smoking3, m nolabel

smoking==Ex |
    -smoker |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,380       82.93       82.93
          1 |        490       17.07      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab severe_disease, m nolabel

severe_dise |
        ase |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      1,130       39.37       39.37
          1 |      1,740       60.63      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab covid_vacc_first, m nolabel

covid_vacc_ |
      first |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,335       81.36       81.36
          1 |        535       18.64      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - tab `vars', m nolabel
  = tab liver_trans, m nolabel

liver_trans |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,846       99.16       99.16
          1 |         24        0.84      100.00
------------+-----------------------------------
      Total |      2,870      100.00
  - }
  - stpm2 udca male age_tv any_high_risk_condition eth_bin imd1 imd2 imd3 imd4 
> imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 smoking3 
> severe_disease covid_vacc_first liver_trans, tvc(udca severe_disease covid_va
> cc_first liver_trans age_tv) dftvc(1) df(1) scale(hazard) eform
    ----------------------------------------------------------- begin stpm2 ---
    - version 11.1
    - if strpos("`0'","oldstpm") >0 {
    = if strpos("udca male age_tv any_high_risk_condition eth_bin imd1 imd2 imd
> 3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 sm
> oking3 severe_disease covid_vacc_first liver_trans, tvc(udca severe_disease c
> ovid_vacc_first liver_trans age_tv) dftvc(1) df(1) scale(hazard) eform","olds
> tpm") >0 {
      local 0:subinstr local 0 "oldstpm" ""
      stpm `0'
      exit
      }
    - if _by() {
      local by "by `_byvars'`_byrc0':"
      }
    - if replay() {
      syntax [, DF(string) KNOTS(numlist ascending) *]
      if "`df'`knots'" != "" {
      `by' Estimate `0'
      ereturn local cmdline `"stpm2 `0'"'
      }
      else {
      if "`e(cmd)'" != "stpm2" {
      error 301
      }
      if _by() {
      error 190
      }
      Replay `0'
      }
      exit
      }
    - `by' Estimate `0'
    =  Estimate udca male age_tv any_high_risk_condition eth_bin imd1 imd2 imd3
>  imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 smo
> king3 severe_disease covid_vacc_first liver_trans, tvc(udca severe_disease co
> vid_vacc_first liver_trans age_tv) dftvc(1) df(1) scale(hazard) eform
      ------------------------------------------------ begin stpm2.Estimate ---
      - st_is 2 analysis
        ------------------------------------------------------- begin st_is ---
        - version 6
        - if "`1'"=="2" & `"`_dta[_dta]'"'=="st" & `"`_dta[st_ver]'"'=="2" & _c
> aller()>5 {
        = if "2"=="2" & `"st"'=="st" & `"2"'=="2" & _caller()>5 {
        - if "`2'"=="analysis" & `"`_dta[st_full]'"'=="" | "`2'"=="full" {
        = if "analysis"=="analysis" & `""'=="" | "analysis"=="full" {
        - exit
        --------------------------------------------------------- end st_is ---
      - syntax [varlist(fv default=empty)] [fw pw iw aw] [if] [in] [, DF(string
> ) TVC(varlist fv) DFTvc(string) KNOTS(numlist ascending) KNOTSTvc(string) BKn
> ots(numlist ascending min=2 max=2) BKNOTSTVC(string) KNSCALE(string) noORTHog
>  SCale(string) noCONStant INITTheta(real 1) CONSTheta(string) EForm ALLEQ KEE
> PCons BHAZard(varname) LINinit STratify(varlist) THeta(string) OFFset(varname
> ) RCSBASEOFF BHAZINIT(string) STPMDF(int 0) VERBose SHOWCons MLMethod(string)
>  ALL RMAT REVerse CURE FAILCONVLININIT INITSTRATA(varlist) FROM(string) OLDES
> T NOFIRSTDER NOSECONDDER noHEADer noCOEF noLOg noLRTEST Level(real `c(level)'
> ) * ]
      = syntax [varlist(fv default=empty)] [fw pw iw aw] [if] [in] [, DF(string
> ) TVC(varlist fv) DFTvc(string) KNOTS(numlist ascending) KNOTSTvc(string) BKn
> ots(numlist ascending min=2 max=2) BKNOTSTVC(string) KNSCALE(string) noORTHog
>  SCale(string) noCONStant INITTheta(real 1) CONSTheta(string) EForm ALLEQ KEE
> PCons BHAZard(varname) LINinit STratify(varlist) THeta(string) OFFset(varname
> ) RCSBASEOFF BHAZINIT(string) STPMDF(int 0) VERBose SHOWCons MLMethod(string)
>  ALL RMAT REVerse CURE FAILCONVLININIT INITSTRATA(varlist) FROM(string) OLDES
> T NOFIRSTDER NOSECONDDER noHEADer noCOEF noLOg noLRTEST Level(real 95) * ]
      - _extract_varnames `varlist'
      = _extract_varnames udca male age_tv any_high_risk_condition eth_bin imd1
>  imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 sm
> oking2 smoking3 severe_disease covid_vacc_first liver_trans
        ------------------------------------- begin stpm2._extract_varnames ---
        - version 11
        - tokenize `*'
        = tokenize udca male age_tv any_high_risk_condition eth_bin imd1 imd2 i
> md3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 
> smoking3 severe_disease covid_vacc_first liver_trans
        - local varlist
        - while "`1'" != "" {
        = while "udca" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("udca", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("udca", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("udca", ")", " "))
        - local varlist `varlist' `v'
        = local varlist  udca
        - macro shift
        - }
        - while "`1'" != "" {
        = while "male" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("male", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("male", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("male", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male
        - macro shift
        - }
        - while "`1'" != "" {
        = while "age_tv" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("age_tv", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("age_tv", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("age_tv", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv
        - macro shift
        - }
        - while "`1'" != "" {
        = while "any_high_risk_condition" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("any_high_risk_condition", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("any_high_risk_condition", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("any_high_risk_condition", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition
        - macro shift
        - }
        - while "`1'" != "" {
        = while "eth_bin" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("eth_bin", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("eth_bin", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("eth_bin", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd1" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("imd1", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("imd1", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("imd1", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd2" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("imd2", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("imd2", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("imd2", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd3" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("imd3", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("imd3", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("imd3", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd4" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("imd4", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("imd4", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("imd4", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd5" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("imd5", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("imd5", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("imd5", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat1" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("bmi_cat1", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("bmi_cat1", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("bmi_cat1", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat2" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("bmi_cat2", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("bmi_cat2", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("bmi_cat2", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat3" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("bmi_cat3", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("bmi_cat3", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("bmi_cat3", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat4" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("bmi_cat4", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("bmi_cat4", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("bmi_cat4", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat5" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("bmi_cat5", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("bmi_cat5", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("bmi_cat5", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5
        - macro shift
        - }
        - while "`1'" != "" {
        = while "smoking1" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("smoking1", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("smoking1", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("smoking1", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1
        - macro shift
        - }
        - while "`1'" != "" {
        = while "smoking2" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("smoking2", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("smoking2", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("smoking2", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2
        - macro shift
        - }
        - while "`1'" != "" {
        = while "smoking3" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("smoking3", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("smoking3", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("smoking3", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3
        - macro shift
        - }
        - while "`1'" != "" {
        = while "severe_disease" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("severe_disease", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("severe_disease", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("severe_disease", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3 severe_disease
        - macro shift
        - }
        - while "`1'" != "" {
        = while "covid_vacc_first" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("covid_vacc_first", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("covid_vacc_first", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("covid_vacc_first", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3 severe_disease covid_vacc_first
        - macro shift
        - }
        - while "`1'" != "" {
        = while "liver_trans" != "" {
        - mata: st_local("v", subinstr("`1'", "#", " "))
        = mata: st_local("v", subinstr("liver_trans", "#", " "))
        - mata: st_local("v", subinstr("`v'", "(", " "))
        = mata: st_local("v", subinstr("liver_trans", "(", " "))
        - mata: st_local("v", subinstr("`v'", ")", " "))
        = mata: st_local("v", subinstr("liver_trans", ")", " "))
        - local varlist `varlist' `v'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3 severe_disease covid_vacc_first liver_trans
        - macro shift
        - }
        - while "`1'" != "" {
        = while "" != "" {
          mata: st_local("v", subinstr("`1'", "#", " "))
          mata: st_local("v", subinstr("`v'", "(", " "))
          mata: st_local("v", subinstr("`v'", ")", " "))
          local varlist `varlist' `v'
          macro shift
          }
        - tokenize `varlist'
        = tokenize udca male age_tv any_high_risk_condition eth_bin imd1 imd2 i
> md3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 
> smoking3 severe_disease covid_vacc_first liver_trans
        - local varlist
        - while "`1'" != "" {
        = while "udca" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("udca", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("udca", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist  udca
        - macro shift
        - }
        - while "`1'" != "" {
        = while "male" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("male", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("male", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male
        - macro shift
        - }
        - while "`1'" != "" {
        = while "age_tv" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("age_tv", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("age_tv", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv
        - macro shift
        - }
        - while "`1'" != "" {
        = while "any_high_risk_condition" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("any_high_risk_condition", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("any_high_risk_condition", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition
        - macro shift
        - }
        - while "`1'" != "" {
        = while "eth_bin" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("eth_bin", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("eth_bin", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd1" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("imd1", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("imd1", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd2" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("imd2", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("imd2", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd3" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("imd3", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("imd3", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd4" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("imd4", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("imd4", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4
        - macro shift
        - }
        - while "`1'" != "" {
        = while "imd5" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("imd5", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("imd5", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat1" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("bmi_cat1", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("bmi_cat1", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat2" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("bmi_cat2", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("bmi_cat2", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat3" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("bmi_cat3", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("bmi_cat3", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat4" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("bmi_cat4", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("bmi_cat4", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4
        - macro shift
        - }
        - while "`1'" != "" {
        = while "bmi_cat5" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("bmi_cat5", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("bmi_cat5", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5
        - macro shift
        - }
        - while "`1'" != "" {
        = while "smoking1" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("smoking1", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("smoking1", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1
        - macro shift
        - }
        - while "`1'" != "" {
        = while "smoking2" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("smoking2", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("smoking2", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2
        - macro shift
        - }
        - while "`1'" != "" {
        = while "smoking3" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("smoking3", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("smoking3", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3
        - macro shift
        - }
        - while "`1'" != "" {
        = while "severe_disease" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("severe_disease", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("severe_disease", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3 severe_disease
        - macro shift
        - }
        - while "`1'" != "" {
        = while "covid_vacc_first" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("covid_vacc_first", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("covid_vacc_first", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3 severe_disease covid_vacc_first
        - macro shift
        - }
        - while "`1'" != "" {
        = while "liver_trans" != "" {
        - local point = strpos("`1'", ".")
        = local point = strpos("liver_trans", ".")
        - if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
        = if (0 > 0) local 1 = substr("liver_trans", 0 + 1, .)
        - local varlist `varlist' `1'
        = local varlist udca male age_tv any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smok
> ing2 smoking3 severe_disease covid_vacc_first liver_trans
        - macro shift
        - }
        - while "`1'" != "" {
        = while "" != "" {
          local point = strpos("`1'", ".")
          if (`point' > 0) local 1 = substr("`1'", `point' + 1, .)
          local varlist `varlist' `1'
          macro shift
          }
        - quietly _rmcoll `varlist', forcedrop
        = quietly _rmcoll udca male age_tv any_high_risk_condition eth_bin imd1
>  imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 sm
> oking2 smoking3 severe_disease covid_vacc_first liver_trans, forcedrop
        - return local varlist `r(varlist)'
        = return local varlist udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd
> 5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_
> vacc_first liver_trans
        --------------------------------------- end stpm2._extract_varnames ---
      - local varnames `r(varlist)'
      = local varnames udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5 bmi_ca
> t1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_vacc_fir
> st liver_trans
      - if `stpmdf'>0 local df `stpmdf'
      = if 0>0 local df 0
      - local cmdline `"stpm2 `0'"'
      = local cmdline `"stpm2 udca male age_tv any_high_risk_condition eth_bin 
> imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking
> 1 smoking2 smoking3 severe_disease covid_vacc_first liver_trans, tvc(udca sev
> ere_disease covid_vacc_first liver_trans age_tv) dftvc(1) df(1) scale(hazard)
>  eform"'
      - capture which rcsgen
      - if _rc >0 {
        display in yellow "You need to install the command rcsgen. This can be 
> installed using,"
        display in yellow ". {stata ssc install rcsgen}"
        exit 198
        }
      - if `c(stata_version)' < 16.1 {
      = if 16.1 < 16.1 {
        local oldest oldest
        }
      - if "`weight'" != "" {
      = if "" != "" {
        display as err "weights must be stset"
        exit 101
        }
      - local wt: char _dta[st_w]
      - local wtvar: char _dta[st_wv]
      - if "`wt'" != "" {
      = if "" != "" {
        local fw fw(`wtvar')
        }
      - fvexpand `tvc'
      = fvexpand udca severe_disease covid_vacc_first liver_trans age_tv
      - if "`r(fvops)'" != "" {
      = if "" != "" {
        display as error "Factor variables not allowed for tvc() option. Create
>  your own dummy varibles."
        exit 198
        }
      - tempvar Z xb lnt lnt0 coxindex S Sadj cons touse2 touse_t0 cons
      - tempname initmat Rinv_bh R_bh rmatrix
      - marksample touse
      - qui replace `touse' = 0 if _st==0 | `touse' == . | _st==.
      = qui replace __00000F = 0 if _st==0 | __00000F == . | _st==.
      - qui count if `touse'
      = qui count if __00000F
      - local nobs=r(N)
      - if `r(N)' == 0 {
      = if 2839 == 0 {
        display in red "No observations"
        exit 2000
        }
      - qui count if `touse' & _d
      = qui count if __00000F & _d
      - if `r(N)' == 0 {
      = if 58 == 0 {
        display in red "No failures"
        exit 198
        }
      - _get_diopts diopts options, `options'
      = _get_diopts diopts options, 
        ------------------------------------------------- begin _get_diopts ---
        - version 11
        - syntax namelist(max=2) [, *]
        - gettoken name1 namelist : namelist
        - gettoken name2 namelist : namelist
        - GetDiopts diopts options, `options'
        = GetDiopts diopts options, 
          ------------------------------------- begin _get_diopts.GetDiopts ---
          - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels N
> OBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NOOM
> ITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sformat
> (string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(stri
> ng) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABBRE
> V
          - syntax namelist(max=2) [, `DIOPTS' *]
          = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels AL
> LBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EM
> PTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(st
> ring) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) 
> FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) N
> OABBREV ABBREV *]
          - opts_exclusive "`allbaselevels' `noallbaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`allbaselevels' `nobaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`baselevels' `nobaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`emptycells' `noemptycells'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`fvlabel' `nofvlabel'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`omitted' `noomitted'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`lstretch' `nolstretch'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`cnsreport' `fullcnsreport'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`coeflegend' `selegend'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - local K : list sizeof namelist
          - gettoken c_diopts c_opts : namelist
          - opts_exclusive "`coding' `compare'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`versus' `compare'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`abbrev' `noabbrev'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - local allbaselevels `allbaselevels' `noallbaselevels'
          = local allbaselevels  
          - local baselevels `baselevels' `nobaselevels'
          = local baselevels  
          - local emptycells `emptycells' `noemptycells'
          = local emptycells  
          - local omitted `omitted' `noomitted'
          = local omitted  
          - local lstretch `lstretch' `nolstretch'
          = local lstretch  
          - local fvlabel `fvlabel' `nofvlabel'
          = local fvlabel  
          - local abbrev `abbrev' `noabbrev'
          = local abbrev  
          - if "`allbaselevels'`baselevels'" == "" {
          = if "" == "" {
          - if c(showbaselevels) == "all" {
            local allbaselevels allbaselevels
            }
          - else if c(showbaselevels) == "on" {
            local baselevels baselevels
            }
          - }
          - if "`emptycells'" == "" {
          = if "" == "" {
          - if c(showemptycells) == "off" {
            local emptycells noemptycells
            }
          - }
          - if "`omitted'" == "" {
          = if "" == "" {
          - if c(showomitted) == "off" {
            local omitted noomitted
            }
          - }
          - if "`lstretch'" == "" {
          = if "" == "" {
          - if c(lstretch) == "off" {
            local lstretch nolstretch
            }
          - }
          - if `:length local cformat' {
          = if 0 {
            confirm numeric format `cformat'
            if fmtwidth(`"`cformat'"') > 9 {
            local cformat "%9.0g"
            di "{txt}note: invalid cformat(), using default"
            }
            sreturn local cformat `"`cformat'"'
            local cformat `"cformat(`cformat')"'
            }
          - if `:length local sformat' {
          = if 0 {
            confirm numeric format `sformat'
            if fmtwidth(`"`sformat'"') > 8 {
            local sformat "%8.2f"
            di "{txt}note: invalid sformat(), using default"
            }
            sreturn local sformat `"`sformat'"'
            local sformat `"sformat(`sformat')"'
            }
          - if `:length local pformat' {
          = if 0 {
            confirm numeric format `pformat'
            if fmtwidth(`"`pformat'"') > 5 {
            local pformat "%5.3f"
            di "{txt}note: invalid pformat(), using default"
            }
            sreturn local pformat `"`pformat'"'
            local pformat `"pformat(`pformat')"'
            }
          - if `K' == 1 & `:length local options' {
          = if 2 == 1 & 0 {
            syntax namelist(max=2) [, `DIOPTS']
            }
          - if reldif(`level', c(level)) > 1e-3 {
          = if reldif(95, c(level)) > 1e-3 {
            local levelopt level(`level')
            }
          - Wrapon , `fvwrapon'
          = Wrapon , 
            -------------------------------------- begin _get_diopts.Wrapon ---
            - capture syntax [, WOrd WIdth]
            - if c(rc) {
              di as err "invalid fvwrapon() option;"
              syntax [, WOrd WIdth]
              exit 198
              }
            - opts_exclusive "`word' `width'" fvwrapon
            = opts_exclusive " " fvwrapon
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local fvwrapon `word' `width'
            = local fvwrapon  
            - if `:length local fvwrapon' {
            = if 0 {
              c_local fvwrapon fvwrapon(`fvwrapon')
              }
            ---------------------------------------- end _get_diopts.Wrapon ---
          - if "`fvwrap'" != "" {
          = if "" != "" {
            FVWrap, `fvwrap'
            }
          - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baselevels
> ' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend' 
> `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwrap'
>  `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
          = c_local diopts                         
          - if `K' == 2 {
          = if 2 == 2 {
          - c_local `c_opts' `"`options'"'
          = c_local  options `""'
          - }
          - sreturn local coding `coding'
          = sreturn local coding 
          - sreturn local versus `versus'
          = sreturn local versus 
          - sreturn local compare `compare'
          = sreturn local compare 
          - sreturn local level `level'
          = sreturn local level 95
          --------------------------------------- end _get_diopts.GetDiopts ---
        - c_local `name1' `"`diopts'"'
        = c_local diopts `""'
        - local snames : s(macros)
        - foreach sname of local snames {
        - local S_`sname' = s(`sname')
        = local S_level = s(level)
        - }
        - sreturn clear
        - GetDiopts DEFAULT
          ------------------------------------- begin _get_diopts.GetDiopts ---
          - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels N
> OBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NOOM
> ITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sformat
> (string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(stri
> ng) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABBRE
> V
          - syntax namelist(max=2) [, `DIOPTS' *]
          = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels AL
> LBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EM
> PTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(st
> ring) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) 
> FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) N
> OABBREV ABBREV *]
          - opts_exclusive "`allbaselevels' `noallbaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`allbaselevels' `nobaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`baselevels' `nobaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`emptycells' `noemptycells'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`fvlabel' `nofvlabel'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`omitted' `noomitted'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`lstretch' `nolstretch'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`cnsreport' `fullcnsreport'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`coeflegend' `selegend'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - local K : list sizeof namelist
          - gettoken c_diopts c_opts : namelist
          - opts_exclusive "`coding' `compare'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`versus' `compare'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`abbrev' `noabbrev'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - local allbaselevels `allbaselevels' `noallbaselevels'
          = local allbaselevels  
          - local baselevels `baselevels' `nobaselevels'
          = local baselevels  
          - local emptycells `emptycells' `noemptycells'
          = local emptycells  
          - local omitted `omitted' `noomitted'
          = local omitted  
          - local lstretch `lstretch' `nolstretch'
          = local lstretch  
          - local fvlabel `fvlabel' `nofvlabel'
          = local fvlabel  
          - local abbrev `abbrev' `noabbrev'
          = local abbrev  
          - if "`allbaselevels'`baselevels'" == "" {
          = if "" == "" {
          - if c(showbaselevels) == "all" {
            local allbaselevels allbaselevels
            }
          - else if c(showbaselevels) == "on" {
            local baselevels baselevels
            }
          - }
          - if "`emptycells'" == "" {
          = if "" == "" {
          - if c(showemptycells) == "off" {
            local emptycells noemptycells
            }
          - }
          - if "`omitted'" == "" {
          = if "" == "" {
          - if c(showomitted) == "off" {
            local omitted noomitted
            }
          - }
          - if "`lstretch'" == "" {
          = if "" == "" {
          - if c(lstretch) == "off" {
            local lstretch nolstretch
            }
          - }
          - if `:length local cformat' {
          = if 0 {
            confirm numeric format `cformat'
            if fmtwidth(`"`cformat'"') > 9 {
            local cformat "%9.0g"
            di "{txt}note: invalid cformat(), using default"
            }
            sreturn local cformat `"`cformat'"'
            local cformat `"cformat(`cformat')"'
            }
          - if `:length local sformat' {
          = if 0 {
            confirm numeric format `sformat'
            if fmtwidth(`"`sformat'"') > 8 {
            local sformat "%8.2f"
            di "{txt}note: invalid sformat(), using default"
            }
            sreturn local sformat `"`sformat'"'
            local sformat `"sformat(`sformat')"'
            }
          - if `:length local pformat' {
          = if 0 {
            confirm numeric format `pformat'
            if fmtwidth(`"`pformat'"') > 5 {
            local pformat "%5.3f"
            di "{txt}note: invalid pformat(), using default"
            }
            sreturn local pformat `"`pformat'"'
            local pformat `"pformat(`pformat')"'
            }
          - if `K' == 1 & `:length local options' {
          = if 1 == 1 & 0 {
            syntax namelist(max=2) [, `DIOPTS']
            }
          - if reldif(`level', c(level)) > 1e-3 {
          = if reldif(95, c(level)) > 1e-3 {
            local levelopt level(`level')
            }
          - Wrapon , `fvwrapon'
          = Wrapon , 
            -------------------------------------- begin _get_diopts.Wrapon ---
            - capture syntax [, WOrd WIdth]
            - if c(rc) {
              di as err "invalid fvwrapon() option;"
              syntax [, WOrd WIdth]
              exit 198
              }
            - opts_exclusive "`word' `width'" fvwrapon
            = opts_exclusive " " fvwrapon
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local fvwrapon `word' `width'
            = local fvwrapon  
            - if `:length local fvwrapon' {
            = if 0 {
              c_local fvwrapon fvwrapon(`fvwrapon')
              }
            ---------------------------------------- end _get_diopts.Wrapon ---
          - if "`fvwrap'" != "" {
          = if "" != "" {
            FVWrap, `fvwrap'
            }
          - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baselevels
> ' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend' 
> `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwrap'
>  `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
          = c_local DEFAULT                         
          - if `K' == 2 {
          = if 1 == 2 {
            c_local `c_opts' `"`options'"'
            }
          - sreturn local coding `coding'
          = sreturn local coding 
          - sreturn local versus `versus'
          = sreturn local versus 
          - sreturn local compare `compare'
          = sreturn local compare 
          - sreturn local level `level'
          = sreturn local level 95
          --------------------------------------- end _get_diopts.GetDiopts ---
        - if `"`name2'"' == "" {
        = if `"options"' == "" {
          GetDiopts DUPS, `options'
          }
        - else {
        - GetDiopts DUPS options, `options'
        = GetDiopts DUPS options, 
          ------------------------------------- begin _get_diopts.GetDiopts ---
          - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels N
> OBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NOOM
> ITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sformat
> (string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(stri
> ng) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABBRE
> V
          - syntax namelist(max=2) [, `DIOPTS' *]
          = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels AL
> LBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EM
> PTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(st
> ring) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) 
> FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) N
> OABBREV ABBREV *]
          - opts_exclusive "`allbaselevels' `noallbaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`allbaselevels' `nobaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`baselevels' `nobaselevels'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`emptycells' `noemptycells'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`fvlabel' `nofvlabel'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`omitted' `noomitted'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`lstretch' `nolstretch'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`cnsreport' `fullcnsreport'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`coeflegend' `selegend'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - local K : list sizeof namelist
          - gettoken c_diopts c_opts : namelist
          - opts_exclusive "`coding' `compare'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`versus' `compare'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`abbrev' `noabbrev'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - local allbaselevels `allbaselevels' `noallbaselevels'
          = local allbaselevels  
          - local baselevels `baselevels' `nobaselevels'
          = local baselevels  
          - local emptycells `emptycells' `noemptycells'
          = local emptycells  
          - local omitted `omitted' `noomitted'
          = local omitted  
          - local lstretch `lstretch' `nolstretch'
          = local lstretch  
          - local fvlabel `fvlabel' `nofvlabel'
          = local fvlabel  
          - local abbrev `abbrev' `noabbrev'
          = local abbrev  
          - if "`allbaselevels'`baselevels'" == "" {
          = if "" == "" {
          - if c(showbaselevels) == "all" {
            local allbaselevels allbaselevels
            }
          - else if c(showbaselevels) == "on" {
            local baselevels baselevels
            }
          - }
          - if "`emptycells'" == "" {
          = if "" == "" {
          - if c(showemptycells) == "off" {
            local emptycells noemptycells
            }
          - }
          - if "`omitted'" == "" {
          = if "" == "" {
          - if c(showomitted) == "off" {
            local omitted noomitted
            }
          - }
          - if "`lstretch'" == "" {
          = if "" == "" {
          - if c(lstretch) == "off" {
            local lstretch nolstretch
            }
          - }
          - if `:length local cformat' {
          = if 0 {
            confirm numeric format `cformat'
            if fmtwidth(`"`cformat'"') > 9 {
            local cformat "%9.0g"
            di "{txt}note: invalid cformat(), using default"
            }
            sreturn local cformat `"`cformat'"'
            local cformat `"cformat(`cformat')"'
            }
          - if `:length local sformat' {
          = if 0 {
            confirm numeric format `sformat'
            if fmtwidth(`"`sformat'"') > 8 {
            local sformat "%8.2f"
            di "{txt}note: invalid sformat(), using default"
            }
            sreturn local sformat `"`sformat'"'
            local sformat `"sformat(`sformat')"'
            }
          - if `:length local pformat' {
          = if 0 {
            confirm numeric format `pformat'
            if fmtwidth(`"`pformat'"') > 5 {
            local pformat "%5.3f"
            di "{txt}note: invalid pformat(), using default"
            }
            sreturn local pformat `"`pformat'"'
            local pformat `"pformat(`pformat')"'
            }
          - if `K' == 1 & `:length local options' {
          = if 2 == 1 & 0 {
            syntax namelist(max=2) [, `DIOPTS']
            }
          - if reldif(`level', c(level)) > 1e-3 {
          = if reldif(95, c(level)) > 1e-3 {
            local levelopt level(`level')
            }
          - Wrapon , `fvwrapon'
          = Wrapon , 
            -------------------------------------- begin _get_diopts.Wrapon ---
            - capture syntax [, WOrd WIdth]
            - if c(rc) {
              di as err "invalid fvwrapon() option;"
              syntax [, WOrd WIdth]
              exit 198
              }
            - opts_exclusive "`word' `width'" fvwrapon
            = opts_exclusive " " fvwrapon
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local fvwrapon `word' `width'
            = local fvwrapon  
            - if `:length local fvwrapon' {
            = if 0 {
              c_local fvwrapon fvwrapon(`fvwrapon')
              }
            ---------------------------------------- end _get_diopts.Wrapon ---
          - if "`fvwrap'" != "" {
          = if "" != "" {
            FVWrap, `fvwrap'
            }
          - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baselevels
> ' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend' 
> `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwrap'
>  `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
          = c_local DUPS                         
          - if `K' == 2 {
          = if 2 == 2 {
          - c_local `c_opts' `"`options'"'
          = c_local  options `""'
          - }
          - sreturn local coding `coding'
          = sreturn local coding 
          - sreturn local versus `versus'
          = sreturn local versus 
          - sreturn local compare `compare'
          = sreturn local compare 
          - sreturn local level `level'
          = sreturn local level 95
          --------------------------------------- end _get_diopts.GetDiopts ---
        - c_local `name2' `"`options'"'
        = c_local options `""'
        - }
        - local DUPS : list DUPS - DEFAULT
        - gettoken DUPS : DUPS
        - if `"`DUPS'"' != "" {
        = if `""' != "" {
          if (strpos(`"`DUPS'"', "(")) {
          gettoken DUPS : DUPS, parse("(")
          local DUPS `"`DUPS'()"'
          }
          di as err "duplicate {bf:`DUPS'} option not allowed"
          exit 198
          }
        - sreturn clear
        - foreach sname of local snames {
        - sreturn local `sname' = `"`S_`sname''"'
        = sreturn local level = `"95"'
        - }
        --------------------------------------------------- end _get_diopts ---
      - mlopts mlopts, `options'
      = mlopts mlopts, 
        ------------------------------------------------------ begin mlopts ---
        - version 8.0
        - local maxoptlist MLOPTs(string) TRace TRACEDIffs GRADient HESSian SHO
> WSTEP ITERate(int -1) TOLerance(real -1) LTOLerance(real -1) GTOLerance(real 
> -1) NONRTOLerance SHOWNRtolerance SHOWTOLerance NRTOLerance(real -1) QTOLeran
> ce(real -1) DIFficult HALFSTEPonly CONSTraints(string) noCNSNOTEs COLlinear T
> ECHnique(passthru) VCE(passthru) DOTS depsilon(passthru) SHOWH NOTCONCAVE(pas
> sthru) USEVIEWS NOLOg LOg
        - syntax namelist(id="macro names" min=1 max=2) [, `maxoptlist' * ]
        = syntax namelist(id="macro names" min=1 max=2) [, MLOPTs(string) TRace
>  TRACEDIffs GRADient HESSian SHOWSTEP ITERate(int -1) TOLerance(real -1) LTOL
> erance(real -1) GTOLerance(real -1) NONRTOLerance SHOWNRtolerance SHOWTOLeran
> ce NRTOLerance(real -1) QTOLerance(real -1) DIFficult HALFSTEPonly CONSTraint
> s(string) noCNSNOTEs COLlinear TECHnique(passthru) VCE(passthru) DOTS depsilo
> n(passthru) SHOWH NOTCONCAVE(passthru) USEVIEWS NOLOg LOg * ]
        - gettoken dest rest : namelist
        - if "`rest'" == "" {
        = if "" == "" {
        - syntax namelist [, `maxoptlist' ]
        = syntax namelist [, MLOPTs(string) TRace TRACEDIffs GRADient HESSian S
> HOWSTEP ITERate(int -1) TOLerance(real -1) LTOLerance(real -1) GTOLerance(rea
> l -1) NONRTOLerance SHOWNRtolerance SHOWTOLerance NRTOLerance(real -1) QTOLer
> ance(real -1) DIFficult HALFSTEPonly CONSTraints(string) noCNSNOTEs COLlinear
>  TECHnique(passthru) VCE(passthru) DOTS depsilon(passthru) SHOWH NOTCONCAVE(p
> assthru) USEVIEWS NOLOg LOg ]
        - }
        - local mlopts `mlopts' `trace' `tracediffs' `gradient' `hessian' `show
> step' `difficult' `halfsteponly' `nonrtolerance' `shownrtolerance' `showtoler
> ance' `dots' `depsilon' `showh' `notconcave' `useviews' `log' `nolog'
        = local mlopts                  
        - if `tolerance'!= -1 {
        = if -1!= -1 {
          local tol "tolerance(`tolerance')"
          }
        - if `ltolerance' != -1 {
        = if -1 != -1 {
          local ltol "ltolerance(`ltolerance')"
          }
        - if `gtolerance' != -1 {
        = if -1 != -1 {
          local gtol "gtolerance(`gtolerance')"
          }
        - if `nrtolerance' != -1 {
        = if -1 != -1 {
          local nrtol "nrtolerance(`nrtolerance')"
          }
        - if `qtolerance' != -1 {
        = if -1 != -1 {
          local qtol "qtolerance(`qtolerance')"
          }
        - if `iterate' != -1 {
        = if -1 != -1 {
          local iter "iterate(`iterate')"
          }
        - sreturn clear
        - if "`technique'`vce'" != "" {
        = if "" != "" {
          ml_technique, `technique' `vce' nodefault
          if `"`s(technique)'"' != "" {
          local technique "technique(`s(technique)')"
          }
          if "`s(vce)'" != "" {
          local vce "`s(vceopt)'"
          }
          sreturn local technique "`technique'"
          sreturn local vce "`vce'"
          }
        - if "`constraints'" != "" {
        = if "" != "" {
          capture confirm name `constraints'
          if _rc {
          CheckClist constraints , constraints(`constraints')
          }
          else {
          CheckCmat `constraints'
          }
          local const "constraints(`constraints')"
          sreturn local constraints "`constraints'"
          }
        - sreturn local collinear "`collinear'"
        = sreturn local collinear ""
        - c_local `dest' `mlopts' `tol' `ltol' `gtol' `nrtol' `iter' `const' `c
> nsnotes' `collinear' `technique' `vce' `qtol'
        = c_local mlopts            
        - if "`rest'" != "" {
        = if "" != "" {
          c_local `rest' `"`options'"'
          }
        -------------------------------------------------------- end mlopts ---
      - local extra_constraints `s(constraints)'
      = local extra_constraints 
      - if `"`s(collinear)'"' != "" {
      = if `""' != "" {
        di as err "option collinear not allowed"
        exit 198
        }
      - if "`all'" != "" {
      = if "" != "" {
        gen `touse2' = 1
        }
      - else {
      - gen `touse2' = `touse'
      = gen __000008 = __00000F
      - }
      - capture drop _rcs*
      - capture drop _d_rcs*
      - capture drop _s0_rcs*
      - local del_entry = 0
      - qui summ _t0 if `touse' , meanonly
      = qui summ _t0 if __00000F , meanonly
      - if r(max)>0 {
      - display in green "note: delayed entry models are being fitted"
note: delayed entry models are being fitted
      - local del_entry = 1
      - }
      - if "`orthog'"=="noorthog" {
      = if ""=="noorthog" {
        local orthog
        }
      - else {
      - local orthog orthog
      - }
      - qui gen double `lnt' = ln(_t) if `touse2'
      = qui gen double __000002 = ln(_t) if __000008
      - if "`tvc'" == "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" == "" {
        foreach opt in dftvc knotstvc {
        if "``opt''" != "" {
        display as txt _n "[`opt'() used without specifying tvc(), option ignor
> ed]"
        local `opt'
        }
        }
        }
      - if "`df'" != "" {
      = if "1" != "" {
      - capture confirm integer number `df'
      = capture confirm integer number 1
      - if _rc>0 {
        display in red "df option must be an integer"
        exit 198
        }
      - }
      - if "`rmat'" != "" {
      = if "" != "" {
        if "`tvc'" != "" {
        display as error "tvc option not available when using rmat option"
        exit 198
        }
        local orthog
        matrix `rmatrix' = e(R_bh)
        local rmatrixopt rmatrix(`rmatrix')
        }
      - if "`stratify'" != "" {
      = if "" != "" {
        if "`tvc'" != "" {
        display as error "You can not specify both the stratify and tvc options
> "
        exit 198
        }
        local tvc `stratify'
        local dftvc `df'
        }
      - if "`rcsbaseoff'" != "" & "`tvc'" == "" {
      = if "" != "" & "udca severe_disease covid_vacc_first liver_trans age_tv"
>  == "" {
        display as error "You must specify the tvc() option if you use the rcsb
> aseoff option"
        exit 198
        }
      - if "`bhazard'" != "" {
      = if "" != "" {
        if `touse' & missing(`bhazard') == 1 {
        display as err "baseline hazard contains missing values"
        exit
        }
        local rs _rs
        }
      - if "`bhazinit'" == "" {
      = if "" == "" {
      - local bhazinit 0.1
      - }
      - tokenize `knots'
      = tokenize 
      - local nbhknots : word count `knots'
      = local nbhknots : word count 
      - if "`df'" != "" & `nbhknots'>0 {
      = if "1" != "" & 0>0 {
        display as error "Only one of DF OR KNOTS can be specified"
        exit
        }
      - if (`nbhknots' == 0 & "`df'" == "") & "`rcsbaseoff'" == "" {
      = if (0 == 0 & "1" == "") & "" == "" {
        display as error "Use of either the df or knots option is compulsory"
        exit 198
        }
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - if "`dftvc'" == "" & "`knotstvc'" == "" {
      = if "1" == "" & "" == "" {
        display as error "The dftvc or knotstvc option is compulsory if you use
>  the tvc option"
        exit 198
        }
      - if "`knotstvc'" == "" {
      = if "" == "" {
      - local ntvcdf: word count `dftvc'
      = local ntvcdf: word count 1
      - local lasttvcdf : word `ntvcdf' of `dftvc'
      = local lasttvcdf : word 1 of 1
      - capture confirm number `lasttvcdf'
      = capture confirm number 1
      - if `ntvcdf' == 1 | _rc==0 {
      = if 1 == 1 | _rc==0 {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - if _rc==0 {
      - local tmptvc = subinstr("`1'",".","_",1)
      = local tmptvc = subinstr("",".","_",1)
      - local tvc_`tvcvar'_df `lasttvcdf'
      = local tvc_udca_df 1
      - }
      - }
      - if _rc==0 {
      - local tmptvc = subinstr("`1'",".","_",1)
      = local tmptvc = subinstr("",".","_",1)
      - local tvc_`tvcvar'_df `lasttvcdf'
      = local tvc_severe_disease_df 1
      - }
      - }
      - if _rc==0 {
      - local tmptvc = subinstr("`1'",".","_",1)
      = local tmptvc = subinstr("",".","_",1)
      - local tvc_`tvcvar'_df `lasttvcdf'
      = local tvc_covid_vacc_first_df 1
      - }
      - }
      - if _rc==0 {
      - local tmptvc = subinstr("`1'",".","_",1)
      = local tmptvc = subinstr("",".","_",1)
      - local tvc_`tvcvar'_df `lasttvcdf'
      = local tvc_liver_trans_df 1
      - }
      - }
      - if _rc==0 {
      - local tmptvc = subinstr("`1'",".","_",1)
      = local tmptvc = subinstr("",".","_",1)
      - local tvc_`tvcvar'_df `lasttvcdf'
      = local tvc_age_tv_df 1
      - }
      - }
      - }
      - if `ntvcdf'>1 | _rc >1 {
      = if 1>1 | _rc >1 {
        tokenize "`dftvc'"
        forvalues i = 1/`ntvcdf' {
        local tvcdflist`i' ``i''
        }
        forvalues i = 1/`ntvcdf' {
        capture confirm number `tvcdflist`i''
        if _rc>0 {
        tokenize "`tvcdflist`i''", parse(":")
        confirm var `1'
        if `"`: list posof `"`1'"' in tvc'"' == "0" {
        display as error "`1' is not listed in the tvc option"
        exit 198
        }
        local tmptvc `1'
        local tvc_`tmptvc'_df 1
        }
        local `1'_df `3'
        }
        }
      - }
      - if "`knotstvc'" == "" {
      = if "" == "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - if "`tvc_`tvcvar'_df'" == "" {
      = if "1" == "" {
        display as error "df for time-dependent effect of `tvcvar' are not spec
> ified"
        exit 198
        }
      - }
      - if "`tvc_`tvcvar'_df'" == "" {
      = if "1" == "" {
        display as error "df for time-dependent effect of `tvcvar' are not spec
> ified"
        exit 198
        }
      - }
      - if "`tvc_`tvcvar'_df'" == "" {
      = if "1" == "" {
        display as error "df for time-dependent effect of `tvcvar' are not spec
> ified"
        exit 198
        }
      - }
      - if "`tvc_`tvcvar'_df'" == "" {
      = if "1" == "" {
        display as error "df for time-dependent effect of `tvcvar' are not spec
> ified"
        exit 198
        }
      - }
      - if "`tvc_`tvcvar'_df'" == "" {
      = if "1" == "" {
        display as error "df for time-dependent effect of `tvcvar' are not spec
> ified"
        exit 198
        }
      - }
      - forvalues i = 1/`ntvcdf' {
      = forvalues i = 1/1 {
      - tokenize "`tvcdflist`i''", parse(":")
      = tokenize "", parse(":")
      - local tvc_`1'_df `3'
      = local tvc__df 
      - }
      - }
      - }
      - if "`knotstvc'" != "" {
      = if "" != "" {
        if "`dftvc'" != "" {
        display as error "You can not specify the dftvc and knotstvc options"
        exit 198
        }
        tokenize `knotstvc'
        cap confirm var `1'
        if _rc >0 {
        display as error "Specify the tvc variable(s) when using the knotstvc()
>  option"
        exit 198
        }
        while "`2'"!="" {
        cap confirm var `1'
        if _rc == 0 {
        if `"`: list posof `"`1'"' in tvc'"' == "0" {
        display as error "`1' is not listed in the tvc option"
        exit 198
        }
        local tmptvc `1'
        local tvc_`tmptvc'_df 1
        }
        cap confirm num `2'
        if _rc == 0 {
        local tvcknots_`tmptvc'_user `tvcknots_`tmptvc'_user' `2'
        local tvc_`tmptvc'_df = `tvc_`tmptvc'_df' + 1
        }
        else {
        cap confirm var `2'
        if _rc {
        display as error "`2' is not a variable"
        exit 198
        }
        }
        macro shift 1
        }
        }
      - if "`scale'" =="" {
      = if "hazard" =="" {
        display as error "The scale must be specified"
        exit
        }
      - if substr("`scale'", 1, 1)=="h" {
      = if substr("hazard", 1, 1)=="h" {
      - local scale "hazard"
      - }
      - else if substr("`scale'", 1, 1)=="o" {
      = else if substr("hazard", 1, 1)=="o" {
        local scale "odds"
        }
      - else if substr("`scale'", 1, 1)=="n" {
      = else if substr("hazard", 1, 1)=="n" {
        local scale "normal"
        }
      - else if substr("`scale'", 1, 1)=="l" {
      = else if substr("hazard", 1, 1)=="l" {
        local scale "log"
        }
      - else if substr("`scale'", 1, 1)=="t" {
      = else if substr("hazard", 1, 1)=="t" {
        local scale "theta"
        }
      - else {
        display as error "The scale must be specified as either hazard, odds, n
> ormal or theta"
        exit
        }
      - if "`cure'" != "" & "`scale'" != "hazard" {
      = if "" != "" & "hazard" != "hazard" {
        display as err "The cure option should only be used with the scale(haza
> rd) option"
        exit 198
        }
      - if "`cure'" != "" {
      = if "" != "" {
        local reverse reverse
        }
      - if "`scale'" != "theta" {
      = if "hazard" != "theta" {
      - foreach thetaopt in constheta {
      - if "``thetaopt''" != "" {
      = if "" != "" {
        display as err "`thetaopt' should only be used with the scale(theta) op
> tion"
        exit 198
        }
      - }
      - }
      - if "`scale'" == "odds" & "`theta'" != "" {
      = if "hazard" == "odds" & "" != "" {
        local scale theta
        if "`theta'" != "est" {
        local constheta `theta'
        }
        }
      - if "`knscale'" == "" {
      = if "" == "" {
      - local knscale time
      - }
      - if inlist(substr("`knscale'",1,1),"t","l","c") != 1 {
      = if inlist(substr("time",1,1),"t","l","c") != 1 {
        display as error "Invalid knscale() option"
        exit 198
        }
      - if "`bknots'" == "" {
      = if "" == "" {
      - summ `lnt' if `touse' & _d == 1, meanonly
      = summ __000002 if __00000F & _d == 1, meanonly
      - local lowerknot `r(min)'
      = local lowerknot 1.945910149055313
      - local upperknot `r(max)'
      = local upperknot 6.889591308354466
      - }
      - else if substr("`knscale'",1,1) == "t" {
      = else if substr("time",1,1) == "t" {
        local lowerknot = ln(real(word("`bknots'",1)))
        local upperknot = ln(real(word("`bknots'",2)))
        }
      - else if substr("`knscale'",1,1) == "l" {
      = else if substr("time",1,1) == "l" {
        local lowerknot = word("`bknots'",1)
        local upperknot = word("`bknots'",2)
        }
      - else if substr("`knscale'",1,1) == "c" {
      = else if substr("time",1,1) == "c" {
        qui centile `lnt' if `touse' & _d==1, centile(`bknots')
        local lowerknot = `r(c_1)'
        local upperknot = `r(c_2)'
        }
      - if "`bknotstvc'" != "" {
      = if "" != "" {
        tokenize `bknotstvc'
        while "`1'"!="" {
        cap confirm var `1'
        if _rc == 0 {
        if `"`: list posof `"`1'"' in tvc'"' == "0" {
        display as error "`1' is not listed in the tvc option"
        exit 198
        }
        local tmptvc `1'
        }
        cap confirm num `2'
        if _rc == 0 {
        if substr("`knscale'",1,1) == "t" {
        local lowerknot_`tmptvc' = ln(`2')
        }
        else if substr("`knscale'",1,1) == "l" {
        local lowerknot_`tmptvc' `2'
        }
        else if substr("`knscale'",1,1) == "c" {
        qui centile `lnt' if `touse' & _d==1, centile(`2')
        local lowerknot_`tmptvc' `r(c_1)'
        }
        }
        cap confirm num `3'
        if _rc == 0 {
        if substr("`knscale'",1,1) == "t" {
        local upperknot_`tmptvc' = ln(`3')
        }
        else if substr("`knscale'",1,1) == "l" {
        local upperknot_`tmptvc' `3'
        }
        else if substr("`knscale'",1,1) == "c" {
        qui centile `lnt' if `touse' & _d==1, centile(`3')
        local upperknot_`tmptvc' `r(c_1)'
        }
        }
        else {
        cap confirm var `3'
        if _rc {
        display as error "bknotstvc option incorrectly specified"
        exit 198
        }
        }
        macro shift 3
        }
        }
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - if "`lowerknot_`tvcvar''" == "" {
      = if "" == "" {
      - local lowerknot_`tvcvar' = `lowerknot'
      = local lowerknot_udca = 1.945910149055313
      - local upperknot_`tvcvar' = `upperknot'
      = local upperknot_udca = 6.889591308354466
      - }
      - }
      - if "`lowerknot_`tvcvar''" == "" {
      = if "" == "" {
      - local lowerknot_`tvcvar' = `lowerknot'
      = local lowerknot_severe_disease = 1.945910149055313
      - local upperknot_`tvcvar' = `upperknot'
      = local upperknot_severe_disease = 6.889591308354466
      - }
      - }
      - if "`lowerknot_`tvcvar''" == "" {
      = if "" == "" {
      - local lowerknot_`tvcvar' = `lowerknot'
      = local lowerknot_covid_vacc_first = 1.945910149055313
      - local upperknot_`tvcvar' = `upperknot'
      = local upperknot_covid_vacc_first = 6.889591308354466
      - }
      - }
      - if "`lowerknot_`tvcvar''" == "" {
      = if "" == "" {
      - local lowerknot_`tvcvar' = `lowerknot'
      = local lowerknot_liver_trans = 1.945910149055313
      - local upperknot_`tvcvar' = `upperknot'
      = local upperknot_liver_trans = 6.889591308354466
      - }
      - }
      - if "`lowerknot_`tvcvar''" == "" {
      = if "" == "" {
      - local lowerknot_`tvcvar' = `lowerknot'
      = local lowerknot_age_tv = 1.945910149055313
      - local upperknot_`tvcvar' = `upperknot'
      = local upperknot_age_tv = 6.889591308354466
      - }
      - }
      - if `nbhknots' == 0 & "`rcsbaseoff'" == "" & "`cure'" == "" {
      = if 0 == 0 & "" == "" & "" == "" {
      - if `df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt' if `touse2', gen(_rcs) dgen(_d_rcs) `orthog' `rmatrixo
> pt' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000002 if __000008, gen(_rcs) dgen(_d_rcs) orthog    
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "orthog" != "" & "" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_rcs" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _rcs1 = __000002 if __00000G
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "_d_rcs" != "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `dgen'1 = 1 if `touse'
        = quietly gen double _d_rcs1 = 1 if __00000G
        - }
        - else {
          scalar `dgen'1 = 1
          }
        - }
        - local rcslist `gen'1
        = local rcslist _rcs1
        - local drcslist `dgen'1
        = local drcslist _d_rcs1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - tempname R Rinv cons
        - mata: orthgs("`rcslist'","`touse'")
        = mata: orthgs("_rcs1","__00000G")
        - matrix `Rinv' = inv(`R')
        = matrix __00000I = inv(__00000K)
        - if "`dgen'" != "" {
        = if "_d_rcs" != "" {
        - gen `cons' = 1 if `touse'
        = gen __00000J = 1 if __00000G
        - mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
        = mata st_store(.,tokens(st_local("drcslist")), "__00000G",st_data(.,to
> kens(st_local("drcslist")), "__00000G")*st_matrix("__00000I")[1..1,1..1])
        - }
        - }
        - else if "`rmatrix'" != "" {
        = else if "" != "" {
          tempname Rinv cons
          matrix `Rinv' = inv(`rmatrix')
          if "`scalar'" == "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
          if "`dgen'" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
          else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("orthog" != "" | "" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("orthog" != "" | ""!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if "_d_rcs"!="" {
        - di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
        = di in green "Variables _rcs1 to _rcs1 and _d_rcs1 to _d_rcs1 were cre
> ated"
        - }
        - else {
          di in green "`type' `gen'1 to `gen'`nparams' were created"
          }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _rcs1 has been created as you did not spec
> ify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - return matrix R = `R'
        = return matrix R = __00000K
        - }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _rcs1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "_d_rcs" != "" return local drcslist _d_rcs1
        -------------------------------------------------------- end rcsgen ---
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - matrix `R_bh' = r(R)
      = matrix __00000D = r(R)
      - }
      - }
      - else if `df' == 2 {
      = else if 1 == 2 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(50)
        local bhknots `lowerknot' `r(r1)' `upperknot'
        }
      - else if `df' == 3 {
      = else if 1 == 3 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(33 67)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `upperknot'
        }
      - else if `df' == 4 {
      = else if 1 == 4 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(25 50 75)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `upperknot'
        }
      - else if `df' == 5 {
      = else if 1 == 5 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(20 40 60 80)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `upperknot'
        }
      - else if `df' == 6 {
      = else if 1 == 6 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(17 33 50 67 83)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `uppe
> rknot'
        }
      - else if `df' == 7 {
      = else if 1 == 7 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(14 29 43 57 71 86)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `upperknot'
        }
      - else if `df' == 8 {
      = else if 1 == 8 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(12.5 25 37.5 50 62.5 75 87
> .5)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `r(r7)' `upperknot'
        }
      - else if `df' == 9 {
      = else if 1 == 9 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(11.1 22.2 33.3 44.4 55.6 6
> 6.7 77.8 88.9)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `r(r7)' `r(r8)' `upperknot'
        }
      - else if `df' == 10 {
      = else if 1 == 10 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(10 20 30 40 50 60 70 80 90
> )
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `r(r7)' `r(r8)' `r(r9)' `upperknot'
        }
      - else {
        display as error "DF must be between 1 and 10"
        exit
        }
      - }
      - if `nbhknots' == 0 & "`rcsbaseoff'" == "" & "`cure'" != ""{
      = if 0 == 0 & "" == "" & "" != ""{
        if `df' == 3 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(50 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `upperknot'
        }
        else if `df' == 4{
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(33 67 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `upperknot'
        }
        else if `df' == 5 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(25 50 75 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `upperknot'
        }
        else if `df' == 6 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(20 40 60 80 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `uppe
> rknot'
        }
        else if `df' == 7 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(17 33 50 67 83 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `upperknot'
        }
        else if `df' == 8 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(14 29 43 57 71 86 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `r(r7)' `upperknot'
        }
        else if `df' == 9 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(12.5 25 37.5 50 62.5 75 87
> .5 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `r(r7)' `r(r8)' `upperknot'
        }
        else if `df' == 10 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(11.1 22.2 33.3 44.4 55.6 6
> 6.7 77.8 88.9 95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `r(r7)' `r(r8)' `r(r9)' `upperknot'
        }
        else if `df' == 11 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(10 20 30 40 50 60 70 80 90
>  95)
        local bhknots `lowerknot' `r(r1)' `r(r2)' `r(r3)' `r(r4)' `r(r5)' `r(r6
> )' `r(r7)' `r(r8)' `r(r9)' `r(r10)' `upperknot'
        }
        else {
        display as error "DF must be between 3 and 11"
        exit
        }
        }
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - if "`tvcknots_`tvcvar'_user'" == "" {
      = if "" == "" {
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt' if `touse2', gen(_rcs_`tvcvar') dgen(_d_rcs_`tvcvar') 
> `orthog' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000002 if __000008, gen(_rcs_udca) dgen(_d_rcs_udca) ortho
> g   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "orthog" != "" & "" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_rcs_udca" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _rcs_udca1 = __000002 if __00000G
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "_d_rcs_udca" != "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `dgen'1 = 1 if `touse'
        = quietly gen double _d_rcs_udca1 = 1 if __00000G
        - }
        - else {
          scalar `dgen'1 = 1
          }
        - }
        - local rcslist `gen'1
        = local rcslist _rcs_udca1
        - local drcslist `dgen'1
        = local drcslist _d_rcs_udca1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - tempname R Rinv cons
        - mata: orthgs("`rcslist'","`touse'")
        = mata: orthgs("_rcs_udca1","__00000G")
        - matrix `Rinv' = inv(`R')
        = matrix __00000I = inv(__00000K)
        - if "`dgen'" != "" {
        = if "_d_rcs_udca" != "" {
        - gen `cons' = 1 if `touse'
        = gen __00000J = 1 if __00000G
        - mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
        = mata st_store(.,tokens(st_local("drcslist")), "__00000G",st_data(.,to
> kens(st_local("drcslist")), "__00000G")*st_matrix("__00000I")[1..1,1..1])
        - }
        - }
        - else if "`rmatrix'" != "" {
        = else if "" != "" {
          tempname Rinv cons
          matrix `Rinv' = inv(`rmatrix')
          if "`scalar'" == "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
          if "`dgen'" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
          else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("orthog" != "" | "" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("orthog" != "" | ""!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if "_d_rcs_udca"!="" {
        - di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
        = di in green "Variables _rcs_udca1 to _rcs_udca1 and _d_rcs_udca1 to _
> d_rcs_udca1 were created"
        - }
        - else {
          di in green "`type' `gen'1 to `gen'`nparams' were created"
          }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _rcs_udca1 has been created as you did not
>  specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - return matrix R = `R'
        = return matrix R = __00000K
        - }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _rcs_udca1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "_d_rcs_udca" != "" return local drcslist _d_rcs_udca1
        -------------------------------------------------------- end rcsgen ---
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - tempname R_`tvcvar' Rinv_`tvcvar'
      = tempname R_udca Rinv_udca
      - matrix `R_`tvcvar'' = r(R)
      = matrix __00000G = r(R)
      - }
      - }
      - else if `tvc_`tvcvar'_df'==2 {
      = else if 1==2 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(50)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `upperknot_`tvcvar
> ''
        }
      - else if `tvc_`tvcvar'_df'==3 {
      = else if 1==3 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(33 67)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `upperknot
> _`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==4 {
      = else if 1==4 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(25 50 75)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `u
> pperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==5 {
      = else if 1==5 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(20 40 60 80)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==6 {
      = else if 1==6 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(17 33 50 67 83)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==7 {
      = else if 1==7 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(14 29 43 57 71 86)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==8 {
      = else if 1==8 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(12.5 25 37.5 50 62.5 75 87
> .5)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==9 {
      = else if 1==9 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(11.1 22.2 33.3 44.4 55.6 6
> 6.7 77.8 88.9)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==10 {
      = else if 1==10 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(10 20 30 40 50 60 70 80 90
> )
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `r(r9)' `upperknot_`tvcvar''
        }
      - else {
        display as error "DF for time-dependent effects must be between 1 and 1
> 0"
        exit
        }
      - }
      - }
      - if "`tvcknots_`tvcvar'_user'" == "" {
      = if "" == "" {
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt' if `touse2', gen(_rcs_`tvcvar') dgen(_d_rcs_`tvcvar') 
> `orthog' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000002 if __000008, gen(_rcs_severe_disease) dgen(_d_rcs_s
> evere_disease) orthog   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "orthog" != "" & "" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_rcs_severe_disease" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _rcs_severe_disease1 = __000002 if __00000I
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "_d_rcs_severe_disease" != "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `dgen'1 = 1 if `touse'
        = quietly gen double _d_rcs_severe_disease1 = 1 if __00000I
        - }
        - else {
          scalar `dgen'1 = 1
          }
        - }
        - local rcslist `gen'1
        = local rcslist _rcs_severe_disease1
        - local drcslist `dgen'1
        = local drcslist _d_rcs_severe_disease1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - tempname R Rinv cons
        - mata: orthgs("`rcslist'","`touse'")
        = mata: orthgs("_rcs_severe_disease1","__00000I")
        - matrix `Rinv' = inv(`R')
        = matrix __00000K = inv(__00000M)
        - if "`dgen'" != "" {
        = if "_d_rcs_severe_disease" != "" {
        - gen `cons' = 1 if `touse'
        = gen __00000L = 1 if __00000I
        - mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
        = mata st_store(.,tokens(st_local("drcslist")), "__00000I",st_data(.,to
> kens(st_local("drcslist")), "__00000I")*st_matrix("__00000K")[1..1,1..1])
        - }
        - }
        - else if "`rmatrix'" != "" {
        = else if "" != "" {
          tempname Rinv cons
          matrix `Rinv' = inv(`rmatrix')
          if "`scalar'" == "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
          if "`dgen'" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
          else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("orthog" != "" | "" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("orthog" != "" | ""!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if "_d_rcs_severe_disease"!="" {
        - di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
        = di in green "Variables _rcs_severe_disease1 to _rcs_severe_disease1 a
> nd _d_rcs_severe_disease1 to _d_rcs_severe_disease1 were created"
        - }
        - else {
          di in green "`type' `gen'1 to `gen'`nparams' were created"
          }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _rcs_severe_disease1 has been created as y
> ou did not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - return matrix R = `R'
        = return matrix R = __00000M
        - }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _rcs_severe_disease1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "_d_rcs_severe_disease" != "" return local drcslist _d_rcs_severe_
> disease1
        -------------------------------------------------------- end rcsgen ---
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - tempname R_`tvcvar' Rinv_`tvcvar'
      = tempname R_severe_disease Rinv_severe_disease
      - matrix `R_`tvcvar'' = r(R)
      = matrix __00000I = r(R)
      - }
      - }
      - else if `tvc_`tvcvar'_df'==2 {
      = else if 1==2 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(50)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `upperknot_`tvcvar
> ''
        }
      - else if `tvc_`tvcvar'_df'==3 {
      = else if 1==3 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(33 67)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `upperknot
> _`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==4 {
      = else if 1==4 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(25 50 75)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `u
> pperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==5 {
      = else if 1==5 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(20 40 60 80)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==6 {
      = else if 1==6 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(17 33 50 67 83)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==7 {
      = else if 1==7 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(14 29 43 57 71 86)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==8 {
      = else if 1==8 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(12.5 25 37.5 50 62.5 75 87
> .5)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==9 {
      = else if 1==9 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(11.1 22.2 33.3 44.4 55.6 6
> 6.7 77.8 88.9)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==10 {
      = else if 1==10 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(10 20 30 40 50 60 70 80 90
> )
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `r(r9)' `upperknot_`tvcvar''
        }
      - else {
        display as error "DF for time-dependent effects must be between 1 and 1
> 0"
        exit
        }
      - }
      - }
      - if "`tvcknots_`tvcvar'_user'" == "" {
      = if "" == "" {
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt' if `touse2', gen(_rcs_`tvcvar') dgen(_d_rcs_`tvcvar') 
> `orthog' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000002 if __000008, gen(_rcs_covid_vacc_first) dgen(_d_rcs
> _covid_vacc_first) orthog   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "orthog" != "" & "" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_rcs_covid_vacc_first" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _rcs_covid_vacc_first1 = __000002 if __00000K
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "_d_rcs_covid_vacc_first" != "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `dgen'1 = 1 if `touse'
        = quietly gen double _d_rcs_covid_vacc_first1 = 1 if __00000K
        - }
        - else {
          scalar `dgen'1 = 1
          }
        - }
        - local rcslist `gen'1
        = local rcslist _rcs_covid_vacc_first1
        - local drcslist `dgen'1
        = local drcslist _d_rcs_covid_vacc_first1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - tempname R Rinv cons
        - mata: orthgs("`rcslist'","`touse'")
        = mata: orthgs("_rcs_covid_vacc_first1","__00000K")
        - matrix `Rinv' = inv(`R')
        = matrix __00000M = inv(__00000O)
        - if "`dgen'" != "" {
        = if "_d_rcs_covid_vacc_first" != "" {
        - gen `cons' = 1 if `touse'
        = gen __00000N = 1 if __00000K
        - mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
        = mata st_store(.,tokens(st_local("drcslist")), "__00000K",st_data(.,to
> kens(st_local("drcslist")), "__00000K")*st_matrix("__00000M")[1..1,1..1])
        - }
        - }
        - else if "`rmatrix'" != "" {
        = else if "" != "" {
          tempname Rinv cons
          matrix `Rinv' = inv(`rmatrix')
          if "`scalar'" == "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
          if "`dgen'" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
          else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("orthog" != "" | "" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("orthog" != "" | ""!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if "_d_rcs_covid_vacc_first"!="" {
        - di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
        = di in green "Variables _rcs_covid_vacc_first1 to _rcs_covid_vacc_firs
> t1 and _d_rcs_covid_vacc_first1 to _d_rcs_covid_vacc_first1 were created"
        - }
        - else {
          di in green "`type' `gen'1 to `gen'`nparams' were created"
          }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _rcs_covid_vacc_first1 has been created as
>  you did not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - return matrix R = `R'
        = return matrix R = __00000O
        - }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _rcs_covid_vacc_first1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "_d_rcs_covid_vacc_first" != "" return local drcslist _d_rcs_covid
> _vacc_first1
        -------------------------------------------------------- end rcsgen ---
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - tempname R_`tvcvar' Rinv_`tvcvar'
      = tempname R_covid_vacc_first Rinv_covid_vacc_first
      - matrix `R_`tvcvar'' = r(R)
      = matrix __00000K = r(R)
      - }
      - }
      - else if `tvc_`tvcvar'_df'==2 {
      = else if 1==2 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(50)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `upperknot_`tvcvar
> ''
        }
      - else if `tvc_`tvcvar'_df'==3 {
      = else if 1==3 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(33 67)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `upperknot
> _`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==4 {
      = else if 1==4 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(25 50 75)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `u
> pperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==5 {
      = else if 1==5 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(20 40 60 80)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==6 {
      = else if 1==6 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(17 33 50 67 83)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==7 {
      = else if 1==7 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(14 29 43 57 71 86)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==8 {
      = else if 1==8 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(12.5 25 37.5 50 62.5 75 87
> .5)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==9 {
      = else if 1==9 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(11.1 22.2 33.3 44.4 55.6 6
> 6.7 77.8 88.9)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==10 {
      = else if 1==10 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(10 20 30 40 50 60 70 80 90
> )
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `r(r9)' `upperknot_`tvcvar''
        }
      - else {
        display as error "DF for time-dependent effects must be between 1 and 1
> 0"
        exit
        }
      - }
      - }
      - if "`tvcknots_`tvcvar'_user'" == "" {
      = if "" == "" {
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt' if `touse2', gen(_rcs_`tvcvar') dgen(_d_rcs_`tvcvar') 
> `orthog' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000002 if __000008, gen(_rcs_liver_trans) dgen(_d_rcs_live
> r_trans) orthog   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "orthog" != "" & "" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_rcs_liver_trans" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _rcs_liver_trans1 = __000002 if __00000M
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "_d_rcs_liver_trans" != "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `dgen'1 = 1 if `touse'
        = quietly gen double _d_rcs_liver_trans1 = 1 if __00000M
        - }
        - else {
          scalar `dgen'1 = 1
          }
        - }
        - local rcslist `gen'1
        = local rcslist _rcs_liver_trans1
        - local drcslist `dgen'1
        = local drcslist _d_rcs_liver_trans1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - tempname R Rinv cons
        - mata: orthgs("`rcslist'","`touse'")
        = mata: orthgs("_rcs_liver_trans1","__00000M")
        - matrix `Rinv' = inv(`R')
        = matrix __00000O = inv(__00000Q)
        - if "`dgen'" != "" {
        = if "_d_rcs_liver_trans" != "" {
        - gen `cons' = 1 if `touse'
        = gen __00000P = 1 if __00000M
        - mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
        = mata st_store(.,tokens(st_local("drcslist")), "__00000M",st_data(.,to
> kens(st_local("drcslist")), "__00000M")*st_matrix("__00000O")[1..1,1..1])
        - }
        - }
        - else if "`rmatrix'" != "" {
        = else if "" != "" {
          tempname Rinv cons
          matrix `Rinv' = inv(`rmatrix')
          if "`scalar'" == "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
          if "`dgen'" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
          else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("orthog" != "" | "" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("orthog" != "" | ""!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if "_d_rcs_liver_trans"!="" {
        - di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
        = di in green "Variables _rcs_liver_trans1 to _rcs_liver_trans1 and _d_
> rcs_liver_trans1 to _d_rcs_liver_trans1 were created"
        - }
        - else {
          di in green "`type' `gen'1 to `gen'`nparams' were created"
          }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _rcs_liver_trans1 has been created as you 
> did not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - return matrix R = `R'
        = return matrix R = __00000Q
        - }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _rcs_liver_trans1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "_d_rcs_liver_trans" != "" return local drcslist _d_rcs_liver_tran
> s1
        -------------------------------------------------------- end rcsgen ---
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - tempname R_`tvcvar' Rinv_`tvcvar'
      = tempname R_liver_trans Rinv_liver_trans
      - matrix `R_`tvcvar'' = r(R)
      = matrix __00000M = r(R)
      - }
      - }
      - else if `tvc_`tvcvar'_df'==2 {
      = else if 1==2 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(50)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `upperknot_`tvcvar
> ''
        }
      - else if `tvc_`tvcvar'_df'==3 {
      = else if 1==3 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(33 67)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `upperknot
> _`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==4 {
      = else if 1==4 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(25 50 75)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `u
> pperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==5 {
      = else if 1==5 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(20 40 60 80)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==6 {
      = else if 1==6 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(17 33 50 67 83)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==7 {
      = else if 1==7 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(14 29 43 57 71 86)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==8 {
      = else if 1==8 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(12.5 25 37.5 50 62.5 75 87
> .5)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==9 {
      = else if 1==9 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(11.1 22.2 33.3 44.4 55.6 6
> 6.7 77.8 88.9)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==10 {
      = else if 1==10 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(10 20 30 40 50 60 70 80 90
> )
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `r(r9)' `upperknot_`tvcvar''
        }
      - else {
        display as error "DF for time-dependent effects must be between 1 and 1
> 0"
        exit
        }
      - }
      - }
      - if "`tvcknots_`tvcvar'_user'" == "" {
      = if "" == "" {
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt' if `touse2', gen(_rcs_`tvcvar') dgen(_d_rcs_`tvcvar') 
> `orthog' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000002 if __000008, gen(_rcs_age_tv) dgen(_d_rcs_age_tv) o
> rthog   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "orthog" != "" & "" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_rcs_age_tv" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _rcs_age_tv1 = __000002 if __00000O
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "_d_rcs_age_tv" != "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `dgen'1 = 1 if `touse'
        = quietly gen double _d_rcs_age_tv1 = 1 if __00000O
        - }
        - else {
          scalar `dgen'1 = 1
          }
        - }
        - local rcslist `gen'1
        = local rcslist _rcs_age_tv1
        - local drcslist `dgen'1
        = local drcslist _d_rcs_age_tv1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - tempname R Rinv cons
        - mata: orthgs("`rcslist'","`touse'")
        = mata: orthgs("_rcs_age_tv1","__00000O")
        - matrix `Rinv' = inv(`R')
        = matrix __00000Q = inv(__00000S)
        - if "`dgen'" != "" {
        = if "_d_rcs_age_tv" != "" {
        - gen `cons' = 1 if `touse'
        = gen __00000R = 1 if __00000O
        - mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
        = mata st_store(.,tokens(st_local("drcslist")), "__00000O",st_data(.,to
> kens(st_local("drcslist")), "__00000O")*st_matrix("__00000Q")[1..1,1..1])
        - }
        - }
        - else if "`rmatrix'" != "" {
        = else if "" != "" {
          tempname Rinv cons
          matrix `Rinv' = inv(`rmatrix')
          if "`scalar'" == "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
          if "`dgen'" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
          else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("orthog" != "" | "" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("orthog" != "" | ""!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if "_d_rcs_age_tv"!="" {
        - di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
        = di in green "Variables _rcs_age_tv1 to _rcs_age_tv1 and _d_rcs_age_tv
> 1 to _d_rcs_age_tv1 were created"
        - }
        - else {
          di in green "`type' `gen'1 to `gen'`nparams' were created"
          }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _rcs_age_tv1 has been created as you did n
> ot specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "orthog" != "" {
        - return matrix R = `R'
        = return matrix R = __00000S
        - }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _rcs_age_tv1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "_d_rcs_age_tv" != "" return local drcslist _d_rcs_age_tv1
        -------------------------------------------------------- end rcsgen ---
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - tempname R_`tvcvar' Rinv_`tvcvar'
      = tempname R_age_tv Rinv_age_tv
      - matrix `R_`tvcvar'' = r(R)
      = matrix __00000O = r(R)
      - }
      - }
      - else if `tvc_`tvcvar'_df'==2 {
      = else if 1==2 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(50)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `upperknot_`tvcvar
> ''
        }
      - else if `tvc_`tvcvar'_df'==3 {
      = else if 1==3 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(33 67)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `upperknot
> _`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==4 {
      = else if 1==4 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(25 50 75)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `u
> pperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==5 {
      = else if 1==5 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(20 40 60 80)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==6 {
      = else if 1==6 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(17 33 50 67 83)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==7 {
      = else if 1==7 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(14 29 43 57 71 86)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==8 {
      = else if 1==8 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(12.5 25 37.5 50 62.5 75 87
> .5)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==9 {
      = else if 1==9 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(11.1 22.2 33.3 44.4 55.6 6
> 6.7 77.8 88.9)
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `upperknot_`tvcvar''
        }
      - else if `tvc_`tvcvar'_df'==10 {
      = else if 1==10 {
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(10 20 30 40 50 60 70 80 90
> )
        local tvcknots_`tvcvar' `lowerknot_`tvcvar'' `r(r1)' `r(r2)' `r(r3)' `r
> (r4)' `r(r5)' `r(r6)' `r(r7)' `r(r8)' `r(r9)' `upperknot_`tvcvar''
        }
      - else {
        display as error "DF for time-dependent effects must be between 1 and 1
> 0"
        exit
        }
      - }
      - }
      - }
      - if "`verbose'"=="verbose" display as txt "Generating Spline Variables"
      = if ""=="verbose" display as txt "Generating Spline Variables"
      - if `nbhknots'>0 & "`rcsbaseoff'" == "" {
      = if 0>0 & "" == "" {
        local bhknots `lowerknot'
        forvalues i=1/`nbhknots' {
        if substr("`knscale'",1,1) == "t" {
        local addknot = ln(real(word("`knots'",`i')))
        }
        else if substr("`knscale'",1,1) == "l" {
        local addknot = word("`knots'",`i')
        }
        else if substr("`knscale'",1,1) == "c" {
        local tmpknot = word("`knots'",`i')
        qui _pctile `lnt' if `touse' & _d==1 `wt', p(`tmpknot')
        local addknot = `r(r1)'
        }
        local bhknots `bhknots' `addknot'
        }
        local bhknots `bhknots' `upperknot'
        }
      - if "`df'" != "1" & "`rcsbaseoff'" == "" {
      = if "1" != "1" & "" == "" {
        if "`:list dups bhknots'" != "" {
        display as error "You have duplicate knots positions for the baseline."
        display as error "Try using fewer degrees of freedom or specifying the 
> knots yourself."
        exit 198
        }
        forvalues i = 2/ `=wordcount("`bhknots'") - 1' {
        if `=word("`bhknots'",`i')'<=`lowerknot' {
        di as error "You have an internal knot <= the lower boundary knot"
        exit 198
        }
        if `=word("`bhknots'",`i')'>=`upperknot' {
        di as error "You have an internal knot >= the upper boundary knot"
        exit 198
        }
        }
        qui rcsgen `lnt' if `touse2', knots(`bhknots') gen(_rcs) dgen(_d_rcs) `
> orthog' `rmatrixopt' `reverse' `nosecondder' `nofirstder'
        if "`orthog'" != "" {
        matrix `R_bh' = r(R)
        }
        }
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - if `tvc_`tvcvar'_df' != 1 {
      = if 1 != 1 {
        if "`tvcknots_`tvcvar'_user'" != "" {
        local n_`tvcvar': word count `tvcknots_`tvcvar'_user'
        local tvcknots_`tvcvar' `lowerknot_`tvcvar''
        forvalues i=1/`n_`tvcvar'' {
        if substr("`knscale'",1,1) == "t" {
        local addknot = ln(real(word("`tvcknots_`tvcvar'_user'",`i')))
        }
        else if substr("`knscale'",1,1) == "l" {
        local addknot = word("`tvcknots_`tvcvar'_user'",`i')
        }
        else if substr("`knscale'",1,1) == "c" {
        local tmpknot = word("`tvcknots_`tvcvar'_user'",`i')
        qui centile `lnt' if `touse' & _d==1, centile(`tmpknot')
        local addknot = `r(c_1)'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `addknot'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `upperknot_`tvcvar''
        }
        if "`:list dups tvcknots_`tvcvar''" != "" {
        display as error "You have duplicate knots positions for the time-depen
> dent effect of `tvcvar'"
        exit 198
        }
        forvalues i = 2/ `=wordcount("`tvcknots_`tvcvar''") - 1' {
        if `=word("`tvcknots_`tvcvar''",`i')'<=`lowerknot_`tvcvar'' {
        di as error "You have an internal knot <= the lower boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        if `=word("`tvcknots_`tvcvar''",`i')'>=`upperknot_`tvcvar'' {
        di as error "You have an internal knot >= the upper boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        }
        qui rcsgen `lnt' if `touse2', knots(`tvcknots_`tvcvar'') gen(_rcs_`tvcv
> ar') dgen(_d_rcs_`tvcvar') `orthog' `reverse' `nosecondder' `nofirstder'
        if "`orthog'" != "" {
        tempname R_`tvcvar' Rinv_`tvcvar'
        matrix `R_`tvcvar'' = r(R)
        }
        }
      - }
      - if `tvc_`tvcvar'_df' != 1 {
      = if 1 != 1 {
        if "`tvcknots_`tvcvar'_user'" != "" {
        local n_`tvcvar': word count `tvcknots_`tvcvar'_user'
        local tvcknots_`tvcvar' `lowerknot_`tvcvar''
        forvalues i=1/`n_`tvcvar'' {
        if substr("`knscale'",1,1) == "t" {
        local addknot = ln(real(word("`tvcknots_`tvcvar'_user'",`i')))
        }
        else if substr("`knscale'",1,1) == "l" {
        local addknot = word("`tvcknots_`tvcvar'_user'",`i')
        }
        else if substr("`knscale'",1,1) == "c" {
        local tmpknot = word("`tvcknots_`tvcvar'_user'",`i')
        qui centile `lnt' if `touse' & _d==1, centile(`tmpknot')
        local addknot = `r(c_1)'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `addknot'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `upperknot_`tvcvar''
        }
        if "`:list dups tvcknots_`tvcvar''" != "" {
        display as error "You have duplicate knots positions for the time-depen
> dent effect of `tvcvar'"
        exit 198
        }
        forvalues i = 2/ `=wordcount("`tvcknots_`tvcvar''") - 1' {
        if `=word("`tvcknots_`tvcvar''",`i')'<=`lowerknot_`tvcvar'' {
        di as error "You have an internal knot <= the lower boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        if `=word("`tvcknots_`tvcvar''",`i')'>=`upperknot_`tvcvar'' {
        di as error "You have an internal knot >= the upper boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        }
        qui rcsgen `lnt' if `touse2', knots(`tvcknots_`tvcvar'') gen(_rcs_`tvcv
> ar') dgen(_d_rcs_`tvcvar') `orthog' `reverse' `nosecondder' `nofirstder'
        if "`orthog'" != "" {
        tempname R_`tvcvar' Rinv_`tvcvar'
        matrix `R_`tvcvar'' = r(R)
        }
        }
      - }
      - if `tvc_`tvcvar'_df' != 1 {
      = if 1 != 1 {
        if "`tvcknots_`tvcvar'_user'" != "" {
        local n_`tvcvar': word count `tvcknots_`tvcvar'_user'
        local tvcknots_`tvcvar' `lowerknot_`tvcvar''
        forvalues i=1/`n_`tvcvar'' {
        if substr("`knscale'",1,1) == "t" {
        local addknot = ln(real(word("`tvcknots_`tvcvar'_user'",`i')))
        }
        else if substr("`knscale'",1,1) == "l" {
        local addknot = word("`tvcknots_`tvcvar'_user'",`i')
        }
        else if substr("`knscale'",1,1) == "c" {
        local tmpknot = word("`tvcknots_`tvcvar'_user'",`i')
        qui centile `lnt' if `touse' & _d==1, centile(`tmpknot')
        local addknot = `r(c_1)'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `addknot'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `upperknot_`tvcvar''
        }
        if "`:list dups tvcknots_`tvcvar''" != "" {
        display as error "You have duplicate knots positions for the time-depen
> dent effect of `tvcvar'"
        exit 198
        }
        forvalues i = 2/ `=wordcount("`tvcknots_`tvcvar''") - 1' {
        if `=word("`tvcknots_`tvcvar''",`i')'<=`lowerknot_`tvcvar'' {
        di as error "You have an internal knot <= the lower boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        if `=word("`tvcknots_`tvcvar''",`i')'>=`upperknot_`tvcvar'' {
        di as error "You have an internal knot >= the upper boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        }
        qui rcsgen `lnt' if `touse2', knots(`tvcknots_`tvcvar'') gen(_rcs_`tvcv
> ar') dgen(_d_rcs_`tvcvar') `orthog' `reverse' `nosecondder' `nofirstder'
        if "`orthog'" != "" {
        tempname R_`tvcvar' Rinv_`tvcvar'
        matrix `R_`tvcvar'' = r(R)
        }
        }
      - }
      - if `tvc_`tvcvar'_df' != 1 {
      = if 1 != 1 {
        if "`tvcknots_`tvcvar'_user'" != "" {
        local n_`tvcvar': word count `tvcknots_`tvcvar'_user'
        local tvcknots_`tvcvar' `lowerknot_`tvcvar''
        forvalues i=1/`n_`tvcvar'' {
        if substr("`knscale'",1,1) == "t" {
        local addknot = ln(real(word("`tvcknots_`tvcvar'_user'",`i')))
        }
        else if substr("`knscale'",1,1) == "l" {
        local addknot = word("`tvcknots_`tvcvar'_user'",`i')
        }
        else if substr("`knscale'",1,1) == "c" {
        local tmpknot = word("`tvcknots_`tvcvar'_user'",`i')
        qui centile `lnt' if `touse' & _d==1, centile(`tmpknot')
        local addknot = `r(c_1)'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `addknot'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `upperknot_`tvcvar''
        }
        if "`:list dups tvcknots_`tvcvar''" != "" {
        display as error "You have duplicate knots positions for the time-depen
> dent effect of `tvcvar'"
        exit 198
        }
        forvalues i = 2/ `=wordcount("`tvcknots_`tvcvar''") - 1' {
        if `=word("`tvcknots_`tvcvar''",`i')'<=`lowerknot_`tvcvar'' {
        di as error "You have an internal knot <= the lower boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        if `=word("`tvcknots_`tvcvar''",`i')'>=`upperknot_`tvcvar'' {
        di as error "You have an internal knot >= the upper boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        }
        qui rcsgen `lnt' if `touse2', knots(`tvcknots_`tvcvar'') gen(_rcs_`tvcv
> ar') dgen(_d_rcs_`tvcvar') `orthog' `reverse' `nosecondder' `nofirstder'
        if "`orthog'" != "" {
        tempname R_`tvcvar' Rinv_`tvcvar'
        matrix `R_`tvcvar'' = r(R)
        }
        }
      - }
      - if `tvc_`tvcvar'_df' != 1 {
      = if 1 != 1 {
        if "`tvcknots_`tvcvar'_user'" != "" {
        local n_`tvcvar': word count `tvcknots_`tvcvar'_user'
        local tvcknots_`tvcvar' `lowerknot_`tvcvar''
        forvalues i=1/`n_`tvcvar'' {
        if substr("`knscale'",1,1) == "t" {
        local addknot = ln(real(word("`tvcknots_`tvcvar'_user'",`i')))
        }
        else if substr("`knscale'",1,1) == "l" {
        local addknot = word("`tvcknots_`tvcvar'_user'",`i')
        }
        else if substr("`knscale'",1,1) == "c" {
        local tmpknot = word("`tvcknots_`tvcvar'_user'",`i')
        qui centile `lnt' if `touse' & _d==1, centile(`tmpknot')
        local addknot = `r(c_1)'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `addknot'
        }
        local tvcknots_`tvcvar' `tvcknots_`tvcvar'' `upperknot_`tvcvar''
        }
        if "`:list dups tvcknots_`tvcvar''" != "" {
        display as error "You have duplicate knots positions for the time-depen
> dent effect of `tvcvar'"
        exit 198
        }
        forvalues i = 2/ `=wordcount("`tvcknots_`tvcvar''") - 1' {
        if `=word("`tvcknots_`tvcvar''",`i')'<=`lowerknot_`tvcvar'' {
        di as error "You have an internal knot <= the lower boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        if `=word("`tvcknots_`tvcvar''",`i')'>=`upperknot_`tvcvar'' {
        di as error "You have an internal knot >= the upper boundary knot for t
> he time-dependent effect of `tvcvar'"
        exit 198
        }
        }
        qui rcsgen `lnt' if `touse2', knots(`tvcknots_`tvcvar'') gen(_rcs_`tvcv
> ar') dgen(_d_rcs_`tvcvar') `orthog' `reverse' `nosecondder' `nofirstder'
        if "`orthog'" != "" {
        tempname R_`tvcvar' Rinv_`tvcvar'
        matrix `R_`tvcvar'' = r(R)
        }
        }
      - }
      - }
      - if "`rmat'" != "" {
      = if "" != "" {
        local orthog orthog
        matrix `R_bh' = `rmatrix'
        }
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - qui gen double `lnt0' = ln(_t0) if `touse2' & _t0>0
      = qui gen double __000003 = ln(_t0) if __000008 & _t0>0
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - local rmatrixopt rmatrix(`R_bh')
      = local rmatrixopt rmatrix(__00000D)
      - }
      - if "`df'" == "1" & "`rcsbaseoff'" == "" {
      = if "1" == "1" & "" == "" {
      - qui rcsgen `lnt0' if `touse2' & _t0>0, gen(_s0_rcs) `rmatrixopt' `rever
> se' `nosecondder' `nofirstder'
      = qui rcsgen __000003 if __000008 & _t0>0, gen(_s0_rcs) rmatrix(__00000D)
>    
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "" != "" & "__00000D" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_s0_rcs" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _s0_rcs1 = __000003 if __00000Q
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
        - local rcslist `gen'1
        = local rcslist _s0_rcs1
        - local drcslist `dgen'1
        = local drcslist 1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "" != "" {
          tempname R Rinv cons
          mata: orthgs("`rcslist'","`touse'")
          matrix `Rinv' = inv(`R')
          if "`dgen'" != "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
        - else if "`rmatrix'" != "" {
        = else if "__00000D" != "" {
        - tempname Rinv cons
        - matrix `Rinv' = inv(`rmatrix')
        = matrix __00000R = inv(__00000D)
        - if "`scalar'" == "" {
        = if "" == "" {
        - gen `cons' = 1 if `touse'
        = gen __00000S = 1 if __00000Q
        - mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
        = mata st_store(.,tokens(st_local("rcslist")), "__00000Q",(st_data(., t
> okens(st_local("rcslist") + " __00000S"), "__00000Q"))*st_matrix("__00000R")[
> ,1..1])
        - if "`dgen'" != "" {
        = if "" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
        - }
        - else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
        - }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("" != "" | "__00000D" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("" != "" | "__00000D"!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if ""!="" {
          di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
          }
        - else {
        - di in green "`type' `gen'1 to `gen'`nparams' were created"
        = di in green "Variables _s0_rcs1 to _s0_rcs1 were created"
        - }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _s0_rcs1 has been created as you did not s
> pecify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "" != "" {
          return matrix R = `R'
          }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _s0_rcs1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "" != "" return local drcslist 1
        -------------------------------------------------------- end rcsgen ---
      - }
      - else if "`df'" != "1" & "`rcsbaseoff'" == "" {
      = else if "1" != "1" & "" == "" {
        qui rcsgen `lnt0' if `touse2' & _t0>0, knots(`bhknots') gen(_s0_rcs) `r
> matrixopt' `reverse' `nosecondder' `nofirstder'
        }
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - local rmatrixopt rmatrix(`R_`tvcvar'')
      = local rmatrixopt rmatrix(__00000G)
      - }
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt0' if `touse2' & _t0>0, gen(_s0_rcs_`tvcvar') `rmatrixop
> t' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000003 if __000008 & _t0>0, gen(_s0_rcs_udca) rmatrix(__00
> 000G)   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "" != "" & "__00000G" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_s0_rcs_udca" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _s0_rcs_udca1 = __000003 if __00000Q
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
        - local rcslist `gen'1
        = local rcslist _s0_rcs_udca1
        - local drcslist `dgen'1
        = local drcslist 1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "" != "" {
          tempname R Rinv cons
          mata: orthgs("`rcslist'","`touse'")
          matrix `Rinv' = inv(`R')
          if "`dgen'" != "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
        - else if "`rmatrix'" != "" {
        = else if "__00000G" != "" {
        - tempname Rinv cons
        - matrix `Rinv' = inv(`rmatrix')
        = matrix __00000R = inv(__00000G)
        - if "`scalar'" == "" {
        = if "" == "" {
        - gen `cons' = 1 if `touse'
        = gen __00000S = 1 if __00000Q
        - mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
        = mata st_store(.,tokens(st_local("rcslist")), "__00000Q",(st_data(., t
> okens(st_local("rcslist") + " __00000S"), "__00000Q"))*st_matrix("__00000R")[
> ,1..1])
        - if "`dgen'" != "" {
        = if "" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
        - }
        - else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
        - }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("" != "" | "__00000G" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("" != "" | "__00000G"!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if ""!="" {
          di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
          }
        - else {
        - di in green "`type' `gen'1 to `gen'`nparams' were created"
        = di in green "Variables _s0_rcs_udca1 to _s0_rcs_udca1 were created"
        - }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _s0_rcs_udca1 has been created as you did 
> not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "" != "" {
          return matrix R = `R'
          }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _s0_rcs_udca1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "" != "" return local drcslist 1
        -------------------------------------------------------- end rcsgen ---
      - }
      - else if `tvc_`tvcvar'_df' != 1 {
      = else if 1 != 1 {
        qui rcsgen `lnt0' if `touse2' & _t0>0, knots(`tvcknots_`tvcvar'') gen(_
> s0_rcs_`tvcvar') `rmatrixopt' `reverse' `nosecondder' `nofirstder'
        }
      - }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - local rmatrixopt rmatrix(`R_`tvcvar'')
      = local rmatrixopt rmatrix(__00000I)
      - }
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt0' if `touse2' & _t0>0, gen(_s0_rcs_`tvcvar') `rmatrixop
> t' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000003 if __000008 & _t0>0, gen(_s0_rcs_severe_disease) rm
> atrix(__00000I)   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "" != "" & "__00000I" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_s0_rcs_severe_disease" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _s0_rcs_severe_disease1 = __000003 if __00000Q
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
        - local rcslist `gen'1
        = local rcslist _s0_rcs_severe_disease1
        - local drcslist `dgen'1
        = local drcslist 1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "" != "" {
          tempname R Rinv cons
          mata: orthgs("`rcslist'","`touse'")
          matrix `Rinv' = inv(`R')
          if "`dgen'" != "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
        - else if "`rmatrix'" != "" {
        = else if "__00000I" != "" {
        - tempname Rinv cons
        - matrix `Rinv' = inv(`rmatrix')
        = matrix __00000R = inv(__00000I)
        - if "`scalar'" == "" {
        = if "" == "" {
        - gen `cons' = 1 if `touse'
        = gen __00000S = 1 if __00000Q
        - mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
        = mata st_store(.,tokens(st_local("rcslist")), "__00000Q",(st_data(., t
> okens(st_local("rcslist") + " __00000S"), "__00000Q"))*st_matrix("__00000R")[
> ,1..1])
        - if "`dgen'" != "" {
        = if "" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
        - }
        - else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
        - }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("" != "" | "__00000I" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("" != "" | "__00000I"!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if ""!="" {
          di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
          }
        - else {
        - di in green "`type' `gen'1 to `gen'`nparams' were created"
        = di in green "Variables _s0_rcs_severe_disease1 to _s0_rcs_severe_dise
> ase1 were created"
        - }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _s0_rcs_severe_disease1 has been created a
> s you did not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "" != "" {
          return matrix R = `R'
          }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _s0_rcs_severe_disease1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "" != "" return local drcslist 1
        -------------------------------------------------------- end rcsgen ---
      - }
      - else if `tvc_`tvcvar'_df' != 1 {
      = else if 1 != 1 {
        qui rcsgen `lnt0' if `touse2' & _t0>0, knots(`tvcknots_`tvcvar'') gen(_
> s0_rcs_`tvcvar') `rmatrixopt' `reverse' `nosecondder' `nofirstder'
        }
      - }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - local rmatrixopt rmatrix(`R_`tvcvar'')
      = local rmatrixopt rmatrix(__00000K)
      - }
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt0' if `touse2' & _t0>0, gen(_s0_rcs_`tvcvar') `rmatrixop
> t' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000003 if __000008 & _t0>0, gen(_s0_rcs_covid_vacc_first) 
> rmatrix(__00000K)   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "" != "" & "__00000K" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_s0_rcs_covid_vacc_first" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _s0_rcs_covid_vacc_first1 = __000003 if __00000Q
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
        - local rcslist `gen'1
        = local rcslist _s0_rcs_covid_vacc_first1
        - local drcslist `dgen'1
        = local drcslist 1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "" != "" {
          tempname R Rinv cons
          mata: orthgs("`rcslist'","`touse'")
          matrix `Rinv' = inv(`R')
          if "`dgen'" != "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
        - else if "`rmatrix'" != "" {
        = else if "__00000K" != "" {
        - tempname Rinv cons
        - matrix `Rinv' = inv(`rmatrix')
        = matrix __00000R = inv(__00000K)
        - if "`scalar'" == "" {
        = if "" == "" {
        - gen `cons' = 1 if `touse'
        = gen __00000S = 1 if __00000Q
        - mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
        = mata st_store(.,tokens(st_local("rcslist")), "__00000Q",(st_data(., t
> okens(st_local("rcslist") + " __00000S"), "__00000Q"))*st_matrix("__00000R")[
> ,1..1])
        - if "`dgen'" != "" {
        = if "" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
        - }
        - else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
        - }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("" != "" | "__00000K" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("" != "" | "__00000K"!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if ""!="" {
          di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
          }
        - else {
        - di in green "`type' `gen'1 to `gen'`nparams' were created"
        = di in green "Variables _s0_rcs_covid_vacc_first1 to _s0_rcs_covid_vac
> c_first1 were created"
        - }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _s0_rcs_covid_vacc_first1 has been created
>  as you did not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "" != "" {
          return matrix R = `R'
          }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _s0_rcs_covid_vacc_first1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "" != "" return local drcslist 1
        -------------------------------------------------------- end rcsgen ---
      - }
      - else if `tvc_`tvcvar'_df' != 1 {
      = else if 1 != 1 {
        qui rcsgen `lnt0' if `touse2' & _t0>0, knots(`tvcknots_`tvcvar'') gen(_
> s0_rcs_`tvcvar') `rmatrixopt' `reverse' `nosecondder' `nofirstder'
        }
      - }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - local rmatrixopt rmatrix(`R_`tvcvar'')
      = local rmatrixopt rmatrix(__00000M)
      - }
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt0' if `touse2' & _t0>0, gen(_s0_rcs_`tvcvar') `rmatrixop
> t' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000003 if __000008 & _t0>0, gen(_s0_rcs_liver_trans) rmatr
> ix(__00000M)   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "" != "" & "__00000M" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_s0_rcs_liver_trans" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _s0_rcs_liver_trans1 = __000003 if __00000Q
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
        - local rcslist `gen'1
        = local rcslist _s0_rcs_liver_trans1
        - local drcslist `dgen'1
        = local drcslist 1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "" != "" {
          tempname R Rinv cons
          mata: orthgs("`rcslist'","`touse'")
          matrix `Rinv' = inv(`R')
          if "`dgen'" != "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
        - else if "`rmatrix'" != "" {
        = else if "__00000M" != "" {
        - tempname Rinv cons
        - matrix `Rinv' = inv(`rmatrix')
        = matrix __00000R = inv(__00000M)
        - if "`scalar'" == "" {
        = if "" == "" {
        - gen `cons' = 1 if `touse'
        = gen __00000S = 1 if __00000Q
        - mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
        = mata st_store(.,tokens(st_local("rcslist")), "__00000Q",(st_data(., t
> okens(st_local("rcslist") + " __00000S"), "__00000Q"))*st_matrix("__00000R")[
> ,1..1])
        - if "`dgen'" != "" {
        = if "" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
        - }
        - else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
        - }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("" != "" | "__00000M" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("" != "" | "__00000M"!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if ""!="" {
          di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
          }
        - else {
        - di in green "`type' `gen'1 to `gen'`nparams' were created"
        = di in green "Variables _s0_rcs_liver_trans1 to _s0_rcs_liver_trans1 w
> ere created"
        - }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _s0_rcs_liver_trans1 has been created as y
> ou did not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "" != "" {
          return matrix R = `R'
          }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _s0_rcs_liver_trans1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "" != "" return local drcslist 1
        -------------------------------------------------------- end rcsgen ---
      - }
      - else if `tvc_`tvcvar'_df' != 1 {
      = else if 1 != 1 {
        qui rcsgen `lnt0' if `touse2' & _t0>0, knots(`tvcknots_`tvcvar'') gen(_
> s0_rcs_`tvcvar') `rmatrixopt' `reverse' `nosecondder' `nofirstder'
        }
      - }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - local rmatrixopt rmatrix(`R_`tvcvar'')
      = local rmatrixopt rmatrix(__00000O)
      - }
      - if `tvc_`tvcvar'_df' == 1 {
      = if 1 == 1 {
      - qui rcsgen `lnt0' if `touse2' & _t0>0, gen(_s0_rcs_`tvcvar') `rmatrixop
> t' `reverse' `nosecondder' `nofirstder'
      = qui rcsgen __000003 if __000008 & _t0>0, gen(_s0_rcs_age_tv) rmatrix(__
> 00000O)   
        ------------------------------------------------------ begin rcsgen ---
        - version 10.0
        - syntax [varlist(default=none)] [if] [in] , [Gen(string) DGen(string) 
> Knots(numlist) BKnots(numlist max=2) Orthog Percentiles(numlist ascending) RM
> ATrix(name) DF(int 0) IF2(string) FW(varname) REVerse SCAlar(string) NOSecond
> der NOFirstder CENTer(string) RMSKnots(string) ]
        - marksample touse
        - if "`knots'" != "" {
        = if "" != "" {
          numlist "`knots'", sort
          local knots `r(numlist)'
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          if "`varlist'" != "" {
          display as error "You can't specify both a varname and the scalar opt
> ion"
          exit 198
          }
          if "`df'" != "0" {
          display as error "You can't specify the df option with the scalar opt
> ion"
          exit 198
          }
          if "`percentiles'" != "" {
          display as error "You can't specify the percentiles option with the s
> calar option"
          exit 198
          }
          if "`rmsknots'" != "" {
          display as error "You can't specify the rmsknots option with the scal
> ar option"
          exit 198
          }
          if "`orthog'" != "" {
          display as error "You can't specify the orthog option with the scalar
>  option"
          exit 198
          }
          if "`fw'" != "" {
          display as error "You can't specify the fw option with the scalar opt
> ion"
          exit 198
          }
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if (`rmsknots' < 3 | `rmsknots' > 7) {
          display as err "Can only specify k = 3, ..., 7 knots as detailed in T
> able 2.3 in Regression Modeling Strategies by F. Harrell."
          exit 198
          }
          }
        - if "`knots'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`percentiles'" != "" & "`rmsknots'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`df'" != "0" & "`rmsknots'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df, percentiles and rmsknots o
> ptions can be used"
          exit 198
          }
        - if "`knots'" != "" & "`percentiles'" != "" {
        = if "" != "" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`knots'" != "" & "`df'" != "0" {
        = if "" != "" & "0" != "0" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`df'" != "0" & "`percentiles'" != "" {
        = if "0" != "0" & "" != "" {
          display as err "Only one of the knots, df and percentiles options can
>  be used"
          exit 198
          }
        - if "`bknots'" != "" & "`df'" == "0" {
        = if "" != "" & "0" == "0" {
          display as err "Boundary knots can only be defined with the degrees o
> f freedom option"
          exit 198
          }
        - if "`orthog'" != "" & "`rmatrix'" != "" {
        = if "" != "" & "__00000O" != "" {
          display as error "Only one of the orthog and rmatrix options  can be 
> specified"
          exit 198
          }
        - if "`center'" != "" & "`reverse'" != "" {
        = if "" != "" & "" != "" {
          display as error "The center option cannot be used when using the rev
> erse option"
          exit 198
          }
        - if "`nofirstder'" != "" & "`nosecondder'" != "" {
        = if "" != "" & "" != "" {
          display as error "Only one of the nofirstder and nosecondder can be s
> pecified"
          exit 198
          }
        - if "`gen'" == "" {
        = if "_s0_rcs_age_tv" == "" {
          di in red "Must specify name for cubic splines basis"
          exit 198
          }
        - if "`rmsknots'" != "" {
        = if "" != "" {
          if `rmsknots' == 3 {
          local percentiles 10 50 90
          }
          if `rmsknots' == 4 {
          local percentiles 5 35 65 95
          }
          if `rmsknots' == 5 {
          local percentiles 5 27.5 50 72.5 95
          }
          if `rmsknots' == 6 {
          local percentiles 5 23 41 59 77 95
          }
          if `rmsknots' == 7 {
          local percentiles 2.5 18.33 34.17 50 65.83 81.67 97.5
          }
          }
        - if "`percentiles'" != "" {
        = if "" != "" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          local knots
          local percentilesm
          foreach ptile in `percentiles' {
          summ `varlist' if `touse' `aif', meanonly
          if `ptile' == 0 {
          local knots `r(min)'
          }
          else if `ptile' == 100 {
          local knots `knots' `r(max)'
          }
          else {
          local percentilesm `percentilesm' `ptile'
          }
          }
          local dfp: word count `percentilesm'
          _pctile `varlist' if `touse' `aif' `fw', p(`percentilesm')
          forvalues i= 1/`dfp' {
          local knots `knots' `r(r`i')'
          }
          local knots : list sort knots
          }
        - if "`df'" > "1" {
        = if "0" > "1" {
          if "`fw'" != "" {
          local fw [fw=`fw']
          }
          if "`if2'" != "" {
          local aif & `if2'
          }
          if "`bknots'"!="" {
          local lowerknot: word 1 of `bknots'
          local upperknot: word 2 of `bknots'
          }
          else {
          quietly summ `varlist' if `touse' `aif', meanonly
          local lowerknot `r(min)'
          local upperknot `r(max)'
          }
          local dfm1=`df'-1
          forvalues y= 1/`dfm1' {
          local centile=(100/`df')*`y'
          local centilelist `centilelist' `centile'
          }
          local intknots
          _pctile `varlist' if `touse' `aif' `fw', p(`centilelist')
          forvalues i= 1/`dfm1' {
          local intknots `intknots' `r(r`i')'
          }
          if real(word("`intknots'",1))<=`lowerknot' {
          display as err "Lowest internal knot is not greater than lower bounda
> ry knot"
          exit 198
          }
          if real(word("`intknots'",`dfm1'))>=`upperknot' {
          display as err "Highest internal knot is not greater than upper bound
> ary knot"
          exit 198
          }
          local knots
          local knots `lowerknot' `intknots' `upperknot'
          }
        - if "`reverse'" == "" & "`nosecondder'" == "" & "`nofirstder'" == "" {
        = if "" == "" & "" == "" & "" == "" {
        - if "`scalar'" == "" {
        = if "" == "" {
        - quietly gen double `gen'1 = `varlist' if `touse'
        = quietly gen double _s0_rcs_age_tv1 = __000003 if __00000Q
        - }
        - else {
          scalar `gen'1 = `scalar'
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          tempname center1
          scalar `center1' = `center'
          }
        - if "`dgen'" != "" {
        = if "" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
        - local rcslist `gen'1
        = local rcslist _s0_rcs_age_tv1
        - local drcslist `dgen'1
        = local drcslist 1
        - local nk : word count `knots'
        = local nk : word count 
        - if "`knots'" == "" {
        = if "" == "" {
        - local interior = 0
        - }
        - else {
          local interior = `nk' - 2
          }
        - local nparams = `interior' + 1
        = local nparams = 0 + 1
        - if "`knots'" != "" {
        = if "" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`nparams' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          }
        - }
        - else if "`reverse'" != "" & "`nosecondder'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          local rcslist
          local drcslist
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>`scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" == "" & "`nofirstder'" ==
>  "" {
        = else if "" != "" & "" == "" & "" == "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')^2*(`varlist'>`
> kmin') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kma
> x')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*(
> (`scalar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>
> `kmax')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = (`center'-`kmin')^2*(`center'>`kmin') - `c
> '*((`center'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`cente
> r'>`kmax')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 2*(`varlist'-`kmin')*(`varlist'>
> `kmin') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'
> -`kmax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c
> '*((`scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`sca
> lar'>`kmax')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" != "" & "`reverse'" != "" & "`nofirstder'" ==
>  ""{
        = else if "" != "" & "" != "" & "" == ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 2
          local npar = `interior' + 1
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `dgen'1
          }
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" == "" & "`nofirstder'" !=
>  "" {
        = else if "" == "" & "" == "" & "" != "" {
          if "`scalar'" == "" {
          quietly gen double `gen'1 = `varlist' if `touse'
          }
          else {
          scalar `gen'1 = `scalar'
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = `center'
          }
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = 1 if `touse'
          }
          else {
          scalar `dgen'1 = 1
          }
          }
          local rcslist `gen'1
          local drcslist `dgen'1
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          forvalues j=2/`npar' {
          local lambda = (`kmax' - `k`j'')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`varlist'-`k`j'')^3)*(`varlist'>`k`j'
> ') - `lambda'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') - (1-`lambda')*((`var
> list'-`kmax')^3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`j' = ((`scalar'-`k`j'')^3)*(`scalar'>`k`j'') - `lambda'*
> ((`scalar'-`kmin')^3)*(`scalar'>`kmin') - (1-`lambda')*((`scalar'-`kmax')^3)*
> (`scalar'>`kmax')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`center'-`k`j'')^3)*(`center'>`k`j'') - `lambd
> a'*((`center'-`kmin')^3)*(`center'>`kmin') - (1-`lambda')*((`center'-`kmax')^
> 3)*(`center'>`kmax')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (3*(`varlist'- `k`j'')^2)*(`varlist'>`
> k`j'') - `lambda'*(3*(`varlist'-`kmin')^2)*(`varlist'>`kmin') - (1-`lambda')*
> (3*(`varlist'-`kmax')^2)*(`varlist'>`kmax')
          }
          else {
          scalar `dgen'`j' = (3*(`scalar'- `k`j'')^2)*(`scalar'>`k`j'') - `lamb
> da'*(3*(`scalar'-`kmin')^2)*(`scalar'>`kmin') - (1-`lambda')*(3*(`scalar'-`km
> ax')^2)*(`scalar'> `kmax')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'`par' = (`varlist'-`kmin')^2*(`varlist'>`kmin
> ') - `c'*((`varlist'-`kmin')^3)*(`varlist'>`kmin') + `c'*((`varlist'-`kmax')^
> 3)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `gen'`par' = (`scalar'-`kmin')^2*(`scalar'>`kmin') - `c'*((`sc
> alar'-`kmin')^3)*(`scalar'>`kmin') + `c'*((`scalar'-`kmax')^3)*(`scalar'>`kma
> x')
          }
          if "`center'"!= "" {
          scalar center`par' = (`center'-`kmin')^2*(`center'>`kmin') - `c'*((`c
> enter'-`kmin')^3)*(`center'>`kmin') + `c'*((`center'-`kmax')^3)*(`center'>`km
> ax')
          }
          local rcslist `rcslist' `gen'`par'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`par' = 2*(`varlist'-`kmin')*(`varlist'>`kmi
> n') - 3*`c'*((`varlist'-`kmin')^2)*(`varlist'>`kmin') + 3*`c'*((`varlist'-`km
> ax')^2)*(`varlist'>`kmax') if `touse'
          }
          else {
          scalar `dgen'`par' = 2*(`scalar'-`kmin')*(`scalar'>`kmin') - 3*`c'*((
> `scalar'-`kmin')^2)*(`scalar'>`kmin') + 3*`c'*((`scalar'-`kmax')^2)*(`scalar'
> >`kmax')
          }
          local drcslist `drcslist' `dgen'`par'
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = (`varlist'-`kmin')*(`varlist'>`km
> in') if `touse'
          }
          else {
          scalar `gen'`nparams' = (`scalar'-`kmin')*(`scalar'>`kmin')
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar center`nparams' = (`center'-`kmin')*(`center'>`kmin')
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1*(`varlist'>`kmin') if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1*(`scalar'>`kmin')
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - else if "`nosecondder'" == "" & "`reverse'" != "" & "`nofirstder'" !=
>  ""{
        = else if "" == "" & "" != "" & "" != ""{
          local nk : word count `knots'
          if "`knots'" == "" {
          local interior = 0
          }
          else {
          local interior = `nk' - 2
          }
          local nparams = `interior' + 3
          local npar = `interior' + 1
          local par = `interior' + 2
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`scalar'" == "" {
          quietly gen double `gen'1 = (`kmax'-`varlist')*(`kmax'>`varlist') if 
> `touse'
          }
          else {
          scalar `gen'1 = (`kmax'-`scalar')*(`kmax'>`scalar')
          }
          if "`center'"!= "" {
          tempname center1
          scalar `center1' = (`kmax'-`center')*(`kmax'>`center')
          }
          local rcslist `gen'1
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'1 = -1*(`kmax'>`varlist') if `touse'
          }
          else {
          scalar `dgen'1 = -1
          }
          local drcslist `dgen'1
          }
          local c=(1/(3*(`kmax' - `kmin')))
          if "`scalar'" == "" {
          quietly gen double `gen'2 = (`kmax'-`varlist')^2*(`kmax'>`varlist') -
>  `c'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') + `c'*((`kmin'-`varlist')^3)*(
> `kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'2 = (`kmax'-`scalar')^2*(`kmax'>`scalar') - `c'*((`kmax'-
> `scalar')^3)*(`kmax'>`scalar') + `c'*((`kmin'-`scalar')^3)*(`kmin'>`scalar')
          }
          if "`center'"!= "" {
          scalar center2 = (`kmax'-`center')^2*(`kmax'>`center') - `c'*((`kmax'
> -`center')^3)*(`kmax'>`center') + `c'*((`kmin'-`center')^3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'2
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'2 = -2*(`kmax'-`varlist')*(`kmax'>`varlist')
>  - (-3)*`c'*((`kmax'-`varlist')^2)*(`kmax'>`varlist') + (-3)*`c'*((`kmin'-`va
> rlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'2 = -2*(`kmax'-`scalar')*(`kmax'>`scalar') - (-3)*`c'*((
> `kmax'-`scalar')^2)*(`kmax'>`scalar') + (-3)*`c'*((`kmin'-`scalar')^2)*(`kmin
> '>`scalar')
          }
          local drcslist `drcslist' `dgen'2
          }
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          if "`scalar'" == "" {
          quietly gen double `gen'`j' = ((`k`h''-`varlist')^3)*(`k`h''>`varlist
> ') - `lambda'*((`kmax'-`varlist')^3)*(`kmax'>`varlist') - (1-`lambda')*((`kmi
> n'-`varlist')^3)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `gen'`j' = ((`k`h''-`scalar')^3)*(`k`h''>`scalar') - `lambda'*
> ((`kmax'-`scalar')^3)*(`kmax'>`scalar') - (1-`lambda')*((`kmin'-`scalar')^3)*
> (`kmin'>`scalar')
          }
          if "`center'"!= "" {
          tempname center`j'
          scalar `center`j'' = ((`k`h''-`center')^3)*(`k`h''>`center') - `lambd
> a'*((`kmax'-`center')^3)*(`kmax'>`center') - (1-`lambda')*((`kmin'-`center')^
> 3)*(`kmin'>`center')
          }
          local rcslist `rcslist' `gen'`j'
          if "`dgen'"!="" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`j' = (-3*(`k`h''-`varlist')^2)*(`k`h''>`var
> list') - `lambda'*(-3*(`kmax'-`varlist')^2)*(`kmax'>`varlist') - (1-`lambda')
> *(-3*(`kmin'-`varlist')^2)*(`kmin'>`varlist') if `touse'
          }
          else {
          scalar `dgen'`j' = (-3*(`k`h''-`scalar')^2)*(`k`h''>`scalar') - `lamb
> da'*(-3*(`kmax'-`scalar')^2)*(`kmax'>`scalar') - (1-`lambda')*(-3*(`kmin'-`sc
> alar')^2)*(`kmin'>` scalar')
          }
          local drcslist `drcslist' `dgen'`j'
          }
          }
          if "`scalar'" == "" {
          quietly gen double `gen'`nparams' = `varlist' if `touse'
          }
          else {
          scalar `gen'`nparams' = `scalar'
          }
          if "`center'"!= "" {
          tempname center`nparams'
          scalar `center`nparams'' = `center'
          }
          local rcslist `rcslist' `gen'`nparams'
          if "`dgen'" != "" {
          if "`scalar'" == "" {
          quietly gen double `dgen'`nparams' = 1 if `touse'
          }
          else {
          scalar `dgen'`nparams' = 1
          }
          local drcslist `drcslist' `dgen'`nparams'
          }
          }
          }
        - if "`orthog'" != "" {
        = if "" != "" {
          tempname R Rinv cons
          mata: orthgs("`rcslist'","`touse'")
          matrix `Rinv' = inv(`R')
          if "`dgen'" != "" {
          gen `cons' = 1 if `touse'
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
          }
        - else if "`rmatrix'" != "" {
        = else if "__00000O" != "" {
        - tempname Rinv cons
        - matrix `Rinv' = inv(`rmatrix')
        = matrix __00000R = inv(__00000O)
        - if "`scalar'" == "" {
        = if "" == "" {
        - gen `cons' = 1 if `touse'
        = gen __00000S = 1 if __00000Q
        - mata st_store(.,tokens(st_local("rcslist")), "`touse'",(st_data(., to
> kens(st_local("rcslist") + " `cons'"), "`touse'"))*st_matrix("`Rinv'")[,1..`n
> params'])
        = mata st_store(.,tokens(st_local("rcslist")), "__00000Q",(st_data(., t
> okens(st_local("rcslist") + " __00000S"), "__00000Q"))*st_matrix("__00000R")[
> ,1..1])
        - if "`dgen'" != "" {
        = if "" != "" {
          mata st_store(.,tokens(st_local("drcslist")), "`touse'",st_data(.,tok
> ens(st_local("drcslist")), "`touse'")*st_matrix("`Rinv'")[1..`nparams',1..`np
> arams'])
          }
        - }
        - else {
          tempname scalarmatrix
          matrix `scalarmatrix' = `gen'1
          forvalues i = 2/`nparams'{
          matrix `scalarmatrix' = `scalarmatrix',`gen'`i'
          }
          matrix `scalarmatrix' = `scalarmatrix',1
          mata st_matrix("`scalarmatrix'",st_matrix("`scalarmatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `gen'`i' = el(`scalarmatrix',1,`i')
          }
          if "`dgen'" != "" {
          tempname dscalarmatrix
          matrix `dscalarmatrix' = `dgen'1
          forvalues i = 2/`nparams'{
          matrix `dscalarmatrix' = `dscalarmatrix',`dgen'`i'
          }
          mata st_matrix("`dscalarmatrix'",st_matrix("`dscalarmatrix'")*st_matr
> ix("`Rinv'")[1..`nparams',1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `dgen'`i' = el(`dscalarmatrix',1,`i')
          }
          }
          }
        - }
        - if ("`orthog'" != "" | "`rmatrix'" != "") & "`reverse'" != "" {
        = if ("" != "" | "__00000O" != "") & "" != "" {
          tempname rcsvaluevector
          local rcsvaluelist
          if "`knots'" != "" {
          local i = 1
          tokenize "`knots'"
          while "``i''" != "" {
          local k`i' ``i''
          local i = `i' + 1
          }
          local kmin = `k1'
          local kmax = `k`nk''
          if "`nosecondder'" == "" & "`nofirstder'" == "" {
          forvalues j=1/`interior' {
          local h = `nk'-`j'
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" != "" & "`nofirstder'" == "" {
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue1 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvalue1'
          forvalues j=2/`npar' {
          local h = `nk'-(`j'-1)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          if "`nosecondder'" == "" & "`nofirstder'" != "" {
          local rcsvalue1 = (`kmax'-`kmax')*(`kmax'>`kmax')
          local rcsvaluelist `rcsvalue1'
          local c=(1/(3*(`kmax' - `kmin')))
          local rcsvalue2 = (`kmax'-`kmax')^2*(`kmax'>`kmax') - `c'*((`kmax'-`k
> max')^3)*(`kmax'>`kmax') + `c'*((`kmin'-`kmax')^3)*(`kmin'>`kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue2'
          forvalues j=3/`par' {
          local h = `nk'-(`j'-2)
          local lambda = (`k`h''-`kmin')/(`kmax' - `kmin')
          local rcsvalue`j' = ((`k`h''-`kmax')^3)*(`k`h''>`kmax') - `lambda'*((
> `kmax'-`kmax')^3)*(`kmax'>`kmax') - (1-`lambda')*((`kmin'-`kmax')^3)*(`kmin'>
> `kmax')
          local rcsvaluelist `rcsvaluelist' `rcsvalue`j''
          }
          }
          }
          local rcsvaluelist `rcsvaluelist' `kmax'
          matrix input rcsvaluevector=(`rcsvaluelist' 1)
          matrix rcsvalueorthog=rcsvaluevector*`Rinv'
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - rcsvalueorthog[1,`j']
          }
          }
          }
        - if ("`orthog'" != "" | "`rmatrix'"!= "") & "`center'"!="" {
        = if ("" != "" | "__00000O"!= "") & ""!="" {
          tempname centermatrix
          matrix `centermatrix' = `=`center1''
          forvalues i = 2/`nparams'{
          matrix `centermatrix' = `centermatrix',`=`center`i'''
          }
          matrix `centermatrix' = `centermatrix',1
          mata st_matrix("`centermatrix'",st_matrix("`centermatrix'")*st_matrix
> ("`Rinv'")[,1..`nparams'])
          forvalues i = 1/`nparams'{
          scalar `center`i'' = el(`centermatrix',1,`i')
          }
          }
        - if "`center'"!= "" {
        = if ""!= "" {
          if "`scalar'" == "" {
          forvalues j=1/`nparams' {
          qui replace `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          else {
          forvalues j=1/`nparams' {
          scalar `gen'`j' = `gen'`j' - `=`center`j'''
          }
          }
          }
        - if "`scalar'" != "" {
        = if "" != "" {
          local type Scalars
          }
        - else {
        - local type Variables
        - }
        - if "`dgen'"!="" {
        = if ""!="" {
          di in green "`type' `gen'1 to `gen'`nparams' and `dgen'1 to `dgen'`np
> arams' were created"
          }
        - else {
        - di in green "`type' `gen'1 to `gen'`nparams' were created"
        = di in green "Variables _s0_rcs_age_tv1 to _s0_rcs_age_tv1 were create
> d"
        - }
        - if "`knots'" == "" {
        = if "" == "" {
        - di in green "Warning: Only `gen'1 has been created as you did not spe
> cify any the knots, df, percentile or rmsknots options"
        = di in green "Warning: Only _s0_rcs_age_tv1 has been created as you di
> d not specify any the knots, df, percentile or rmsknots options"
        - }
        - if "`orthog'" != "" {
        = if "" != "" {
          return matrix R = `R'
          }
        - return local knots `knots'
        = return local knots 
        - return local rcslist `rcslist'
        = return local rcslist _s0_rcs_age_tv1
        - if "`dgen'" != "" return local drcslist `drcslist'
        = if "" != "" return local drcslist 1
        -------------------------------------------------------- end rcsgen ---
      - }
      - else if `tvc_`tvcvar'_df' != 1 {
      = else if 1 != 1 {
        qui rcsgen `lnt0' if `touse2' & _t0>0, knots(`tvcknots_`tvcvar'') gen(_
> s0_rcs_`tvcvar') `rmatrixopt' `reverse' `nosecondder' `nofirstder'
        }
      - }
      - }
      - if "`rcsbaseoff'" == "" {
      = if "" == "" {
      - local nk : word count `bhknots'
      = local nk : word count 
      - if "`df'" == "1" {
      = if "1" == "1" {
      - local df = 1
      - }
      - else if "`nosecondder'" != "" {
      = else if "" != "" {
        local df = `nk'
        }
      - else if "`nofirstder'" != "" {
      = else if "" != "" {
        local df = `nk'+1
        }
      - else {
        local df = `nk' - 1
        }
      - else {
        local df = `nk' - 1
        }
      - }
      - else {
        local df 0
        }
      - forvalues i = 1/`df' {
      = forvalues i = 1/1 {
      - local rcsterms_base "`rcsterms_base' _rcs`i'"
      = local rcsterms_base " _rcs1"
      - local drcsterms_base "`drcsterms_base' _d_rcs`i'"
      = local drcsterms_base " _d_rcs1"
      - }
      - local rcsterms `rcsterms_base'
      = local rcsterms  _rcs1
      - local drcsterms `drcsterms_base'
      = local drcsterms  _d_rcs1
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - if "`nosecondder'" != "" {
      = if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+1
        }
      - else if "`nofirstder'" != "" {
      = else if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+2
        }
      - }
      - if "`nosecondder'" != "" {
      = if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+1
        }
      - else if "`nofirstder'" != "" {
      = else if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+2
        }
      - }
      - if "`nosecondder'" != "" {
      = if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+1
        }
      - else if "`nofirstder'" != "" {
      = else if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+2
        }
      - }
      - if "`nosecondder'" != "" {
      = if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+1
        }
      - else if "`nofirstder'" != "" {
      = else if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+2
        }
      - }
      - if "`nosecondder'" != "" {
      = if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+1
        }
      - else if "`nofirstder'" != "" {
      = else if "" != "" {
        local tvc_`tvcvar'_df = `tvc_`tvcvar'_df'+2
        }
      - }
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local rcsterms_`tvcvar' "`rcsterms_`tvcvar'' _rcs_`tvcvar'`i'"
      = local rcsterms_udca " _rcs_udca1"
      - local drcsterms_`tvcvar' "`drcsterms_`tvcvar'' _d_rcs_`tvcvar'`i'"
      = local drcsterms_udca " _d_rcs_udca1"
      - local rcsterms "`rcsterms' _rcs_`tvcvar'`i'"
      = local rcsterms "_rcs1 _rcs_udca1"
      - local drcsterms "`drcsterms' _d_rcs_`tvcvar'`i'"
      = local drcsterms "_d_rcs1 _d_rcs_udca1"
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local rcsterms_`tvcvar' "`rcsterms_`tvcvar'' _rcs_`tvcvar'`i'"
      = local rcsterms_severe_disease " _rcs_severe_disease1"
      - local drcsterms_`tvcvar' "`drcsterms_`tvcvar'' _d_rcs_`tvcvar'`i'"
      = local drcsterms_severe_disease " _d_rcs_severe_disease1"
      - local rcsterms "`rcsterms' _rcs_`tvcvar'`i'"
      = local rcsterms "_rcs1 _rcs_udca1 _rcs_severe_disease1"
      - local drcsterms "`drcsterms' _d_rcs_`tvcvar'`i'"
      = local drcsterms "_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1"
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local rcsterms_`tvcvar' "`rcsterms_`tvcvar'' _rcs_`tvcvar'`i'"
      = local rcsterms_covid_vacc_first " _rcs_covid_vacc_first1"
      - local drcsterms_`tvcvar' "`drcsterms_`tvcvar'' _d_rcs_`tvcvar'`i'"
      = local drcsterms_covid_vacc_first " _d_rcs_covid_vacc_first1"
      - local rcsterms "`rcsterms' _rcs_`tvcvar'`i'"
      = local rcsterms "_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_f
> irst1"
      - local drcsterms "`drcsterms' _d_rcs_`tvcvar'`i'"
      = local drcsterms "_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs_cov
> id_vacc_first1"
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local rcsterms_`tvcvar' "`rcsterms_`tvcvar'' _rcs_`tvcvar'`i'"
      = local rcsterms_liver_trans " _rcs_liver_trans1"
      - local drcsterms_`tvcvar' "`drcsterms_`tvcvar'' _d_rcs_`tvcvar'`i'"
      = local drcsterms_liver_trans " _d_rcs_liver_trans1"
      - local rcsterms "`rcsterms' _rcs_`tvcvar'`i'"
      = local rcsterms "_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_f
> irst1 _rcs_liver_trans1"
      - local drcsterms "`drcsterms' _d_rcs_`tvcvar'`i'"
      = local drcsterms "_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs_cov
> id_vacc_first1 _d_rcs_liver_trans1"
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local rcsterms_`tvcvar' "`rcsterms_`tvcvar'' _rcs_`tvcvar'`i'"
      = local rcsterms_age_tv " _rcs_age_tv1"
      - local drcsterms_`tvcvar' "`drcsterms_`tvcvar'' _d_rcs_`tvcvar'`i'"
      = local drcsterms_age_tv " _d_rcs_age_tv1"
      - local rcsterms "`rcsterms' _rcs_`tvcvar'`i'"
      = local rcsterms "_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_f
> irst1 _rcs_liver_trans1 _rcs_age_tv1"
      - local drcsterms "`drcsterms' _d_rcs_`tvcvar'`i'"
      = local drcsterms "_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs_cov
> id_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"
      - }
      - }
      - }
      - local s0_rcsterms : subinstr local rcsterms_base "_rcs" "_s0_rcs", all
      - local s0_rcsterms_base `s0_rcsterms'
      = local s0_rcsterms_base  _s0_rcs1
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local s0_rcsterms_`tvcvar' `s0_rcsterms_`tvcvar'' _s0_rcs_`tvcvar'`i'
      = local s0_rcsterms_udca  _s0_rcs_udca1
      - }
      - local s0_rcsterms `s0_rcsterms' `s0_rcsterms_`tvcvar''
      = local s0_rcsterms  _s0_rcs1 _s0_rcs_udca1
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local s0_rcsterms_`tvcvar' `s0_rcsterms_`tvcvar'' _s0_rcs_`tvcvar'`i'
      = local s0_rcsterms_severe_disease  _s0_rcs_severe_disease1
      - }
      - local s0_rcsterms `s0_rcsterms' `s0_rcsterms_`tvcvar''
      = local s0_rcsterms _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local s0_rcsterms_`tvcvar' `s0_rcsterms_`tvcvar'' _s0_rcs_`tvcvar'`i'
      = local s0_rcsterms_covid_vacc_first  _s0_rcs_covid_vacc_first1
      - }
      - local s0_rcsterms `s0_rcsterms' `s0_rcsterms_`tvcvar''
      = local s0_rcsterms _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rc
> s_covid_vacc_first1
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local s0_rcsterms_`tvcvar' `s0_rcsterms_`tvcvar'' _s0_rcs_`tvcvar'`i'
      = local s0_rcsterms_liver_trans  _s0_rcs_liver_trans1
      - }
      - local s0_rcsterms `s0_rcsterms' `s0_rcsterms_`tvcvar''
      = local s0_rcsterms _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rc
> s_covid_vacc_first1 _s0_rcs_liver_trans1
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - local s0_rcsterms_`tvcvar' `s0_rcsterms_`tvcvar'' _s0_rcs_`tvcvar'`i'
      = local s0_rcsterms_age_tv  _s0_rcs_age_tv1
      - }
      - local s0_rcsterms `s0_rcsterms' `s0_rcsterms_`tvcvar''
      = local s0_rcsterms _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rc
> s_covid_vacc_first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1
      - }
      - }
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _rcs_`tvcvar'`i' = _rcs_`tvcvar'`i'*`tvcvar' if `touse2'
      = qui replace _rcs_udca1 = _rcs_udca1*udca if __000008
      - qui replace _d_rcs_`tvcvar'`i' = _d_rcs_`tvcvar'`i'*`tvcvar' if `touse2
> '
      = qui replace _d_rcs_udca1 = _d_rcs_udca1*udca if __000008
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - qui replace _s0_rcs_`tvcvar'`i' = _s0_rcs_`tvcvar'`i'*`tvcvar' if `tous
> e2' & _t0>0
      = qui replace _s0_rcs_udca1 = _s0_rcs_udca1*udca if __000008 & _t0>0
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _rcs_`tvcvar'`i' = _rcs_`tvcvar'`i'*`tvcvar' if `touse2'
      = qui replace _rcs_severe_disease1 = _rcs_severe_disease1*severe_disease 
> if __000008
      - qui replace _d_rcs_`tvcvar'`i' = _d_rcs_`tvcvar'`i'*`tvcvar' if `touse2
> '
      = qui replace _d_rcs_severe_disease1 = _d_rcs_severe_disease1*severe_dise
> ase if __000008
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - qui replace _s0_rcs_`tvcvar'`i' = _s0_rcs_`tvcvar'`i'*`tvcvar' if `tous
> e2' & _t0>0
      = qui replace _s0_rcs_severe_disease1 = _s0_rcs_severe_disease1*severe_di
> sease if __000008 & _t0>0
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _rcs_`tvcvar'`i' = _rcs_`tvcvar'`i'*`tvcvar' if `touse2'
      = qui replace _rcs_covid_vacc_first1 = _rcs_covid_vacc_first1*covid_vacc_
> first if __000008
      - qui replace _d_rcs_`tvcvar'`i' = _d_rcs_`tvcvar'`i'*`tvcvar' if `touse2
> '
      = qui replace _d_rcs_covid_vacc_first1 = _d_rcs_covid_vacc_first1*covid_v
> acc_first if __000008
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - qui replace _s0_rcs_`tvcvar'`i' = _s0_rcs_`tvcvar'`i'*`tvcvar' if `tous
> e2' & _t0>0
      = qui replace _s0_rcs_covid_vacc_first1 = _s0_rcs_covid_vacc_first1*covid
> _vacc_first if __000008 & _t0>0
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _rcs_`tvcvar'`i' = _rcs_`tvcvar'`i'*`tvcvar' if `touse2'
      = qui replace _rcs_liver_trans1 = _rcs_liver_trans1*liver_trans if __0000
> 08
      - qui replace _d_rcs_`tvcvar'`i' = _d_rcs_`tvcvar'`i'*`tvcvar' if `touse2
> '
      = qui replace _d_rcs_liver_trans1 = _d_rcs_liver_trans1*liver_trans if __
> 000008
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - qui replace _s0_rcs_`tvcvar'`i' = _s0_rcs_`tvcvar'`i'*`tvcvar' if `tous
> e2' & _t0>0
      = qui replace _s0_rcs_liver_trans1 = _s0_rcs_liver_trans1*liver_trans if 
> __000008 & _t0>0
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _rcs_`tvcvar'`i' = _rcs_`tvcvar'`i'*`tvcvar' if `touse2'
      = qui replace _rcs_age_tv1 = _rcs_age_tv1*age_tv if __000008
      - qui replace _d_rcs_`tvcvar'`i' = _d_rcs_`tvcvar'`i'*`tvcvar' if `touse2
> '
      = qui replace _d_rcs_age_tv1 = _d_rcs_age_tv1*age_tv if __000008
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - qui replace _s0_rcs_`tvcvar'`i' = _s0_rcs_`tvcvar'`i'*`tvcvar' if `tous
> e2' & _t0>0
      = qui replace _s0_rcs_age_tv1 = _s0_rcs_age_tv1*age_tv if __000008 & _t0>
> 0
      - }
      - }
      - }
      - }
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - forvalues i = 1/`df' {
      = forvalues i = 1/1 {
      - qui replace _s0_rcs`i' = -99 if `touse2' & _t0 == 0 & "`rcsbaseoff'" ==
>  ""
      = qui replace _s0_rcs1 = -99 if __000008 & _t0 == 0 & "" == ""
      - }
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _s0_rcs_`tvcvar'`i' = -99 if `touse2' & _t0 == 0
      = qui replace _s0_rcs_udca1 = -99 if __000008 & _t0 == 0
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _s0_rcs_`tvcvar'`i' = -99 if `touse2' & _t0 == 0
      = qui replace _s0_rcs_severe_disease1 = -99 if __000008 & _t0 == 0
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _s0_rcs_`tvcvar'`i' = -99 if `touse2' & _t0 == 0
      = qui replace _s0_rcs_covid_vacc_first1 = -99 if __000008 & _t0 == 0
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _s0_rcs_`tvcvar'`i' = -99 if `touse2' & _t0 == 0
      = qui replace _s0_rcs_liver_trans1 = -99 if __000008 & _t0 == 0
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - qui replace _s0_rcs_`tvcvar'`i' = -99 if `touse2' & _t0 == 0
      = qui replace _s0_rcs_age_tv1 = -99 if __000008 & _t0 == 0
      - }
      - }
      - }
      - if "`rcsbaseoff'" == "" {
      = if "" == "" {
      - forvalues i = 1/`df' {
      = forvalues i = 1/1 {
      - label var _rcs`i' "restricted cubic spline `i'"
      = label var _rcs1 "restricted cubic spline 1"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _rcs1 "restricted cubic spline 1"
        - }
        --------------------------------------------------------- end label ---
      - label var _d_rcs`i' "derivative of restricted cubic spline `i'"
      = label var _d_rcs1 "derivative of restricted cubic spline 1"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _d_rcs1 "derivative of restricted c
> ubic spline 1"
        - }
        --------------------------------------------------------- end label ---
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - label var _s0_rcs`i' "restricted cubic spline `i' (delayed entry)"
      = label var _s0_rcs1 "restricted cubic spline 1 (delayed entry)"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _s0_rcs1 "restricted cubic spline 1
>  (delayed entry)"
        - }
        --------------------------------------------------------- end label ---
      - }
      - }
      - }
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - label var _rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvcvar
> '"
      = label var _rcs_udca1 "restricted cubic spline 1 for tvc udca"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _rcs_udca1 "restricted cubic spline
>  1 for tvc udca"
        - }
        --------------------------------------------------------- end label ---
      - label var _d_rcs_`tvcvar'`i' "derivative of restricted cubic spline `i'
>  for tvc `tvcvar'"
      = label var _d_rcs_udca1 "derivative of restricted cubic spline 1 for tvc
>  udca"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _d_rcs_udca1 "derivative of restric
> ted cubic spline 1 for tvc udca"
        - }
        --------------------------------------------------------- end label ---
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - label var _s0_rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvc
> var' (delayed entry)"
      = label var _s0_rcs_udca1 "restricted cubic spline 1 for tvc udca (delaye
> d entry)"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _s0_rcs_udca1 "restricted cubic spl
> ine 1 for tvc udca (delayed entry)"
        - }
        --------------------------------------------------------- end label ---
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - label var _rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvcvar
> '"
      = label var _rcs_severe_disease1 "restricted cubic spline 1 for tvc sever
> e_disease"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _rcs_severe_disease1 "restricted cu
> bic spline 1 for tvc severe_disease"
        - }
        --------------------------------------------------------- end label ---
      - label var _d_rcs_`tvcvar'`i' "derivative of restricted cubic spline `i'
>  for tvc `tvcvar'"
      = label var _d_rcs_severe_disease1 "derivative of restricted cubic spline
>  1 for tvc severe_disease"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _d_rcs_severe_disease1 "derivative 
> of restricted cubic spline 1 for tvc severe_disease"
        - }
        --------------------------------------------------------- end label ---
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - label var _s0_rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvc
> var' (delayed entry)"
      = label var _s0_rcs_severe_disease1 "restricted cubic spline 1 for tvc se
> vere_disease (delayed entry)"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _s0_rcs_severe_disease1 "restricted
>  cubic spline 1 for tvc severe_disease (delayed entry)"
        - }
        --------------------------------------------------------- end label ---
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - label var _rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvcvar
> '"
      = label var _rcs_covid_vacc_first1 "restricted cubic spline 1 for tvc cov
> id_vacc_first"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _rcs_covid_vacc_first1 "restricted 
> cubic spline 1 for tvc covid_vacc_first"
        - }
        --------------------------------------------------------- end label ---
      - label var _d_rcs_`tvcvar'`i' "derivative of restricted cubic spline `i'
>  for tvc `tvcvar'"
      = label var _d_rcs_covid_vacc_first1 "derivative of restricted cubic spli
> ne 1 for tvc covid_vacc_first"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _d_rcs_covid_vacc_first1 "derivativ
> e of restricted cubic spline 1 for tvc covid_vacc_first"
        - }
        --------------------------------------------------------- end label ---
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - label var _s0_rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvc
> var' (delayed entry)"
      = label var _s0_rcs_covid_vacc_first1 "restricted cubic spline 1 for tvc 
> covid_vacc_first (delayed entry)"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _s0_rcs_covid_vacc_first1 "restrict
> ed cubic spline 1 for tvc covid_vacc_first (delayed entry)"
        - }
        --------------------------------------------------------- end label ---
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - label var _rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvcvar
> '"
      = label var _rcs_liver_trans1 "restricted cubic spline 1 for tvc liver_tr
> ans"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _rcs_liver_trans1 "restricted cubic
>  spline 1 for tvc liver_trans"
        - }
        --------------------------------------------------------- end label ---
      - label var _d_rcs_`tvcvar'`i' "derivative of restricted cubic spline `i'
>  for tvc `tvcvar'"
      = label var _d_rcs_liver_trans1 "derivative of restricted cubic spline 1 
> for tvc liver_trans"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _d_rcs_liver_trans1 "derivative of 
> restricted cubic spline 1 for tvc liver_trans"
        - }
        --------------------------------------------------------- end label ---
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - label var _s0_rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvc
> var' (delayed entry)"
      = label var _s0_rcs_liver_trans1 "restricted cubic spline 1 for tvc liver
> _trans (delayed entry)"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _s0_rcs_liver_trans1 "restricted cu
> bic spline 1 for tvc liver_trans (delayed entry)"
        - }
        --------------------------------------------------------- end label ---
      - }
      - }
      - }
      - forvalues i = 1/`tvc_`tvcvar'_df' {
      = forvalues i = 1/1 {
      - label var _rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvcvar
> '"
      = label var _rcs_age_tv1 "restricted cubic spline 1 for tvc age_tv"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _rcs_age_tv1 "restricted cubic spli
> ne 1 for tvc age_tv"
        - }
        --------------------------------------------------------- end label ---
      - label var _d_rcs_`tvcvar'`i' "derivative of restricted cubic spline `i'
>  for tvc `tvcvar'"
      = label var _d_rcs_age_tv1 "derivative of restricted cubic spline 1 for t
> vc age_tv"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _d_rcs_age_tv1 "derivative of restr
> icted cubic spline 1 for tvc age_tv"
        - }
        --------------------------------------------------------- end label ---
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - label var _s0_rcs_`tvcvar'`i' "restricted cubic spline `i' for tvc `tvc
> var' (delayed entry)"
      = label var _s0_rcs_age_tv1 "restricted cubic spline 1 for tvc age_tv (de
> layed entry)"
        ------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 11.1, missing: _label var _s0_rcs_age_tv1 "restricted cubic s
> pline 1 for tvc age_tv (delayed entry)"
        - }
        --------------------------------------------------------- end label ---
      - }
      - }
      - }
      - }
      - if "`varlist'" != "" {
      = if "udca male age_tv any_high_risk_condition eth_bin imd1 imd2 imd3 imd
> 4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 smoking
> 3 severe_disease covid_vacc_first liver_trans" != "" {
      - local colvarlist (`varlist')
      = local colvarlist (udca male age_tv any_high_risk_condition eth_bin imd1
>  imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 sm
> oking2 smoking3 severe_disease covid_vacc_first liver_trans)
      - }
      - _rmcollright (`rcsterms') `colvarlist' if `touse', `constant'
      = _rmcollright (_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_fir
> st1 _rcs_liver_trans1 _rcs_age_tv1) (udca male age_tv any_high_risk_condition
>  eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat
> 5 smoking1 smoking2 smoking3 severe_disease covid_vacc_first liver_trans) if 
> __00000F, 
        ------------------------------------------------ begin _rmcollright ---
        - if _caller() < 11 {
          _rmcollright_10 `0'
          return add
          exit
          }
        - version 11
        - syntax anything(id="varblocklist" name=vblist) [if] [in] [fw aw iw pw
> ] [, noCONStant COLLinear]
        - local rmopts nowgtmsg expand `constant' `collinear'
        = local rmopts nowgtmsg expand  
        - marksample touse, novarlist
        - local wgt [`weight'`exp']
        = local wgt []
        - local hold : copy local vblist
        - while `"`:list retok hold'"' != "" {
        = while `"(_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1
>  _rcs_liver_trans1 _rcs_age_tv1) (udca male age_tv any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 s
> moking1 smoking2 smoking3 severe_disease covid_vacc_first liver_trans)"' != "
> " {
        - gettoken varblock hold : hold, bind match(par)
        - markout `touse' `varblock'
        = markout __00000Q _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vac
> c_first1 _rcs_liver_trans1 _rcs_age_tv1
        - }
        - while `"`:list retok hold'"' != "" {
        = while `"(udca male age_tv any_high_risk_condition eth_bin imd1 imd2 i
> md3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 
> smoking3 severe_disease covid_vacc_first liver_trans)"' != "" {
        - gettoken varblock hold : hold, bind match(par)
        - markout `touse' `varblock'
        = markout __00000Q udca male age_tv any_high_risk_condition eth_bin imd
> 1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 s
> moking2 smoking3 severe_disease covid_vacc_first liver_trans
        - }
        - while `"`:list retok hold'"' != "" {
        = while `""' != "" {
          gettoken varblock hold : hold, bind match(par)
          markout `touse' `varblock'
          }
        - local k 0
        - while `"`:list retok vblist'"' != "" {
        = while `"(_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1
>  _rcs_liver_trans1 _rcs_age_tv1) (udca male age_tv any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 s
> moking1 smoking2 smoking3 severe_disease covid_vacc_first liver_trans)"' != "
> " {
        - local ++k
        - gettoken varblock vblist : vblist, bind match(par)
        - if "`par'" == "" {
        = if "(" == "" {
          fvunab varblock : `varblock'
          gettoken varblock rest : varblock, bind
          if `:length local rest' {
          local vblist `"`rest' `vblist'"'
          }
          }
        - fvexpand `varblock' if `touse' `in'
        = fvexpand _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1
>  _rcs_liver_trans1 _rcs_age_tv1 if __00000Q 
        - local vb0_`k' `r(varlist)'
        = local vb0_1 _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_fir
> st1 _rcs_liver_trans1 _rcs_age_tv1
        - _rmcoll `varblock' if `touse' `in' `wgt', `rmopts'
        = _rmcoll _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 
> _rcs_liver_trans1 _rcs_age_tv1 if __00000Q  [], nowgtmsg expand
        - local vb_`k' `r(varlist)'
        = local vb_1 _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_firs
> t1 _rcs_liver_trans1 _rcs_age_tv1
        - local drop_`k' : list vb0_`k' - vb_`k'
        = local drop_1 : list vb0_1 - vb_1
        - local vlist `vlist' `vb_`k''
        = local vlist  _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_fi
> rst1 _rcs_liver_trans1 _rcs_age_tv1
        - local dlist `drop_`k'' `dlist'
        = local dlist  
        - }
        - while `"`:list retok vblist'"' != "" {
        = while `"(udca male age_tv any_high_risk_condition eth_bin imd1 imd2 i
> md3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 
> smoking3 severe_disease covid_vacc_first liver_trans)"' != "" {
        - local ++k
        - gettoken varblock vblist : vblist, bind match(par)
        - if "`par'" == "" {
        = if "(" == "" {
          fvunab varblock : `varblock'
          gettoken varblock rest : varblock, bind
          if `:length local rest' {
          local vblist `"`rest' `vblist'"'
          }
          }
        - fvexpand `varblock' if `touse' `in'
        = fvexpand udca male age_tv any_high_risk_condition eth_bin imd1 imd2 i
> md3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 
> smoking3 severe_disease covid_vacc_first liver_trans if __00000Q 
        - local vb0_`k' `r(varlist)'
        = local vb0_2 udca male age_tv any_high_risk_condition eth_bin imd1 imd
> 2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smokin
> g2 smoking3 severe_disease covid_vacc_first liver_trans
        - _rmcoll `varblock' if `touse' `in' `wgt', `rmopts'
        = _rmcoll udca male age_tv any_high_risk_condition eth_bin imd1 imd2 im
> d3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 smoking1 smoking2 s
> moking3 severe_disease covid_vacc_first liver_trans if __00000Q  [], nowgtmsg
>  expand
note: any_high_risk_condition omitted because of collinearity
note: bmi_cat5 omitted because of collinearity
note: smoking3 omitted because of collinearity
        - local vb_`k' `r(varlist)'
        = local vb_2 udca male age_tv o.any_high_risk_condition eth_bin imd1 im
> d2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 smo
> king2 o.smoking3 severe_disease covid_vacc_first liver_trans
        - local drop_`k' : list vb0_`k' - vb_`k'
        = local drop_2 : list vb0_2 - vb_2
        - local vlist `vlist' `vb_`k''
        = local vlist _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_fir
> st1 _rcs_liver_trans1 _rcs_age_tv1 udca male age_tv o.any_high_risk_condition
>  eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_c
> at5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
        - local dlist `drop_`k'' `dlist'
        = local dlist any_high_risk_condition bmi_cat5 smoking3 
        - }
        - while `"`:list retok vblist'"' != "" {
        = while `""' != "" {
          local ++k
          gettoken varblock vblist : vblist, bind match(par)
          if "`par'" == "" {
          fvunab varblock : `varblock'
          gettoken varblock rest : varblock, bind
          if `:length local rest' {
          local vblist `"`rest' `vblist'"'
          }
          }
          fvexpand `varblock' if `touse' `in'
          local vb0_`k' `r(varlist)'
          _rmcoll `varblock' if `touse' `in' `wgt', `rmopts'
          local vb_`k' `r(varlist)'
          local drop_`k' : list vb0_`k' - vb_`k'
          local vlist `vlist' `vb_`k''
          local dlist `drop_`k'' `dlist'
          }
        - _rmcoll `vlist' if `touse' `in' `wgt', `rmopts'
        = _rmcoll _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 
> _rcs_liver_trans1 _rcs_age_tv1 udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans if _
> _00000Q  [], nowgtmsg expand
        - local vlist2 `r(varlist)'
        = local vlist2 _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_fi
> rst1 _rcs_liver_trans1 _rcs_age_tv1 udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
        - local drop : list vlist - vlist2
        - while `:list sizeof drop' {
        = while 0 {
          gettoken dvar drop : drop
          forval i = `k'(-1)1 {
          if `:list dvar in vb_`i'' {
          Drop vb_`i' : `dvar' `vb_`i''
          continue, break
          }
          }
          local dlist `dvar' `dlist'
          }
        - return scalar k = `k'
        = return scalar k = 2
        - return local dropped `dlist'
        = return local dropped any_high_risk_condition bmi_cat5 smoking3
        - forval i = 1/`k' {
        = forval i = 1/2 {
        - local newvblist `newvblist' (`vb_`i'')
        = local newvblist  (_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_va
> cc_first1 _rcs_liver_trans1 _rcs_age_tv1)
        - return local block`i' `vb_`i''
        = return local block1 _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_
> vacc_first1 _rcs_liver_trans1 _rcs_age_tv1
        - }
        - local newvblist `newvblist' (`vb_`i'')
        = local newvblist (_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vac
> c_first1 _rcs_liver_trans1 _rcs_age_tv1) (udca male age_tv o.any_high_risk_co
> ndition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 
> o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver
> _trans)
        - return local block`i' `vb_`i''
        = return local block2 udca male age_tv o.any_high_risk_condition eth_bi
> n imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smo
> king1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
        - }
        - return local varblocklist `newvblist'
        = return local varblocklist (_rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs
> _covid_vacc_first1 _rcs_liver_trans1 _rcs_age_tv1) (udca male age_tv o.any_hi
> gh_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3
>  bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_f
> irst liver_trans)
        - return local varlist `vlist2'
        = return local varlist _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid
> _vacc_first1 _rcs_liver_trans1 _rcs_age_tv1 udca male age_tv o.any_high_risk_
> condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat
> 4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liv
> er_trans
        -------------------------------------------------- end _rmcollright ---
      - local varlist `r(block2)'
      = local varlist udca male age_tv o.any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 sm
> oking2 o.smoking3 severe_disease covid_vacc_first liver_trans
      - foreach var in `varlist' {
      = foreach var in udca male age_tv o.any_high_risk_condition eth_bin imd1 
> imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 s
> moking2 o.smoking3 severe_disease covid_vacc_first liver_trans {
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("udca","o.") == 0 & strpos("udca","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted  udca
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("male","o.") == 0 & strpos("male","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("age_tv","o.") == 0 & strpos("age_tv","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("o.any_high_risk_condition","o.") == 0 & strpos("o.any_high_r
> isk_condition","b.") == 0 {
        local varlist_omitted `varlist_omitted' `var'
        }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("eth_bin","o.") == 0 & strpos("eth_bin","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("imd1","o.") == 0 & strpos("imd1","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("imd2","o.") == 0 & strpos("imd2","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("imd3","o.") == 0 & strpos("imd3","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("imd4","o.") == 0 & strpos("imd4","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("imd5","o.") == 0 & strpos("imd5","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("bmi_cat1","o.") == 0 & strpos("bmi_cat1","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("bmi_cat2","o.") == 0 & strpos("bmi_cat2","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("bmi_cat3","o.") == 0 & strpos("bmi_cat3","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2 bmi_cat3
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("bmi_cat4","o.") == 0 & strpos("bmi_cat4","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("o.bmi_cat5","o.") == 0 & strpos("o.bmi_cat5","b.") == 0 {
        local varlist_omitted `varlist_omitted' `var'
        }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("smoking1","o.") == 0 & strpos("smoking1","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("smoking2","o.") == 0 & strpos("smoking2","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("o.smoking3","o.") == 0 & strpos("o.smoking3","b.") == 0 {
        local varlist_omitted `varlist_omitted' `var'
        }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("severe_disease","o.") == 0 & strpos("severe_disease","b.") =
> = 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("covid_vacc_first","o.") == 0 & strpos("covid_vacc_first","b.
> ") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_v
> acc_first
      - }
      - }
      - if strpos("`var'","o.") == 0 & strpos("`var'","b.") == 0 {
      = if strpos("liver_trans","o.") == 0 & strpos("liver_trans","b.") == 0 {
      - local varlist_omitted `varlist_omitted' `var'
      = local varlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5
>  bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_v
> acc_first liver_trans
      - }
      - }
      - if "`offset'" != "" {
      = if "" != "" {
        local offopt offset(`offset')
        local addoff +`offset'
        }
      - if "`initstrata'" != "" {
      = if "" != "" {
        local initstrata strata(`initstrata')
        }
      - if "`verbose'"=="verbose" display as txt "Obtaining Initial Values"
      = if ""=="verbose" display as txt "Obtaining Initial Values"
      - if "`lininit'" == "" {
      = if "" == "" {
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - local tvcterms tvc(`tvc') texp(ln(_t))
      = local tvcterms tvc(udca severe_disease covid_vacc_first liver_trans age
> _tv) texp(ln(_t))
      - }
      - qui stcox `varlist' if `touse', estimate `initstrata'
      = qui stcox udca male age_tv o.any_high_risk_condition eth_bin imd1 imd2 
> imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 smokin
> g2 o.smoking3 severe_disease covid_vacc_first liver_trans if __00000F, estima
> te 
        ------------------------------------------------------- begin stcox ---
        - version 8, missing
        - local version : di "version " string(_caller()) ", missing:"
        - if replay() {
          syntax [, ESTImate *]
          if "`estimate'" == "" {
          if _by() {
          error 190
          }
          if `"`e(cmd2)'"' != "stcox" {
          error 301
          }
          if "`e(shared)'" != "" {
          stcox_fr `0'
          exit
          }
          }
          }
        - if _by() {
          local by "by `_byvars'`_byrc0':"
          }
        - syntax [varlist(default=none fv)] [if] [in] [, FRailty(string) SHared
> (string) ESTImate *]
        - local fvops = "`s(fvops)'" == "true" | _caller() >= 11
        = local fvops = "true" == "true" | _caller() >= 11
        - if `fvops' {
        = if 1 {
        - local version: di "version " string(max(11,_caller())) ", missing:"
        - }
        - if `"`shared'"' != "" | `"`frailty'"' != "" {
        = if `""' != "" | `""' != "" {
          `version' `by' stcox_fr `0'
          exit
          }
        - `version' `BY' _vce_parserun stcox, stdata noneedvarlist mark(STrata 
> SHared OFFset tvc CLuster) numdepvars(0) : `0'
        = version 11.1, missing:  _vce_parserun stcox, stdata noneedvarlist mar
> k(STrata SHared OFFset tvc CLuster) numdepvars(0) : udca male age_tv o.any_hi
> gh_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3
>  bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_f
> irst liver_trans if __00000F, estimate 
          --------------------------------------------- begin _vce_parserun ---
          - version 9
          - local version : di "version " string(_caller()) ":"
          - local bycall = _by()
          - _on_colon_parse `0'
          = _on_colon_parse stcox, stdata noneedvarlist mark(STrata SHared OFFs
> et tvc CLuster) numdepvars(0) : udca male age_tv o.any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5
>  smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans if 
> __00000F, estimate 
            ----------------------------------------- begin _on_colon_parse ---
            - version 8.2
            - sreturn local before ""
            - sreturn local after ""
            - gettoken before after : 0, parse(":") bind match(par) quotes
            - if "`par'" != "" {
            = if "" != "" {
              local before `"(`before')"'
              }
            - if `"`before'"' == ":" {
            = if `"stcox, stdata noneedvarlist mark(STrata SHared OFFset tvc CL
> uster) numdepvars(0) "' == ":" {
              sreturn local after `"`after'"'
              exit
              }
            - while `"`COLON'"' != ":" & `"`after'"' != "" {
            = while `""' != ":" & `": udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  if __00000F, estimate "' != "" {
            - gettoken COLON after : after, parse(":") bind match(par) quotes
            - if "`par'" != "" {
            = if "" != "" {
              local before `before' (`COLON')
              local COLON
              }
            - else if `"`COLON'"' != ":" {
            = else if `":"' != ":" {
              local before `"`before' `COLON'"'
              local COLON
              }
            - }
            - while `"`COLON'"' != ":" & `"`after'"' != "" {
            = while `":"' != ":" & `" udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  if __00000F, estimate "' != "" {
              gettoken COLON after : after, parse(":") bind match(par) quotes
              if "`par'" != "" {
              local before `before' (`COLON')
              local COLON
              }
              else if `"`COLON'"' != ":" {
              local before `"`before' `COLON'"'
              local COLON
              }
              }
            - if `"`COLON'"' != ":" {
            = if `":"' != ":" {
              di as err "'' found where ':' expected"
              exit 198
              }
            - sreturn local before `"`before'"'
            = sreturn local before `"stcox, stdata noneedvarlist mark(STrata SH
> ared OFFset tvc CLuster) numdepvars(0) "'
            - sreturn local after `"`after'"'
            = sreturn local after `" udca male age_tv o.any_high_risk_condition
>  eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_c
> at5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans 
> if __00000F, estimate "'
            ------------------------------------------- end _on_colon_parse ---
          - local ZERO `"`s(before)'"'
          = local ZERO `"stcox, stdata noneedvarlist mark(STrata SHared OFFset 
> tvc CLuster) numdepvars(0) "'
          - local 0 `"`s(after)'"'
          = local 0 `" udca male age_tv o.any_high_risk_condition eth_bin imd1 
> imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 s
> moking2 o.smoking3 severe_disease covid_vacc_first liver_trans if __00000F, e
> stimate "'
          - quietly syntax [anything(equalok)] [if] [in] [fw aw pw iw] [, VCE(s
> tring asis) VCE1(string asis) LRMODEL * ]
          - if `"`vce'"' == "" {
          = if `""' == "" {
          - MYRESULT
            ---------------------------------- begin _vce_parserun.MYRESULT ---
            - args exit
            - sreturn local exit `"`exit'"'
            = sreturn local exit `""'
            ------------------------------------ end _vce_parserun.MYRESULT ---
          - exit
          ----------------------------------------------- end _vce_parserun ---
        - if "`s(exit)'" != "" {
        = if "" != "" {
          ereturn local cmdline `"stcox `0'"'
          exit
          }
        - `version' `by' stcox_7 `0'
        = version 11.1, missing:  stcox_7 udca male age_tv o.any_high_risk_cond
> ition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.
> bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_t
> rans if __00000F, estimate 
          --------------------------------------------- begin stcox.stcox_7 ---
          - local version : di "version " string(_caller()) ", missing:"
          - version 7, missing
          - if _caller()<6 {
            if _by() { error 190 }
            ztcox_5 `0'
            exit
            }
          - if replay() {
            syntax [, ESTImate noHR * ]
            if `"`estimate'"'=="" {
            if _by() { error 190 }
            if `"`e(cmd2)'"' != "stcox" {
            error 301
            }
            if "`e(prefix)'" == "svy" {
            _prefix_display, `hr' `options'
            exit
            }
            _get_diopts diopts, `options'
            local hr = cond(`"`hr'"'=="", "hr", "")
            local h = cond(`"`e(strata)'"'=="", "Cox regression", "Stratified C
> ox regr.")
            local h1="no ties"
            if "`e(ties)'"=="breslow" {
            local h1="Breslow method for ties"
            }
            else if "`e(ties)'"=="efron" {
            local h1="Efron method for ties"
            }
            else if "`e(ties)'"=="partial" {
            local h1="exact partial likelihood"
            }
            else if "`e(ties)'"=="marginal" {
            local h1="exact marginal likelihood"
            }
            di _n as txt `"`h' -- `h1'"'
            st_hcd
            di
            local offset `e(offset)'
            est local offset
            _coef_table, `hr' `options'
            est local offset `offset'
            `version' stcox_footnote
            if `"`e(converged)'"' == "0" {
            di as txt "Warning: convergence not achieved"
            }
            exit
            }
            }
          - st_is 2 analysis
            --------------------------------------------------- begin st_is ---
            - version 6
            - if "`1'"=="2" & `"`_dta[_dta]'"'=="st" & `"`_dta[st_ver]'"'=="2" 
> & _caller()>5 {
            = if "2"=="2" & `"st"'=="st" & `"2"'=="2" & _caller()>5 {
            - if "`2'"=="analysis" & `"`_dta[st_full]'"'=="" | "`2'"=="full" {
            = if "analysis"=="analysis" & `""'=="" | "analysis"=="full" {
            - exit
            ----------------------------------------------------- end st_is ---
          - local oldbaseh = cond(_caller()<7,"BASEHazard(string)","")
          - if _caller() < 14 {
          - local TVCOPT TVC(varlist)
          - }
          - else {
            local TVCOPT TVC(varlist fv)
            }
          - syntax [varlist(default=none fv)] [if] [in] [,CLuster(passthru) CMD
>  ESTImate noHR Level(cilevel) Robust noSHow NOLOG LOG BREslow EFRon EXACTM EX
> ACTP `oldbaseh' BASEHC(passthru) BASEChazard(passthru) BASESurv(passthru) MGa
> le(passthru) esr(passthru) SCHoenfeld(passthru) SCAledsch(passthru) `TVCOPT' 
> texp(string) altvce(name) VCE(passthru) * ]
          = syntax [varlist(default=none fv)] [if] [in] [,CLuster(passthru) CMD
>  ESTImate noHR Level(cilevel) Robust noSHow NOLOG LOG BREslow EFRon EXACTM EX
> ACTP  BASEHC(passthru) BASEChazard(passthru) BASESurv(passthru) MGale(passthr
> u) esr(passthru) SCHoenfeld(passthru) SCAledsch(passthru) TVC(varlist) texp(s
> tring) altvce(name) VCE(passthru) * ]
          - local fvops = "`s(fvops)'" == "true" | _caller() >= 11
          = local fvops = "true" == "true" | _caller() >= 11
          - if `fvops' {
          = if 1 {
          - local version: di "version "string(max(11,_caller())) ", missing:"
          - }
          - _parse_iterlog, `nolog' `log'
          = _parse_iterlog,  
            ------------------------------------------ begin _parse_iterlog ---
            - version 16
            - syntax [, NOLOG LOG]
            - if "`log'`nolog'" != "" {
            = if "" != "" {
              opts_exclusive "`log' `nolog'"
              }
            - else if "`c(iterlog)'" == "on" {
            = else if "on" == "on" {
            - local log log
            - }
            - else {
              local nolog nolog
              }
            - sreturn local log `log'
            = sreturn local log log
            - sreturn local nolog `nolog'
            = sreturn local nolog 
            -------------------------------------------- end _parse_iterlog ---
          - if "`s(nolog)'" == "nolog" {
          = if "" == "nolog" {
            local log nolog
            }
          - else if "`s(log)'" == "log" {
          = else if "log" == "log" {
          - local log log
          - }
          - _get_diopts diopts options, `options'
          = _get_diopts diopts options, 
            --------------------------------------------- begin _get_diopts ---
            - version 11
            - syntax namelist(max=2) [, *]
            - gettoken name1 namelist : namelist
            - gettoken name2 namelist : namelist
            - GetDiopts diopts options, `options'
            = GetDiopts diopts options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local diopts                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name1' `"`diopts'"'
            = c_local diopts `""'
            - local snames : s(macros)
            - foreach sname of local snames {
            - local S_`sname' = s(`sname')
            = local S_level = s(level)
            - }
            - local S_`sname' = s(`sname')
            = local S_log = s(log)
            - }
            - local S_`sname' = s(`sname')
            = local S_fvops = s(fvops)
            - }
            - sreturn clear
            - GetDiopts DEFAULT
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DEFAULT                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - if `"`name2'"' == "" {
            = if `"options"' == "" {
              GetDiopts DUPS, `options'
              }
            - else {
            - GetDiopts DUPS options, `options'
            = GetDiopts DUPS options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DUPS                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name2' `"`options'"'
            = c_local options `""'
            - }
            - local DUPS : list DUPS - DEFAULT
            - gettoken DUPS : DUPS
            - if `"`DUPS'"' != "" {
            = if `""' != "" {
              if (strpos(`"`DUPS'"', "(")) {
              gettoken DUPS : DUPS, parse("(")
              local DUPS `"`DUPS'()"'
              }
              di as err "duplicate {bf:`DUPS'} option not allowed"
              exit 198
              }
            - sreturn clear
            - foreach sname of local snames {
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local level = `"95"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local log = `"log"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local fvops = `"true"'
            - }
            ----------------------------------------------- end _get_diopts ---
          - _vce_parse, argopt(CLuster) opt(OIM Robust) old : [`weight'`exp'], 
> `vce' `robust' `cluster'
          = _vce_parse, argopt(CLuster) opt(OIM Robust) old : [],   
            ---------------------------------------------- begin _vce_parse ---
            - version 10
            - _on_colon_parse `0'
            = _on_colon_parse , argopt(CLuster) opt(OIM Robust) old : [],   
              --------------------------------------- begin _on_colon_parse ---
              - version 8.2
              - sreturn local before ""
              - sreturn local after ""
              - gettoken before after : 0, parse(":") bind match(par) quotes
              - if "`par'" != "" {
              = if "" != "" {
                local before `"(`before')"'
                }
              - if `"`before'"' == ":" {
              = if `", argopt(CLuster) opt(OIM Robust) old "' == ":" {
                sreturn local after `"`after'"'
                exit
                }
              - while `"`COLON'"' != ":" & `"`after'"' != "" {
              = while `""' != ":" & `": [],   "' != "" {
              - gettoken COLON after : after, parse(":") bind match(par) quotes
              - if "`par'" != "" {
              = if "" != "" {
                local before `before' (`COLON')
                local COLON
                }
              - else if `"`COLON'"' != ":" {
              = else if `":"' != ":" {
                local before `"`before' `COLON'"'
                local COLON
                }
              - }
              - while `"`COLON'"' != ":" & `"`after'"' != "" {
              = while `":"' != ":" & `" [],   "' != "" {
                gettoken COLON after : after, parse(":") bind match(par) quotes
                if "`par'" != "" {
                local before `before' (`COLON')
                local COLON
                }
                else if `"`COLON'"' != ":" {
                local before `"`before' `COLON'"'
                local COLON
                }
                }
              - if `"`COLON'"' != ":" {
              = if `":"' != ":" {
                di as err "'' found where ':' expected"
                exit 198
                }
              - sreturn local before `"`before'"'
              = sreturn local before `", argopt(CLuster) opt(OIM Robust) old "'
              - sreturn local after `"`after'"'
              = sreturn local after `" [],   "'
              ----------------------------------------- end _on_colon_parse ---
            - local 0 `"`s(before)'"'
            = local 0 `", argopt(CLuster) opt(OIM Robust) old "'
            - local user `"`s(after)'"'
            = local user `" [],   "'
            - syntax [varname(default=none)], [ OPTlist(namelist) ARGOPTlist(na
> melist) PWallowed(namelist) OLD_is_ok NOARGOPT_is_ok ]
            - local touse `varlist'
            = local touse 
            - tempname o a
            - .`o' = ._optlist.new
            = .__00000R = ._optlist.new
              -class {
              -instance:
              -        array options   = {}
              -        array names     = {}
              -}
            - local optlist : list uniq optlist
            - foreach name of local optlist {
            - .`o'.addopt `name'
            = .__00000R.addopt OIM
              --------------------------------------- begin _optlist.addopt ---
              - version 9
              - syntax name(name=optspec) [, PASSthru]
              - local mname = lower("`optspec'")
              = local mname = lower("OIM")
              - if "`passthru'" != "" {
              = if "" != "" {
                local optspec `optspec'(passthru)
                }
              - .options.Arrpush "`optspec'"
              = .options.Arrpush "OIM"
              - .names.Arrpush "`mname'"
              = .names.Arrpush "oim"
              ----------------------------------------- end _optlist.addopt ---
            - }
            - .`o'.addopt `name'
            = .__00000R.addopt Robust
              --------------------------------------- begin _optlist.addopt ---
              - version 9
              - syntax name(name=optspec) [, PASSthru]
              - local mname = lower("`optspec'")
              = local mname = lower("Robust")
              - if "`passthru'" != "" {
              = if "" != "" {
                local optspec `optspec'(passthru)
                }
              - .options.Arrpush "`optspec'"
              = .options.Arrpush "Robust"
              - .names.Arrpush "`mname'"
              = .names.Arrpush "robust"
              ----------------------------------------- end _optlist.addopt ---
            - }
            - .`a' = ._optlist.new
            = .__00000S = ._optlist.new
            - local argoptlist : list uniq argoptlist
            - foreach name of local argoptlist {
            - .`a'.addopt `name'
            = .__00000S.addopt CLuster
              --------------------------------------- begin _optlist.addopt ---
              - version 9
              - syntax name(name=optspec) [, PASSthru]
              - local mname = lower("`optspec'")
              = local mname = lower("CLuster")
              - if "`passthru'" != "" {
              = if "" != "" {
                local optspec `optspec'(passthru)
                }
              - .options.Arrpush "`optspec'"
              = .options.Arrpush "CLuster"
              - .names.Arrpush "`mname'"
              = .names.Arrpush "cluster"
              ----------------------------------------- end _optlist.addopt ---
            - }
            - local OPTNAMES `"`.`o'.dumpnames'"'
              ------------------------------------ begin _optlist.dumpnames ---
              - version 9
              - forval i = 1/`.names.arrnels' {
              = forval i = 1/2 {
              - local namelist `namelist' `.names[`i']'
              = local namelist  oim
              - }
              - local namelist `namelist' `.names[`i']'
              = local namelist oim robust
              - }
              - local namelist : list uniq namelist
              - sreturn local namelist `"`namelist'"'
              = sreturn local namelist `"oim robust"'
              - class exit `"`namelist'"'
              = class exit `"oim robust"'
              -------------------------------------- end _optlist.dumpnames ---
            = local OPTNAMES `"oim robust"'
            - local ARGOPTNAMES `"`.`a'.dumpnames'"'
              ------------------------------------ begin _optlist.dumpnames ---
              - version 9
              - forval i = 1/`.names.arrnels' {
              = forval i = 1/1 {
              - local namelist `namelist' `.names[`i']'
              = local namelist  cluster
              - }
              - local namelist : list uniq namelist
              - sreturn local namelist `"`namelist'"'
              = sreturn local namelist `"cluster"'
              - class exit `"`namelist'"'
              = class exit `"cluster"'
              -------------------------------------- end _optlist.dumpnames ---
            = local ARGOPTNAMES `"cluster"'
            - local AND : list OPTNAMES & ARGOPTNAMES
            - if `:list sizeof AND' {
            = if 0 {
              di as err "vcetype '`:word 1 of `AND''' specified twice"
              exit 198
              }
            - local pwallowed : list uniq pwallowed
            - local pwlist robust cluster
            - foreach n of local pwallowed {
              local lc = lower("`n'")
              local pwlist `pwlist' `lc'
              }
            - if "`old_is_ok'" != "" {
            = if "old_is_ok" != "" {
            - local ROBUST robust
            - if `:list ROBUST in OPTNAMES' {
            = if 1 {
            - local robust Robust
            - }
            - local CLUSTER cluster
            - if `:list CLUSTER in ARGOPTNAMES' {
            = if 1 {
            - local cluster CLuster(varname)
            - }
            - }
            - local 0 `"`user'"'
            = local 0 `" [],   "'
            - syntax [fw aw pw iw] [, VCE(string asis) `robust' `cluster' ]
            = syntax [fw aw pw iw] [, VCE(string asis) Robust CLuster(varname) 
> ]
            - if `"`vce'"' != "" {
            = if `""' != "" {
              gettoken name args : vce, parse(" ,")
              local args : list retok args
              capture ParseVCE `o' `a' , `name'
              if c(rc) {
              di as err "vcetype '`name'' not allowed"
              exit 198
              }
              local name `r(vce)'
              if "`weight'" == "pweight" & !`:list name in pwlist' {
              di as err "pweights are not allowed with vce(`name')"
              exit 198
              }
              return add
              if `"`robust'"' != "" & !inlist("`name'","","robust","eim","oim",
> "cluster") {
              opts_exclusive "`robust' vce(`name')"
              }
              if "`name'" == "cluster" {
              if `"`args'"' == "" {
              di as err "invalid vce(cluster) option"
              exit 198
              }
              confirm var `args'
              unab args : `args'
              local markout `args'
              if "`cluster'" != "" {
              if !`:list args == cluster' {
              di as err "options cluster() and vce(cluster) are in conflict"
              exit 100
              }
              }
              }
              else if "`cluster'" != "" & !inlist("`name'","eim","oim") {
              opts_exclusive "cluster() vce(`name')"
              }
              if `"`args'"' != "" {
              if ! `:list name in ARGOPTNAMES' {
              di as err "invalid vce() option"
              exit 198
              }
              return local vceargs `"`:list retok args'"'
              }
              else if `:list name in ARGOPTNAMES' {
              if "`noargopt_is_ok'" == "" {
              di as err "invalid vce() option"
              exit 198
              }
              }
              }
            - else {
            - if "`weight'" == "pweight" | "`robust'" != "" {
            = if "" == "pweight" | "" != "" {
              local vce robust
              }
            - if "`cluster'" != "" {
            = if "" != "" {
              local vce cluster
              local args `cluster'
              local markout `cluster'
              }
            - return local vce `"`vce'"'
            = return local vce `""'
            - return local vceargs `"`args'"'
            = return local vceargs `""'
            - }
            - if "`return(vce)'" != "" {
            = if "" != "" {
              if `"`return(vceargs)'"' != "" {
              local ss " "
              }
              return local vceopt `"vce(`return(vce)'`ss'`return(vceargs)')"'
              }
            - if "`return(vce)'" == "cluster" {
            = if "" == "cluster" {
              return local cluster `return(vceargs)'
              }
            - if inlist("`return(vce)'", "robust", "cluster") {
            = if inlist("", "robust", "cluster") {
              return local robust robust
              }
            - if "`touse'" != "" {
            = if "" != "" {
              if "`markout'" != "" {
              markout `touse' `markout', strok
              }
              }
            ------------------------------------------------ end _vce_parse ---
          - local cluster `r(cluster)'
          = local cluster 
          - local robust `r(robust)'
          = local robust 
          - local vce = cond("`r(vce)'" != "", "`r(vce)'", "oim")
          = local vce = cond("" != "", "", "oim")
          - if `"`basehazard'"' != "" {
          = if `""' != "" {
            if `"`basehc'"' != "" {
            di as err "options {bf:basehazard()} and {bf:basehc()} may not be s
> pecified together"
            exit 198
            }
            local basehc `"basehc(`basehazard')"'
            }
          - if _by() {
            _byoptnotallowed basehc() `"`basehc'"'
            _byoptnotallowed basechazard() `"`basechazard'"'
            _byoptnotallowed basesurv() `"`basesurv'"'
            _byoptnotallowed mgale() `"`mgale'"'
            _byoptnotallowed esr() `"`esr'"'
            _byoptnotallowed schoenfeld() `"`schoenfeld'"'
            _byoptnotallowed scaledsch() `"`scaledsch'"'
            }
          - if "`altvce'" != "" {
          = if "" != "" {
            _prefix_vcenotallowed "`altvce'" basehc() `"`basehc'"'
            _prefix_vcenotallowed "`altvce'" basechazard() `"`basechazard'"'
            _prefix_vcenotallowed "`altvce'" basesurv() `"`basesurv'"'
            _prefix_vcenotallowed "`altvce'" mgale() `"`mgale'"'
            _prefix_vcenotallowed "`altvce'" esr() `"`esr'"'
            _prefix_vcenotallowed "`altvce'" schoenfeld() `"`schoenfeld'"'
            _prefix_vcenotallowed "`altvce'" scaledsch() `"`scaledsch'"'
            }
          - if "`tvc'" != "" {
          = if "" != "" {
            _tvc_notallowed basechazard() `"`basechazard'"'
            _tvc_notallowed basehc() `"`basehc'"'
            _tvc_notallowed basesurv() `"`basesurv'"'
            _tvc_notallowed esr() `"`esr'"'
            _tvc_notallowed mgale() `"`mgale'"'
            _tvc_notallowed scaledsch() `"`scaledsch'"'
            _tvc_notallowed schoenfeld() `"`schoenfeld'"'
            }
          - local passthru `basehc' `basechazard' `basesurv' `mgale' `esr' `sch
> oenfeld' `scaledsch'
          = local passthru       
          - local id : char _dta[st_id]
          - local w : char _dta[st_w]
          - local wt : char _dta[st_wt]
          - local t0 `"t0(_t0)"'
          - local d `"dead(_d)"'
          - tempvar touse
          - st_smpl `touse' `"`if'"' `"`in'"' `"`cluster'"'
          = st_smpl __00000R `"if __00000F"' `""' `""'
            ------------------------------------------------- begin st_smpl ---
            - version 6, missing
            - if _caller()>=6 {
            - args touse if in by adj
            - mark `touse' `if' `in' `_dta[st_w]'
            = mark __00000R if __00000F  
            - markout `touse' `adj'
            = markout __00000R 
            - markout `touse' `by', strok
            = markout __00000R , strok
            - qui replace `touse' = 0 if _st==0
            = qui replace __00000R = 0 if _st==0
            - qui count if `touse'
            = qui count if __00000R
            - if r(N) == 0 {
              di in red `"no observations"'
              exit 2000
              }
            - exit
            --------------------------------------------------- end st_smpl ---
          - markout `touse' `varlist'
          = markout __00000R udca male age_tv o.any_high_risk_condition eth_bin
>  imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smok
> ing1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
          - if _by() {
            qui replace `touse'=0 if `_byindex'!=_byindex()
            }
          - if `"`wt'"'=="pweight" {
          = if `""'=="pweight" {
            local robust `"robust"'
            }
          - if `"`robust'"'!="" & `"`cluster'"'=="" & `"`id'"'!="" {
          = if `""'!="" & `""'=="" & `"patient_id"'!="" {
            local cluster `"`id'"'
            }
          - if `"`cluster'"'!="" {
          = if `""'!="" {
            local cluster `"cluster(`cluster')"'
            }
          - st_show `show'
          = st_show 
            ------------------------------------------------- begin st_show ---
            - version 6.0
            - if _caller()>=6 {
            - st_is 2 full
              ------------------------------------------------- begin st_is ---
              - version 6
              - if "`1'"=="2" & `"`_dta[_dta]'"'=="st" & `"`_dta[st_ver]'"'=="2
> " & _caller()>5 {
              = if "2"=="2" & `"st"'=="st" & `"2"'=="2" & _caller()>5 {
              - if "`2'"=="analysis" & `"`_dta[st_full]'"'=="" | "`2'"=="full" 
> {
              = if "full"=="analysis" & `""'=="" | "full"=="full" {
              - exit
              --------------------------------------------------- end st_is ---
            - if "`1'" == "noshow" | `"`_dta[st_show]'"' != "" {
            = if "" == "noshow" | `""' != "" {
              exit
              }
            - di
            - di _col(10) in gr "failure _d:  " _c
            - if `"`_dta[st_bd]'"' != "" {
            = if `"hosp_any_flag"' != "" {
            - if `"`_dta[st_ev]'"' != "" {
            = if `""' != "" {
              di in ye `"`_dta[st_bd]' == `_dta[st_ev]'"'
              }
            - else di in ye `"`_dta[st_bd]'"'
            = else di in ye `"hosp_any_flag"'
            - }
            - else di in ye "1" in gr " (meaning all fail)"
            - di in gr _col(4) "analysis time _t:  " _c
            - if `"`_dta[st_orig]'"' != "" {
            = if `"time index_date"' != "" {
            - di in ye `"(`_dta[st_bt]'-origin)"' _c
            = di in ye `"(stop-origin)"' _c
            - }
            - else di in ye `"`_dta[st_bt]'"' _c
            = else di in ye `"stop"' _c
            - if `"`_dta[st_bs]'"' != "1" {
            = if `"1"' != "1" {
              di in ye `"/`_dta[st_bs]'"'
              }
            - else di
            - if `"`_dta[st_orig]'"' != "" {
            = if `"time index_date"' != "" {
            - di in gr _col(14) "origin:  " in ye `"`_dta[st_orig]'"'
            = di in gr _col(14) "origin:  " in ye `"time index_date"'
            - }
            - if `"`_dta[st_enter]'"' != "" {
            = if `"time index_date"' != "" {
            - di in gr "  enter on or after:  " in ye `"`_dta[st_enter]'"'
            = di in gr "  enter on or after:  " in ye `"time index_date"'
            - }
            - if `"`_dta[st_exit]'"' != "" {
            = if `""' != "" {
              di in gr "  exit on or before:  " in ye `"`_dta[st_exit]'"'
              }
            - if `"`_dta[st_id]'"' != "" {
            = if `"patient_id"' != "" {
            - di _col(18) in gr "id:  " in ye `"`_dta[st_id]'"'
            = di _col(18) in gr "id:  " in ye `"patient_id"'
            - }
            - if `"`_dta[st_w]'"' != "" {
            = if `""' != "" {
              di in gr _col(14) "weight:  " in ye `"`_dta[st_w]'"'
              }
            - capture confirm integer number `_dta[st_n0]'
            = capture confirm integer number 
            - if _rc { exit }
            --------------------------------------------------- end st_show ---
          - if `"`texp'"' != "" & "`tvc'" == "" {
          = if `""' != "" & "" == "" {
            di as err "{p 0 4 2}option {bf:texp()} allowed only with option {bf
> :tvc()}{p_end}"
            exit 198
            }
          - local fvtvc 0
          - if `"`tvc'"'!="" & _caller() < 14 {
          = if `""'!="" & _caller() < 14 {
            tempvar foft1
            if `"`texp'"' == "" {
            local texp _t
            }
            local texp: subinstr local texp " " "", all
            cap gen double `foft1' = `texp' if `touse'
            if _rc {
            di as err "{p 0 4 2}option {bf:texp()} invalid{p_end}"
            exit 198
            }
            qui count if `touse' & missing(`foft1')
            if `r(N)' {
            di as err "{p 0 4 2}option {bf:texp()} evaluates to missing for "
            di as err "`r(N)' observations{p_end}"
            exit 459
            }
            FunctionOfTime `foft1' if `touse'
            local tvcvars : word count `tvc'
            if `tvcvars' > 100 {
            di as err "too many variables specified"
            di as err "option {bf:tvc()} incorrectly specified"
            exit 198
            }
            di
            version 11: _rmcoll `tvc', forcedrop
            local tvcvars `r(varlist)'
            local tvc `"tvc(`tvcvars')"'
            local texp `"texp(`texp')"'
            local noblank "noblank"
            }
          - else if `"`tvc'"'!="" {
          = else if `""'!="" {
            tempvar foft1
            if `"`texp'"' == "" {
            local texp _t
            }
            local texp: subinstr local texp " " "", all
            cap gen double `foft1' = `texp' if `touse'
            if _rc {
            di as err "{p 0 4 2}option {bf:texp()} invalid{p_end}"
            exit 198
            }
            qui count if `touse' & missing(`foft1')
            if `r(N)' {
            di as err "{p 0 4 2}option {bf:texp()} evaluates to missing for "
            di as err "`r(N)' observations{p_end}"
            exit 459
            }
            FunctionOfTime `foft1' if `touse'
            fvexpand `tvc' if `touse'
            local tvc `r(varlist)'
            local tvcvars : word count `tvc'
            if `tvcvars' > 100 {
            di as err "too many variables specified"
            di as err "option {bf:tvc()} incorrectly specified"
            exit 198
            }
            di
            version 14: _rmcoll `tvc', expand
            local tvcvars `r(varlist)'
            fvrevar `tvcvars'
            local ttvcvars `r(varlist)'
            if !`: list tvcvars == ttvcvars' {
            local fvtvc 1
            }
            local tvc `"tvc(`ttvcvars')"'
            local texp `"texp(`texp')"'
            local noblank "noblank"
            }
          - if `"`cmd'"'!="" {
          = if `""'!="" {
            di _n as txt `"-> cox _t `varlist' `w' `if' `in',"' _c
            di as txt `" `robust' `cluster' `t0' `hr' `d' `tvc' `texp'"' _c
            di as txt `" `options'"' _c
            di as txt `" `breslow' `efron' `exactm' `exactp' `passthru'"'
            exit
            }
          - `version' cox _t `varlist' `w' if `touse', `robust' `cluster' `t0' 
> `d' `tvc' `texp' `options' nocoef `breslow' `efron' `exactm' `exactp' `passth
> ru' `noblank' `log'
          = version 11.1, missing: cox _t udca male age_tv o.any_high_risk_cond
> ition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.
> bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_t
> rans  if __00000R,   t0(_t0) dead(_d)    nocoef       log
          - if `fvtvc' {
          = if 0 {
            tempname b
            matrix `b' = e(b)
            local stripe : colna `b'
            local ntvc : list sizeof ttvcvars
            local TVCVARS : copy local tvcvars
            forval i = 1/`ntvc' {
            gettoken tvar ttvcvars : ttvcvars
            gettoken xvar TVCVARS : TVCVARS
            if "`tvar'" != "`xvar'" {
            local stripe : subinstr local stripe "`tvar'" "`xvar'", word all
            }
            }
            version 14: matrix colna `b' = `stripe'
            est repost b=`b', rename buildfvinfo ADDCONS
            }
          - else {
          - est repost, buildfvinfo ADDCONS
          - }
          - local chi2type "`e(chi2type)'"
          = local chi2type "LR"
          - if e(N)==0 | e(N)>=. { exit 2001 }
          - SaveOpt, `passthru'
          = SaveOpt, 
            ------------------------------------------- begin stcox.SaveOpt ---
            - syntax [, MGale(string) BASEHC(string) BASEChazard(string) BASESu
> rv(string) SCHoenfeld(string) SCAledsch(string) ESR(string) * ]
            - est local mgale "`mgale'"
            = est local mgale ""
            - est local basehc "`basehc'"
            = est local basehc ""
            - est local baseh "`basedchazard'"
            = est local baseh ""
            - est local basech "`basechazard'"
            = est local basech ""
            - est local bases "`basesurv'"
            = est local bases ""
            - SaveNm vl_sch "`schoenfeld'" "Schoenfeld"
            = SaveNm vl_sch "" "Schoenfeld"
              ------------------------------------------ begin stcox.SaveNm ---
              - args name base lname
              - if "`base'" == "" { exit }
              = if "" == "" { exit }
              -------------------------------------------- end stcox.SaveNm ---
            - SaveNm vl_ssc "`scaledsch'" "scaled Schoenfeld"
            = SaveNm vl_ssc "" "scaled Schoenfeld"
              ------------------------------------------ begin stcox.SaveNm ---
              - args name base lname
              - if "`base'" == "" { exit }
              = if "" == "" { exit }
              -------------------------------------------- end stcox.SaveNm ---
            - SaveNm vl_esr "`esr'" "efficient score"
            = SaveNm vl_esr "" "efficient score"
              ------------------------------------------ begin stcox.SaveNm ---
              - args name base lname
              - if "`base'" == "" { exit }
              = if "" == "" { exit }
              -------------------------------------------- end stcox.SaveNm ---
            - if "`mgale'" != "" { label var `mgale' "martingale" }
            = if "" != "" { label var  "martingale" }
            - if "`basehc'"!= "" {
            = if ""!= "" {
              label var `basehc' "baseline hazard contribution"
              }
            - if "`basesurv'" != "" { label var `basesurv' "baseline survivor" 
> }
            = if "" != "" { label var  "baseline survivor" }
            - if "`basechazard'"!= "" {
            = if ""!= "" {
              label var `basechazard' "cumulative baseline hazard"
              }
            --------------------------------------------- end stcox.SaveOpt ---
          - _post_vce_rank, checksize
            ------------------------------------------ begin _post_vce_rank ---
            - syntax, [CHecksize]
            - if "`checksize'" != "" {
            = if "checksize" != "" {
            - tempname V
            - capture matrix `V' = e(V)
            = capture matrix __00000S = e(V)
            - if _rc {
              exit
              }
            - local cols = colsof(`V')
            = local cols = colsof(__00000S)
            - if `cols' == 0 {
            = if 21 == 0 {
              exit
              }
            - }
            - tempname V Vi rank
            - mat `V' = e(V)
            = mat __00000T = e(V)
            - mat `Vi' = invsym(`V')
            = mat __00000U = invsym(__00000T)
            - sca `rank' = rowsof(`V') - diag0cnt(`Vi')
            = sca __00000V = rowsof(__00000T) - diag0cnt(__00000U)
            - mata:st_numscalar("e(rank)", st_numscalar("`rank'"))
            = mata:st_numscalar("e(rank)", st_numscalar("__00000V"))
            -------------------------------------------- end _post_vce_rank ---
          - if "`chi2type'"=="Wald" {
          = if "LR"=="Wald" {
            WaldTest
            }
          - else {
          - local df_m = cond("`e(rank)'"!="","`e(rank)'","0")
          = local df_m = cond("17"!="","17","0")
          - est scalar df_m = `df_m'
          = est scalar df_m = 17
          - est local chi2type "LR"
          - }
          - global S_E_ll = e(ll)
          - global S_E_chi2 = e(chi2)
          - global S_E_mdf = e(df_m)
          - st_hc `touse'
          = st_hc __00000R
            --------------------------------------------------- begin st_hc ---
            - version 6
            - args touse
            - local w : char _dta[st_wv]
            - tempvar z
            - quietly {
            - if "`_dta[st_id]'"=="" {
            = if "patient_id"=="" {
              if "`w'"=="" {
              count if `touse'
              global S_E_subj = r(N)
              est scalar N_sub = r(N)
              count if `touse' & _d
              global S_E_fail = r(N)
              est scalar N_fail = r(N)
              gen double `z' = (_t -_t0 ) if `touse'
              summ `z', meanonly
              global S_E_risk = r(sum)
              est scalar risk = r(sum)
              exit
              }
              summ `w' if `touse', meanonly
              global S_E_subj = r(sum)
              est scalar N_sub = r(sum)
              summ `w' if `touse' & _d, meanonly
              global S_E_fail = r(sum)
              est scalar N_fail = r(sum)
              gen double `z' = `w'*(_t -_t0 ) if `touse'
              summ `z', meanonly
              global S_E_risk = r(sum)
              est scalar risk = r(sum)
              exit
              }
            - if "`w'"=="" {
            = if ""=="" {
            - tempvar w
            - gen byte `w'=1 if `touse'
            = gen byte __00000U=1 if __00000R
            - }
            - sort `touse' `_dta[st_id]'
            = sort __00000R patient_id
            - by `touse' `_dta[st_id]': gen double `z' = `w' if `touse' & _n==1
            = by __00000R patient_id: gen double __00000T = __00000U if __00000
> R & _n==1
            - summ `z', meanonly
            = summ __00000T, meanonly
            - global S_E_subj = r(sum)
            - est scalar N_sub = r(sum)
            - summ `w' if `touse' & _d , meanonly
            = summ __00000U if __00000R & _d , meanonly
            - global S_E_fail = r(sum)
            - est scalar N_fail = r(sum)
            - replace `z' = `w'*(_t -_t0 ) if `touse'
            = replace __00000T = __00000U*(_t -_t0 ) if __00000R
            - summ `z', meanonly
            = summ __00000T, meanonly
            - global S_E_risk = r(sum)
            - est scalar risk = r(sum)
            - }
            ----------------------------------------------------- end st_hc ---
          - if "`robust'" != "" {
          = if "" != "" {
            est local vce robust
            }
          - est local vce "`vce'"
          = est local vce "oim"
          - est local estat_cmd stcox_estat
          - est local predict stcox_p
          - est local footnote stcox_footnote
          - _ms_eq_info
          - est hidden local k_eform = r(k_eq)
          - est hidden local marginsprop addcons allcons
          - est hidden local marginsfootnote _multirecordcheck
          - est local marginsnotok CSNell DEViance DFBeta ESR LDisplace LMax MG
> ale SCAledsch SCHoenfeld SCores
          - est local cmd2 "stcox"
          - local offset `e(offset)'
          = local offset 
          - est hidden local offset1 `offset'
          = est hidden local offset1 
          - est local offset `offset'
          = est local offset 
          - global S_E_cmd2 "stcox"
          - tempname b
          - mat `b' = e(b)
          = mat __00000S = e(b)
          - _ms_omit_info `b'
          = _ms_omit_info __00000S
          - local cols = colsof(`b')
          = local cols = colsof(__00000S)
          - if `r(k_omit)' {
          = if 3 {
          - if `r(k_omit)' == `cols' {
          = if 3 == 21 {
            local varlist ""
            }
          - else {
          - mata : st_local("varlist",invtokens(select(st_matrixcolstripe ("`b'
> ")[.,2]',1:-st_matrix("r(omit)"))))
          = mata : st_local("varlist",invtokens(select(st_matrixcolstripe ("__0
> 0000S")[.,2]',1:-st_matrix("r(omit)"))))
          - }
          - }
          - else {
            local varlist `varlist' `tvcvars'
            }
          - unopvarlist `varlist'
          = unopvarlist udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5 bmi_c
> at1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_vacc_fi
> rst liver_trans
          - local varlist `r(varlist)'
          = local varlist udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5 bmi
> _cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_vacc_
> first liver_trans
          - signestimationsample _t _t0 _d `varlist' `e(clustvar)' `e(offset)' 
> `e(strata)'
          = signestimationsample _t _t0 _d udca male age_tv eth_bin imd1 imd2 i
> md3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_di
> sease covid_vacc_first liver_trans   
            ------------------------------------ begin signestimationsample ---
            - version 10
            - syntax varlist(fv) [, EXTRA(varlist)]
            - if (`"`e(wexp)'"'!="") {
            = if (`""'!="") {
              local wvar = strtrim(substr(strtrim(`"`e(wexp)'"'), 2, .))
              capture confirm var `wvar'
              if _rc {
              tempvar wvar
              qui gen float `wvar' `e(wexp)' if e(sample)
              }
              }
            - qui _datasignature `varlist' `wvar' `extra', esample nodefault no
> names
            = qui _datasignature _t _t0 _d udca male age_tv eth_bin imd1 imd2 i
> md3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_di
> sease covid_vacc_first liver_trans  , esample nodefault nonames
            - eret local datasignature = r(datasignature)
            - eret local datasignaturevars `varlist'
            = eret local datasignaturevars _t _t0 _d udca male age_tv eth_bin i
> md1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2
>  severe_disease covid_vacc_first liver_trans
            -------------------------------------- end signestimationsample ---
          - `version' stcox, `hr' level(`level') `diopts'
          = version 11.1, missing: stcox,  level(95) 
            --------------------------------------------------- begin stcox ---
            - version 8, missing
            - local version : di "version " string(_caller()) ", missing:"
            - if replay() {
            - syntax [, ESTImate *]
            - if "`estimate'" == "" {
            = if "" == "" {
            - if _by() {
              error 190
              }
            - if `"`e(cmd2)'"' != "stcox" {
            = if `"stcox"' != "stcox" {
              error 301
              }
            - if "`e(shared)'" != "" {
            = if "" != "" {
              stcox_fr `0'
              exit
              }
            - }
            - }
            - if _by() {
              local by "by `_byvars'`_byrc0':"
              }
            - syntax [varlist(default=none fv)] [if] [in] [, FRailty(string) SH
> ared(string) ESTImate *]
            - local fvops = "`s(fvops)'" == "true" | _caller() >= 11
            = local fvops = "" == "true" | _caller() >= 11
            - if `fvops' {
            = if 1 {
            - local version: di "version " string(max(11,_caller())) ", missing
> :"
            - }
            - if `"`shared'"' != "" | `"`frailty'"' != "" {
            = if `""' != "" | `""' != "" {
              `version' `by' stcox_fr `0'
              exit
              }
            - `version' `BY' _vce_parserun stcox, stdata noneedvarlist mark(STr
> ata SHared OFFset tvc CLuster) numdepvars(0) : `0'
            = version 11.1, missing:  _vce_parserun stcox, stdata noneedvarlist
>  mark(STrata SHared OFFset tvc CLuster) numdepvars(0) : ,  level(95) 
              ----------------------------------------- begin _vce_parserun ---
              - version 9
              - local version : di "version " string(_caller()) ":"
              - local bycall = _by()
              - _on_colon_parse `0'
              = _on_colon_parse stcox, stdata noneedvarlist mark(STrata SHared 
> OFFset tvc CLuster) numdepvars(0) : ,  level(95) 
                ------------------------------------- begin _on_colon_parse ---
                - version 8.2
                - sreturn local before ""
                - sreturn local after ""
                - gettoken before after : 0, parse(":") bind match(par) quotes
                - if "`par'" != "" {
                = if "" != "" {
                  local before `"(`before')"'
                  }
                - if `"`before'"' == ":" {
                = if `"stcox, stdata noneedvarlist mark(STrata SHared OFFset tv
> c CLuster) numdepvars(0) "' == ":" {
                  sreturn local after `"`after'"'
                  exit
                  }
                - while `"`COLON'"' != ":" & `"`after'"' != "" {
                = while `""' != ":" & `": ,  level(95) "' != "" {
                - gettoken COLON after : after, parse(":") bind match(par) quot
> es
                - if "`par'" != "" {
                = if "" != "" {
                  local before `before' (`COLON')
                  local COLON
                  }
                - else if `"`COLON'"' != ":" {
                = else if `":"' != ":" {
                  local before `"`before' `COLON'"'
                  local COLON
                  }
                - }
                - while `"`COLON'"' != ":" & `"`after'"' != "" {
                = while `":"' != ":" & `" ,  level(95) "' != "" {
                  gettoken COLON after : after, parse(":") bind match(par) quot
> es
                  if "`par'" != "" {
                  local before `before' (`COLON')
                  local COLON
                  }
                  else if `"`COLON'"' != ":" {
                  local before `"`before' `COLON'"'
                  local COLON
                  }
                  }
                - if `"`COLON'"' != ":" {
                = if `":"' != ":" {
                  di as err "'' found where ':' expected"
                  exit 198
                  }
                - sreturn local before `"`before'"'
                = sreturn local before `"stcox, stdata noneedvarlist mark(STrat
> a SHared OFFset tvc CLuster) numdepvars(0) "'
                - sreturn local after `"`after'"'
                = sreturn local after `" ,  level(95) "'
                --------------------------------------- end _on_colon_parse ---
              - local ZERO `"`s(before)'"'
              = local ZERO `"stcox, stdata noneedvarlist mark(STrata SHared OFF
> set tvc CLuster) numdepvars(0) "'
              - local 0 `"`s(after)'"'
              = local 0 `" ,  level(95) "'
              - quietly syntax [anything(equalok)] [if] [in] [fw aw pw iw] [, V
> CE(string asis) VCE1(string asis) LRMODEL * ]
              - if `"`vce'"' == "" {
              = if `""' == "" {
              - MYRESULT
                ------------------------------ begin _vce_parserun.MYRESULT ---
                - args exit
                - sreturn local exit `"`exit'"'
                = sreturn local exit `""'
                -------------------------------- end _vce_parserun.MYRESULT ---
              - exit
              ------------------------------------------- end _vce_parserun ---
            - if "`s(exit)'" != "" {
            = if "" != "" {
              ereturn local cmdline `"stcox `0'"'
              exit
              }
            - `version' `by' stcox_7 `0'
            = version 11.1, missing:  stcox_7 ,  level(95) 
              ----------------------------------------- begin stcox.stcox_7 ---
              - local version : di "version " string(_caller()) ", missing:"
              - version 7, missing
              - if _caller()<6 {
                if _by() { error 190 }
                ztcox_5 `0'
                exit
                }
              - if replay() {
              - syntax [, ESTImate noHR * ]
              - if `"`estimate'"'=="" {
              = if `""'=="" {
              - if _by() { error 190 }
              - if `"`e(cmd2)'"' != "stcox" {
              = if `"stcox"' != "stcox" {
                error 301
                }
              - if "`e(prefix)'" == "svy" {
              = if "" == "svy" {
                _prefix_display, `hr' `options'
                exit
                }
              - _get_diopts diopts, `options'
              = _get_diopts diopts, level(95)
                ----------------------------------------- begin _get_diopts ---
                - version 11
                - syntax namelist(max=2) [, *]
                - gettoken name1 namelist : namelist
                - gettoken name2 namelist : namelist
                - GetDiopts diopts options, `options'
                = GetDiopts diopts options, level(95)
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 2 == 1 & 0 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local diopts                         
                  - if `K' == 2 {
                  = if 2 == 2 {
                  - c_local `c_opts' `"`options'"'
                  = c_local  options `""'
                  - }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - c_local `name1' `"`diopts'"'
                = c_local diopts `""'
                - local snames : s(macros)
                - foreach sname of local snames {
                - local S_`sname' = s(`sname')
                = local S_level = s(level)
                - }
                - local S_`sname' = s(`sname')
                = local S_after = s(after)
                - }
                - local S_`sname' = s(`sname')
                = local S_before = s(before)
                - }
                - sreturn clear
                - GetDiopts DEFAULT
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 1 == 1 & 0 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local DEFAULT                         
                  - if `K' == 2 {
                  = if 1 == 2 {
                    c_local `c_opts' `"`options'"'
                    }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - if `"`name2'"' == "" {
                = if `""' == "" {
                - GetDiopts DUPS, `options'
                = GetDiopts DUPS, 
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 1 == 1 & 0 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local DUPS                         
                  - if `K' == 2 {
                  = if 1 == 2 {
                    c_local `c_opts' `"`options'"'
                    }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - }
                - else {
                  GetDiopts DUPS options, `options'
                  c_local `name2' `"`options'"'
                  }
                - local DUPS : list DUPS - DEFAULT
                - gettoken DUPS : DUPS
                - if `"`DUPS'"' != "" {
                = if `""' != "" {
                  if (strpos(`"`DUPS'"', "(")) {
                  gettoken DUPS : DUPS, parse("(")
                  local DUPS `"`DUPS'()"'
                  }
                  di as err "duplicate {bf:`DUPS'} option not allowed"
                  exit 198
                  }
                - sreturn clear
                - foreach sname of local snames {
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local level = `"95"'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local after = `",  level(95) "'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local before = `"stcox, stdata noneedvarlist mark(STr
> ata SHared OFFset tvc CLuster) numdepvars(0) "'
                - }
                ------------------------------------------- end _get_diopts ---
              - local hr = cond(`"`hr'"'=="", "hr", "")
              = local hr = cond(`""'=="", "hr", "")
              - local h = cond(`"`e(strata)'"'=="", "Cox regression", "Stratifi
> ed Cox regr.")
              = local h = cond(`""'=="", "Cox regression", "Stratified Cox regr
> .")
              - local h1="no ties"
              - if "`e(ties)'"=="breslow" {
              = if "breslow"=="breslow" {
              - local h1="Breslow method for ties"
              - }
              - else if "`e(ties)'"=="efron" {
              = else if "breslow"=="efron" {
                local h1="Efron method for ties"
                }
              - else if "`e(ties)'"=="partial" {
              = else if "breslow"=="partial" {
                local h1="exact partial likelihood"
                }
              - else if "`e(ties)'"=="marginal" {
              = else if "breslow"=="marginal" {
                local h1="exact marginal likelihood"
                }
              - di _n as txt `"`h' -- `h1'"'
              = di _n as txt `"Cox regression -- Breslow method for ties"'
              - st_hcd
                ---------------------------------------------- begin st_hcd ---
                - version 6
                - local crtype = upper(bsubstr(`"`e(crittype)'"',1,1)) + bsubst
> r(`"`e(crittype)'"',2,.)
                = local crtype = upper(bsubstr(`"log likelihood"',1,1)) + bsubs
> tr(`"log likelihood"',2,.)
                - local crlen = max(15,length(`"`crtype'"'))
                = local crlen = max(15,length(`"Log likelihood"'))
                - di _n in gr %-`crlen's "No. of subjects" " = " in ye %12.0fc 
> e(N_sub) _col(49) in gr "Number of obs    =  " in ye %10.0fc e(N)
                = di _n in gr %-15s "No. of subjects" " = " in ye %12.0fc e(N_s
> ub) _col(49) in gr "Number of obs    =  " in ye %10.0fc e(N)
                - di in gr %-`crlen's "No. of failures" " = " in ye %12.0fc `e(
> N_fail)'
                = di in gr %-15s "No. of failures" " = " in ye %12.0fc 58
                - di in gr %-`crlen's "Time at risk" " = " in ye %12.0g e(risk)
                = di in gr %-15s "Time at risk" " = " in ye %12.0g e(risk)
                - if !missing(e(chi2)) | missing(e(df_r)) {
                - if missing(e(chi2)) {
                  di in smcl _col(49) "{help j_robustsingular##|_new:Wald chi2(
> `e(df_m)')}" in gr _col(66) "=  " in ye %10.2f e(F)
                  }
                - else {
                - di _col(49) in gr "`e(chi2type)' chi2(" in ye e(df_m) in gr "
> )" _col(66) "=  " in ye %10.2f e(chi2)
                = di _col(49) in gr "LR chi2(" in ye e(df_m) in gr ")" _col(66)
>  "=  " in ye %10.2f e(chi2)
                - }
                - di in gr %-`crlen's "`crtype'" " =   " in ye %10.0g e(ll) _co
> l(49) in gr "Prob > chi2" _col(66) "=  " in ye %10.4f chiprob(e(df_m), e(chi2
> ))
                = di in gr %-15s "Log likelihood" " =   " in ye %10.0g e(ll) _c
> ol(49) in gr "Prob > chi2" _col(66) "=  " in ye %10.4f chiprob(e(df_m), e(chi
> 2))
                - }
                - else if !missing(e(F)) {
                  di _col(49) in gr "F(" in ye %4.0f e(df_m) in gr "," in ye %7
> .0f e(df_r) in gr ")" _col(66) "=  " in ye %10.2f e(F)
                  di in gr %-`crlen's "`crtype'" " =   " in ye %10.0g e(ll) _co
> l(49) in gr "Prob > F" _col(66) "=  " in ye %10.4f Ftail(e(df_m), e(df_r), e(
> F))
                  }
                - else {
                  local dfm_l : di %4.0f e(df_m)
                  local dfm_l2: di %7.0f e(df_r)
                  di in smcl _col(49) "{help j_robustsingular##|_new:F(`dfm_l',
> `dfm_l2')}" in gr _col(66) "=  " in ye %10.2f e(F)
                  di in gr %-`crlen's "`crtype'" " =   " in ye %10.0g e(ll) _co
> l(49) in gr "Prob > F" _col(66) "=  " in ye %10.4f .
                  }
                ------------------------------------------------ end st_hcd ---
              - di
              - local offset `e(offset)'
              = local offset 
              - est local offset
              - _coef_table, `hr' `options'
              = _coef_table, hr level(95)
                ----------------------------------------- begin _coef_table ---
                - version 11
                - local vv : di "version " string(max(11,_caller())) ", missing
> :"
                - if (!c(noisily) & c(coeftabresults) == "off") {
                  exit
                  }
                - _check_eclass
                - syntax [, BMATrix(passthru) VMATrix(passthru) * ]
                - if "`e(b)'" == "" & "`e(V)'" == "" & "`bmatrix'`vmatrix'"==""
>  {
                = if "matrix" == "" & "matrix" == "" & ""=="" {
                  exit
                  }
                - local mc_cmds contrast margins pwcompare pwmean
                - local cmd "`e(cmd)'"
                = local cmd "cox"
                - local keepmc : list cmd in mc_cmds
                - if inlist("`cmd'", "pwcompare", "pwmean") {
                = if inlist("cox", "pwcompare", "pwmean") {
                  local groups GROUPS
                  }
                - if "`cmd'" == "regress" {
                = if "cox" == "regress" {
                  local beta Beta
                  }
                - if "`cmd'" == "gsem" {
                = if "cox" == "gsem" {
                  local fvignore fvignore(int 0)
                  local flignore flignore
                  }
                - if "`cmd'" == "sem" {
                = if "cox" == "sem" {
                  local standardized STANDARDIZED
                  local showginvariant SHOWGINVariant
                  local nolabel NOLABel LABel NOFVLABel FVLABel
                  local nofootnote NOFOOTnote
                  local wrap wrap(numlist max=1) fvwrap(passthru)
                  }
                - if "`e(mi)'"=="mi" {
                = if ""=="mi" {
                  local dftable DFTable
                  local dfonly DFONLY
                  local noclustreport NOCLUSTReport
                  local pisematrix PISEMATrix(string)
                  }
                - syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(s
> tring) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) R
> OWCFormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(strin
> g) MVMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCL
> ASSMATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string 
> asis) `beta' `standardized' NOCI NOPValues `dftable' `dfonly' dfci DFPValues 
> dfmissing `groups' COEFLegend selegend `fvignore' `flignore' `showginvariant'
>  `nolabel' `nofootnote' `wrap' sort `pisematrix' depname(string) COEFTitle(st
> ring) coeftitle2(string) ptitle(string) cititle(string) NOMCLEGend noCNSRepor
> t FULLCNSReport `noclustreport' cformat(passthru) sformat(passthru) pformat(p
> assthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM NOTEST SEParator(int
> eger 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(string) eqselect(st
> ring) * ]
                = syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(s
> tring) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) R
> OWCFormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(strin
> g) MVMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCL
> ASSMATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string 
> asis)   NOCI NOPValues   dfci DFPValues dfmissing  COEFLegend selegend       
> sort  depname(string) COEFTitle(string) coeftitle2(string) ptitle(string) cit
> itle(string) NOMCLEGend noCNSReport FULLCNSReport  cformat(passthru) sformat(
> passthru) pformat(passthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM N
> OTEST SEParator(integer 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(
> string) eqselect(string) * ]
                - if "`wrap'" != "" {
                = if "" != "" {
                  opts_exclusive `"wrap(`wrap') `fvwrap'"'
                  local fvwrap fvwrap(`wrap')
                  }
                - if "`nolabel'`label'" != "" {
                = if "" != "" {
                  opts_exclusive "`nolabel' `label'"
                  opts_exclusive "`nofvlabel' `fvlabel'"
                  opts_exclusive "`nolabel' `fvlabel'"
                  opts_exclusive "`nofvlabel' `label'"
                  if "`nolabel'" != "" {
                  local fvlabel nofvlabel
                  }
                  else {
                  local fvlabel fvlabel
                  }
                  }
                - else local fvlabel `nofvlabel' `fvlabel'
                = else local fvlabel  
                - local type `coeflegend' `selegend'
                = local type  
                - opts_exclusive "`type' `standardized'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if (`"`rowmatrix'"'=="" & "`norowci'"!="") {
                = if (`""'=="" & ""!="") {
                  di as err "{bf:norowci} requires {bf:rowmatrix()}"
                  exit 198
                  }
                - if ("`dftable'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`dftable'}"
                  exit 198
                  }
                - if ("`dfonly'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`dfonly'}"
                  exit 198
                  }
                - if ("`noci'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`noci'}"
                  exit 198
                  }
                - if "`standardized'" != "" & "`bstdmatrix'" != "" {
                = if "" != "" & "" != "" {
                  local beta beta
                  local standardized
                  }
                - if `:length local type' == 0 {
                = if 0 == 0 {
                - local type `beta' `noci' `nopvalues' `dftable' `dfonly' `grou
> ps' `dfci' `dfpvalues'
                = local type        
                - }
                - opts_exclusive "`type'"
                = opts_exclusive ""
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts 
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`first' `nofirst'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`first' `showeqns'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local cnsreport `cnsreport' `fullcnsreport'
                = local cnsreport  
                - opts_exclusive "`cnsreport'"
                = opts_exclusive ""
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts 
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if `"`showeqns'"' != "" {
                = if `""' != "" {
                  local nofirst nofirst
                  }
                - if `"`ematrix'`noeqcheck'"' == "" {
                = if `""' == "" {
                - if `"`e(error)'"' == "matrix" {
                = if `""' == "matrix" {
                  local ematrix e(error)
                  }
                - }
                - _get_mcompare, `options'
                = _get_mcompare, hr
                  ------------------------------------- begin _get_mcompare ---
                  - version 11
                  - local cmd `"`e(cmd)'"'
                  = local cmd `"cox"'
                  - syntax [name(name=caller)] [, *]
                  - local is_pwc = inlist("pwcompare", "`cmd'", "`caller'") | i
> nlist("pwmean", "`cmd'", "`caller'")
                  = local is_pwc = inlist("pwcompare", "cox", "") | inlist("pwm
> ean", "cox", "")
                  - local is_marg = inlist("margins", "`cmd'", "`e(cmd2)'", "`c
> aller'")
                  = local is_marg = inlist("margins", "cox", "stcox", "")
                  - local OPTIONS NOADJust BONferroni DUNCan DUNNett SCHeffe SI
> Dak SNK TUKey ADJustall
                  - if `is_pwc' {
                  = if 0 {
                    syntax [name] [, `OPTIONS' MCOMPare(string) *]
                    }
                  - else {
                  - syntax [name] [, MCOMPare(string) *]
                  - local suboption mcompare()
                  - }
                  - sreturn clear
                  - sreturn local options `"`options'"'
                  = sreturn local options `"hr"'
                  - if `is_pwc' {
                  = if 0 {
                    local METHOD `noadjust' `bonferroni' `duncan' `dunnett' `sc
> heffe' `sidak' `snk' `tukey'
                    local METHOD : list uniq METHOD
                    opts_exclusive "`METHOD'"
                    local ALL `adjustall'
                    opts_exclusive "`noadjust' `ALL'"
                    }
                  - local 0 `", `mcompare'"'
                  = local 0 `", "'
                  - capture syntax [, `OPTIONS']
                  = capture syntax [, NOADJust BONferroni DUNCan DUNNett SCHeff
> e SIDak SNK TUKey ADJustall]
                  - if c(rc) {
                    di as err "invalid mcompare() option;"
                    di as err "method '`mcompare'' not allowed"
                    error 198
                    }
                  - local METHOD `METHOD' `noadjust' `bonferroni' `duncan' `dun
> nett' `scheffe' `sidak' `snk' `tukey'
                  = local METHOD         
                  - local METHOD : list uniq METHOD
                  - local ALL `ALL' `adjustall'
                  = local ALL  
                  - local ALL : list uniq ALL
                  - opts_exclusive "`METHOD'" `suboption'
                  = opts_exclusive "" mcompare()
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts 
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - if "`METHOD'" == "" {
                  = if "" == "" {
                  - if "`ALL'" != "" {
                  = if "" != "" {
                    di as err "multiple comparison method required with the adj
> ustall option"
                    exit 198
                    }
                  - local METHOD noadjust
                  - local noadjust noadjust
                  - }
                  - opts_exclusive "`ALL' `noadjust'" `suboption'
                  = opts_exclusive " noadjust" mcompare()
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  noadjust
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `"noadjust"' != "" {
                    - local ++n
                    - gettoken item`n' opts : opts, bind
                    = gettoken item1 opts : opts, bind
                    - }
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 1 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local EXCLUDE duncan dunnett snk tukey
                  - if `:list METHOD in EXCLUDE' {
                  = if 0 {
                    if `is_pwc' {
                    local opt : copy local METHOD
                    }
                    else {
                    local opt "mcompare(`METHOD')"
                    }
                    local cmdlist anova manova regress mvreg pwmean
                    if "`cmd'" == "pwcompare" {
                    local cmd `"`e(cmd_est)'"'
                    }
                    if `is_marg' {
                    local cmd margins
                    }
                    if !`:list cmd in cmdlist' | !`is_pwc' {
                    di as err `"method `opt' is not allowed with results from `
> cmd'"'
                    exit 322
                    }
                    if `"`e(prefix)'"' == "svy" {
                    di as err `"method `opt' is not allowed with results using 
> the svy prefix"'
                    exit 322
                    }
                    local vce `"`e(vce)'"'
                    if !inlist("`vce'", "", "ols") {
                    di as err `"method `opt' is not allowed with results using 
> vce(`vce')"'
                    exit 322
                    }
                    }
                  - local EXCLUDE duncan dunnett snk tukey scheffe
                  - if `:list METHOD in EXCLUDE' {
                  = if 0 {
                    if "`ALL'" != "" {
                    di as err `"option adjustall is not allowed with method `ME
> THOD'"'
                    exit 198
                    }
                    }
                  - sreturn local method `"`METHOD'"'
                  = sreturn local method `"noadjust"'
                  - sreturn local adjustall `"`ALL'"'
                  = sreturn local adjustall `""'
                  --------------------------------------- end _get_mcompare ---
                - local method `"`s(method)'"'
                = local method `"noadjust"'
                - local all `"`s(adjustall)'"'
                = local all `""'
                - local options `"`s(options)'"'
                = local options `"hr"'
                - if "`method'" != "noadjust" {
                = if "noadjust" != "noadjust" {
                  local keepmc 1
                  }
                - opts_exclusive "`all' `groups'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if "`method'" == "dunnett" {
                = if "noadjust" == "dunnett" {
                  opts_exclusive "`method' `groups'"
                  }
                - _get_diopts diopts options, `options' `fvwrap' `fvlabel'
                = _get_diopts diopts options, hr  
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, hr
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 2 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `"hr"'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local diopts `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_method = s(method)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_options = s(options)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `"options"' == "" {
                    GetDiopts DUPS, `options'
                    }
                  - else {
                  - GetDiopts DUPS options, `options'
                  = GetDiopts DUPS options, hr
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 2 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `"hr"'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name2' `"`options'"'
                  = c_local options `"hr"'
                  - }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local method = `"noadjust"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local options = `"hr"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - local legend coeflegend selegend
                - local legend : list legend & diopts
                - local diopts : list diopts - legend
                - local lstretch lstretch nolstretch
                - local lstretch : list lstretch & diopts
                - local diopts : list diopts - lstretch
                - local markdown markdown
                - local markdown : list markdown & diopts
                - local diopts : list diopts - markdown
                - _get_diopts ignore, `diopts' `cformat' `sformat' `pformat'
                = _get_diopts ignore,    
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `""'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local ignore `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_options = s(options)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_method = s(method)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `""' == "" {
                  - GetDiopts DUPS, `options'
                  = GetDiopts DUPS, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - }
                  - else {
                    GetDiopts DUPS options, `options'
                    c_local `name2' `"`options'"'
                    }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local options = `"hr"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local method = `"noadjust"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - local cformat `"`s(cformat)'"'
                = local cformat `""'
                - local sformat `"`s(sformat)'"'
                = local sformat `""'
                - local pformat `"`s(pformat)'"'
                = local pformat `""'
                - _get_eformopts , eformopts(`options') allowed(__all__) soptio
> ns
                = _get_eformopts , eformopts(hr) allowed(__all__) soptions
                  ------------------------------------ begin _get_eformopts ---
                  - version 8.0
                  - syntax [, eformopts(string asis) soptions ALLOWed(string) ]
                  - local 0 , `eformopts'
                  = local 0 , hr
                  - local EFALL NOHR hr NOSHR shr or IRr RRr tr TRatio
                  - if "`soptions'" != "" {
                  = if "soptions" != "" {
                  - syntax [, EForm1(passthru) EForm `EFALL' * ]
                  = syntax [, EForm1(passthru) EForm NOHR hr NOSHR shr or IRr R
> Rr tr TRatio * ]
                  - local opts `"`options'"'
                  = local opts `""'
                  - local 0 , `eform1' `eform' `nohr' `hr' `noshr' `shr' `or' `
> irr' `rrr' `tr' `tratio'
                  = local 0 ,    hr       
                  - }
                  - if "`allowed'" == "__all__" {
                  = if "__all__" == "__all__" {
                  - local allowed `EFALL'
                  = local allowed NOHR hr NOSHR shr or IRr RRr tr TRatio
                  - }
                  - foreach ef of local allowed {
                  - capture confirm name `ef'
                  = capture confirm name NOHR
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts  nohr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name hr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name NOSHR
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name shr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name or
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or
                  - }
                  - capture confirm name `ef'
                  = capture confirm name IRr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name RRr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name tr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr tr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name TRatio
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr tr tratio
                  - }
                  - local efopts : list uniq efopts
                  - syntax [, EForm1(string) EForm `allowed' ]
                  = syntax [, EForm1(string) EForm NOHR hr NOSHR shr or IRr RRr
>  tr TRatio ]
                  - foreach ef of local efopts {
                  - local eform `eform' ``ef''
                  = local eform  
                  - }
                  - local eform `eform' ``ef''
                  = local eform  hr
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - if `"`eform1'"'=="Odds Ratio" local eform_cons_ti = "Odds"
                  = if `""'=="Odds Ratio" local eform_cons_ti = "Odds"
                  - else if `"`eform1'"'=="Haz. Ratio" local eform_cons_ti="Haz
> ard"
                  = else if `""'=="Haz. Ratio" local eform_cons_ti="Hazard"
                  - else if `"`eform1'"'=="Time Ratio" local eform_cons_ti = "T
> ime"
                  = else if `""'=="Time Ratio" local eform_cons_ti = "Time"
                  - else if `"`eform1'"'=="IRR" local eform_cons_ti = "Inc. Rat
> e"
                  = else if `""'=="IRR" local eform_cons_ti = "Inc. Rate"
                  - else if `"`eform1'"'=="Risk Ratio" local eform_cons_ti = "R
> isk"
                  = else if `""'=="Risk Ratio" local eform_cons_ti = "Risk"
                  - else if `"`eform1'"'=="Hlth Ratio" local eform_cons_ti="Hea
> lth"
                  = else if `""'=="Hlth Ratio" local eform_cons_ti="Health"
                  - local k : list sizeof eform
                  - if `k' {
                  = if 1 {
                  - opts_exclusive "`eform'"
                  = opts_exclusive "hr"
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts hr
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `"hr"' != "" {
                    - local ++n
                    - gettoken item`n' opts : opts, bind
                    = gettoken item1 opts : opts, bind
                    - }
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 1 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - if `:length local eform1' {
                  = if 0 {
                    opts_exclusive "eform() `eform'"
                    }
                  - }
                  - if `k' {
                  = if 1 {
                  - if ("`eform'"=="eform") local eform1 = "exp(b)"
                  = if ("hr"=="eform") local eform1 = "exp(b)"
                  - else if ("`eform'"=="hr") {
                  = else if ("hr"=="hr") {
                  - local eform1 = "Haz. Ratio"
                  - local eform_cons_ti = "Hazard"
                  - }
                  - else if ("`eform'"=="shr") {
                  = else if ("hr"=="shr") {
                    local eform1 = "SHR"
                    local eform_cons_ti = "Subhazard"
                    }
                  - else if ("`eform'"=="tr") {
                  = else if ("hr"=="tr") {
                    local eform1 = "Time Ratio"
                    local eform_cons_ti = "Time"
                    }
                  - else if ("`eform'"=="tratio") {
                  = else if ("hr"=="tratio") {
                    local eform1 = "Time Ratio"
                    local eform_cons_ti = "Time"
                    }
                  - else if ("`eform'"=="or") {
                  = else if ("hr"=="or") {
                    local eform1 = "Odds Ratio"
                    if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(c
> md)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                    local eform_cons_ti = "Rel. Risk"
                    }
                    else {
                    local eform_cons_ti = "Odds"
                    }
                    }
                  - else if ("`eform'"=="irr") {
                  = else if ("hr"=="irr") {
                    local eform1 = "IRR"
                    local eform_cons_ti = "Inc. Rate"
                    }
                  - else if ("`eform'"=="rrr") {
                  = else if ("hr"=="rrr") {
                    local eform1 = "RRR"
                    local eform_cons_ti = "Rel. Risk"
                    }
                  - else if ("`eform'"!="nohr") & ("`eform'"!="noshr") {
                  = else if ("hr"!="nohr") & ("hr"!="noshr") {
                    local eform1 = upper("`eform'")
                    }
                  - }
                  - sreturn clear
                  - sreturn local options `"`opts'"'
                  = sreturn local options `""'
                  - sreturn local opt `eform'
                  = sreturn local opt hr
                  - sreturn local str `eform1'
                  = sreturn local str Haz. Ratio
                  - if `"`eform1'"' != "" {
                  = if `"Haz. Ratio"' != "" {
                  - sreturn local eform eform(`"`eform1'"')
                  = sreturn local eform eform(`"Haz. Ratio"')
                  - }
                  - else sreturn local eform ""
                  - sreturn local eform_cons_ti `eform_cons_ti'
                  = sreturn local eform_cons_ti Hazard
                  -------------------------------------- end _get_eformopts ---
                - if inlist("`bmatrix'", "", "e(b)") & "`e(k_eform)'" == "0" {
                = if inlist("", "", "e(b)") & "1" == "0" {
                  local eform
                  }
                - else local eform `"`s(str)'"'
                = else local eform `"Haz. Ratio"'
                - local eform_cons_ti `"`s(eform_cons_ti)'"'
                = local eform_cons_ti `"Hazard"'
                - if ("`e(consonly)'"!="1" | `"`eform_cons_ti'"'=="") {
                = if (""!="1" | `"Hazard"'=="") {
                - local eformdi `"`s(str)'"'
                = local eformdi `"Haz. Ratio"'
                - }
                - else {
                  local eformdi `"`eform_cons_ti'"'
                  }
                - local coefttl = cond(`"`eform'"'==`""', `"`coeftitle'"', `"`e
> formdi'"')
                = local coefttl = cond(`"Haz. Ratio"'==`""', `""', `"Haz. Ratio
> "')
                - local options `"`s(options)'"'
                = local options `""'
                - _get_diparmopts, diparmopts(`options') level(`level')
                = _get_diparmopts, diparmopts() level(95)
                  ----------------------------------- begin _get_diparmopts ---
                  - if _caller() < 8.2 {
                    _get_diparmopts_8 `0'
                    exit
                    }
                  - version 9
                  - local version : di "version " string(_caller()) ":"
                  - syntax [, diparmopts(string asis) EXECute soptions bottom p
> lus SYNTAXonly * ]
                  - local goptions `options'
                  = local goptions level(95)
                  - SpliceGlobals junk , `goptions'
                  = SpliceGlobals junk , level(95)
                    ------------------- begin _get_diparmopts.SpliceGlobals ---
                    - syntax name(id="macro name" name=c_diparm) [, diparm(stri
> ng asis) Level(cilevel) dof(passthru) syntaxonly ]
                    - if `"`dof'"' == "" & `"`e(df_r)'"' != "" {
                    = if `""' == "" & `""' != "" {
                      capture confirm integer number `e(df_r)'
                      if !c(rc) {
                      local gdof dof(`e(df_r)')
                      }
                      capture
                      }
                    - else local gdof `"`dof'"'
                    = else local gdof `""'
                    - local glevel `level'
                    = local glevel 95
                    - local lopt level(`glevel')
                    = local lopt level(95)
                    - if (`"`diparm'"' == "") exit
                    = if (`""' == "") exit
                    --------------------- end _get_diparmopts.SpliceGlobals ---
                  - local 0 `", `diparmopts'"'
                  = local 0 `", "'
                  - local diparmopts
                  - local k 0
                  - syntax [, diparm(string asis) * ]
                  - while `"`diparm'"' != "" {
                  = while `""' != "" {
                    local ++k
                    local single 1
                    local after
                    capture _on_colon_parse `diparm'
                    if !c(rc) {
                    local single 0
                    local diparm `"`s(before)'"'
                    local after `"`s(after)'"'
                    }
                    capture
                    SpliceGlobals diparm , diparm(`diparm') `syntaxonly' `gopti
> ons'
                    local diparm`k' `"`diparm'"'
                    local diparmopts `"`diparmopts' : `diparm'"'
                    if `single' | `"`:list retok after'"' == "" {
                    local 0 `", `options'"'
                    syntax [, diparm(string asis) * ]
                    }
                    else {
                    local diparm `"`after'"'
                    }
                    }
                  - if `"`soptions'"' == "" {
                  = if `""' == "" {
                  - syntax [, diparm(string asis) ]
                  - }
                  - if ("`execute'" == "") {
                  = if ("" == "") {
                  - sreturn clear
                  - sreturn local options `"`options'"'
                  = sreturn local options `""'
                  - sreturn local diparm `"`diparmopts'"'
                  = sreturn local diparm `""'
                  - forval i = 1/`k' {
                  = forval i = 1/0 {
                    sreturn local diparm`i' `"`diparm`i''"'
                    }
                  - sreturn local k `k'
                  = sreturn local k 0
                  - exit
                  ------------------------------------- end _get_diparmopts ---
                - local NODIPARM : length local nodiparm
                - if `NODIPARM' {
                = if 0 {
                  local options
                  }
                - local GTOPTS parse(":") bind quotes
                - local k 0
                - if !`NODIPARM' {
                = if !0 {
                - if `"`e(diparm)'"' != "" {
                = if `""' != "" {
                  local i 0
                  local diparm `"`e(diparm)'"'
                  }
                - else if `"`e(diparm1)'"' != "" {
                = else if `""' != "" {
                  local i 1
                  local diparm `"`e(diparm1)'"'
                  }
                - while `:length local diparm' {
                = while 0 {
                  gettoken diparm rest : diparm, `GTOPTS'
                  while `:length local rest' {
                  local ++k
                  local diparm`k' : copy local diparm
                  gettoken COLON rest : rest, `GTOPTS'
                  gettoken diparm rest : rest, `GTOPTS'
                  }
                  local ++k
                  local diparm`k' : copy local diparm
                  local ++i
                  local diparm `"`e(diparm`i')'"'
                  }
                - }
                - if `:length local options' {
                = if 0 {
                  local 0 `", `options'"'
                  syntax [, diparm(string asis) *]
                  if `k' & `:length local diparm' {
                  local ++k
                  local diparm`k' __sep__
                  }
                  while `:length local diparm' {
                  gettoken diparm rest : diparm, `GTOPTS'
                  while `:length local rest' {
                  local ++k
                  local diparm`k' : copy local diparm
                  gettoken COLON rest : rest, `GTOPTS'
                  gettoken diparm rest : rest, `GTOPTS'
                  }
                  local ++k
                  local diparm`k' : copy local diparm
                  local 0 `", `options'"'
                  syntax [, diparm(string asis) *]
                  }
                  }
                - if "`markdown'" != "" {
                = if "" != "" {
                  local lsize = c(linesize)
                  set linesize 255
                  }
                - `vv' mata: _coef_table()
                = version 11, missing: mata: _coef_table()
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `""'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local __00000U `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_k = s(k)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `""' == "" {
                  - GetDiopts DUPS, `options'
                  = GetDiopts DUPS, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - }
                  - else {
                    GetDiopts DUPS options, `options'
                    c_local `name2' `"`options'"'
                    }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local k = `"0"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - if "`markdown'" != "" {
                = if "" != "" {
                  set linesize `lsize'
                  }
                - if "`eqselect'" == "" {
                = if "" == "" {
                - if "`eformdi'"!="" & ("`e(cmd)'"!="gnbreg" | "`e(prefix)'"=="
> svy") {
                = if "Haz. Ratio"!="" & ("cox"!="gnbreg" | ""=="svy") {
                - local k_eform `e(k_eform)'
                = local k_eform 1
                - if ("`k_eform'"=="") {
                = if ("1"=="") {
                  local k_eform = 1
                  }
                - local k_eq `e(k_eq)'
                = local k_eq 
                - if ("`k_eq'"=="") {
                = if (""=="") {
                - local k_eq = 1
                - }
                - if (`k_eform'<`k_eq' & `k_eform') {
                = if (1<1 & 1) {
                  if ("`e(cmd2)'" == "stintreg" | "`e(cmd2)'" == "streg") & ("`
> e(cmd)'" == "weibull" | "`e(cmd)'" == "gompertz") {
                  }
                  else {
                  _eform_multeq_note efnote : `k_eform'
                  di as txt "`efnote'"
                  }
                  }
                - }
                - if (`"`eformdi'"'!="" & "`e(noconstant)'"=="0" & `"`eform_con
> s_ti'"'!="" & "`e(consonly)'"!="1") {
                = if (`"Haz. Ratio"'!="" & ""=="0" & `"Hazard"'!="" & ""!="1") 
> {
                  if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd
> )'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                  local asvar = `"`e(ranvars)'`e(fixvars)'`e(indvars)'"' != ""
                  if `"`e(casevars)'"' != "" & `asvar' {
                  local note1 "Exponentiated coefficients represent odds ratios
>  for "
                  local note2 "alternative-specific variables (first equation) 
> and "
                  local note3 "{help j_cmrisk##|_new:relative-risk ratios} "
                  local note4 "for case-specific variables."
                  di as txt "{p 0 6 2}Note: `note1'`note2'`note3'`note4'{p_end}
> "
                  }
                  }
                  if "`eform_cons_ti'" == "Inc. Rate" {
                  local eform_cons_note "incidence rate"
                  }
                  else if "`eform_cons_ti'" == "Rel. Risk" {
                  local eform_cons_note "relative risk"
                  }
                  else if "`eform_cons_ti'" == "Health" {
                  local eform_cons_note "health (probability of no disease)"
                  }
                  else {
                  local eform_cons_note = strlower(`"`eform_cons_ti'"')
                  }
                  local eform_cons_note "baseline `eform_cons_note'"
                  if ("`e(cmd2)'"=="") {
                  local cmd `e(cmd)'
                  }
                  else {
                  local cmd `e(cmd2)'
                  }
                  local f2 = udsubstr("`cmd'",1,2)
                  local is_re = ("`f2'"=="xt" | "`f2'"=="me")
                  if `is_re' {
                  local extranote " (conditional on zero random effects)"
                  }
                  di as txt "{p 0 6 2}Note: {res:_cons} estimates " "`eform_con
> s_note'`extranote'" _c
                  if ("`e(cmd)'"=="mlogit" | "`e(cmd)'"=="asclogit" | "`e(cmd)'
> "=="cmclogit" | "`e(cmd)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                  di as txt " for each outcome" _c
                  }
                  di as txt ".{p_end}"
                  }
                - }
                - return add
                - if !`keepmc' {
                = if !0 {
                - return local mcmethod
                - return local mctitle
                - }
                ------------------------------------------- end _coef_table ---
              - est local offset `offset'
              = est local offset 
              - `version' stcox_footnote
              = version 11.1, missing: stcox_footnote
                -------------------------------------- begin stcox_footnote ---
                - version 10
                - local pararg = min(78,c(linesize))
                - if "`e(strata)'" != "" {
                = if "" != "" {
                  local l = `pararg'-13-length("`e(strata)'")
                  di as txt _col(`l') "Stratified by `e(strata)'"
                  }
                - if "`e(k_eform)'" != "1" {
                = if "1" != "1" {
                  local t "tvc"
                  if (_caller()<11) local t "t"
                  local texp "`e(texp)'"
                  di as txt "{p 0 6 0 `pararg'}Note: Variables in " as res "`t'
> " as txt " equation interacted with `texp'.{p_end}"
                  }
                ---------------------------------------- end stcox_footnote ---
              - if `"`e(converged)'"' == "0" {
              = if `""' == "0" {
                di as txt "Warning: convergence not achieved"
                }
              - exit
              ------------------------------------------- end stcox.stcox_7 ---
            - if (!replay() | "`estimate'" != "") {
            = if (!replay() | "" != "") {
              ereturn local cmdline `"stcox `0'"'
              }
            - exit
            ----------------------------------------------------- end stcox ---
          ----------------------------------------------- end stcox.stcox_7 ---
        - if (!replay() | "`estimate'" != "") {
        = if (!replay() | "estimate" != "") {
        - ereturn local cmdline `"stcox `0'"'
        = ereturn local cmdline `"stcox udca male age_tv o.any_high_risk_condit
> ion eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bm
> i_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_tra
> ns if __00000F, estimate "'
        - }
        - exit
        --------------------------------------------------------- end stcox ---
      - qui predict `coxindex' if `touse', xb
      = qui predict __000004 if __00000F, xb
        ----------------------------------------------------- begin predict ---
        - version 8.2, missing
        - if "`e(cmd)'" == "rocreg" & "`e(predict)'" == "" {
        = if "cox" == "rocreg" & "stcox_p" == "" {
          di as err "predict not allowed after nonparametric ROC"
          exit 198
          }
        - if "`e(mi)'"!="" & "`e(b)'"!="matrix" {
        = if ""!="" & "matrix"!="matrix" {
          error 321
          }
        - if _caller()<=5 | "`e(predict)'"=="" {
        = if _caller()<=5 | "stcox_p"=="" {
          _predict `0'
          }
        - else {
        - local v : display string(_caller())
        - version `v', missing
        = version 11.1, missing
        - `e(predict)' `0'
        = stcox_p __000004 if __00000F, xb
          --------------------------------------------------- begin stcox_p ---
          - version 11
          - if `"`e(cmd2)'"' != "stcox" {
          = if `"stcox"' != "stcox" {
            error 301
            }
          - local scopt = cond(_caller() < 11, "SCores", "SCOres")
          - syntax [anything] [if] [in] [, XB Index STDP HR CSNell DEViance CCS
> Nell CMGale MGale BASEChazard basehc BASESurv EFFects ESR `scopt' SCHoenfeld 
> SCAledsch DFBeta LDisplace LMax PARTial noOFFset ]
          = syntax [anything] [if] [in] [, XB Index STDP HR CSNell DEViance CCS
> Nell CMGale MGale BASEChazard basehc BASESurv EFFects ESR SCOres SCHoenfeld S
> CAledsch DFBeta LDisplace LMax PARTial noOFFset ]
          - local type "`xb' `index' `stdp' `hr' `csnell' `deviance' `ccsnell'"
          = local type "xb      "
          - local type "`type' `cmgale' `mgale' `basechazard' `basehc' `basesur
> v'"
          = local type "xb           "
          - local type "`type' `effects' `scores' `esr' `schoenfeld' `dfbeta'"
          = local type "xb                "
          - local type "`type' `ldisplace' `scaledsch' `lmax'"
          = local type "xb                   "
          - if `:word count `type'' > 1 {
          = if 1 > 1 {
            di as err "{p 0 4 2}only one of "
            di as err "`: list uniq type' "
            di as err "may be specified{p_end}"
            exit 198
            }
          - local type : word 1 of `type'
          = local type : word 1 of xb                   
          - if "`type'" == "scores" {
          = if "xb" == "scores" {
            local type esr
            }
          - if "`e(prefix)'" == "svy" {
          = if "" == "svy" {
            if inlist("`type'", "mgale", "csnell", "deviance", "cmgale", "ccsne
> ll") | inlist("`type'", "schoenfeld", "scaledsch", "dfbeta", "ldisplace", "lm
> ax") {
            di as err "{p 0 4 2}option `type' not allowed after "
            di as err "estimation with svy{p_end}"
            exit 322
            }
            }
          - if _caller() < 11 {
            if "`type'" == "esr" | "`type'" == "csnell" {
            local partial partial
            }
            }
          - if inlist("`type'", "esr", "dfbeta", "ldisplace", "lmax", "mgale", 
> "deviance", "csnell") {
          = if inlist("xb", "esr", "dfbeta", "ldisplace", "lmax", "mgale", "dev
> iance", "csnell") {
            if "`partial'" == "" {
            local type c`type'
            }
            }
          - else if "`partial'" != "" {
          = else if "" != "" {
            di as err "{p 0 4 2}option {bf:partial} not allowed{p_end}"
            exit 198
            }
          - if inlist("`type'", "dfbeta", "cdfbeta") {
          = if inlist("xb", "dfbeta", "cdfbeta") {
            if "`e(vce)'" != "oim" & "`e(V_modelbased)'" == "" {
            di as err "{p 0 4 2} prediction not allowed "
            di as err "with this nonstandard vce{p_end}"
            exit 459
            }
            }
          - if inlist("`type'", "ldisplace", "cldisplace", "lmax", "clmax") {
          = if inlist("xb", "ldisplace", "cldisplace", "lmax", "clmax") {
            if "`e(vce)'" != "oim" {
            di as err "{p 0 4 2} prediction not allowed "
            di as err "with nonstandard vce{p_end}"
            exit 459
            }
            }
          - if inlist("`type'", "esr", "cesr", "dfbeta", "cdfbeta", "schoenfeld
> ", "scaledsch") {
          = if inlist("xb", "esr", "cesr", "dfbeta", "cdfbeta", "schoenfeld", "
> scaledsch") {
            GenScoreLike `anything' `if' `in', type(`type') `offset'
            exit
            }
          - if inlist("`type'", "mgale", "basechazard", "basehc", "basesurv", "
> effects") {
          = if inlist("xb", "mgale", "basechazard", "basehc", "basesurv", "effe
> cts") {
            GenSinglePred `anything' `if' `in', type(`type') `offset'
            exit
            }
          - local myopts "XB Index STDP HR CSNell DEViance CCSnell CMGale"
          - local myopts "`myopts' LDisplace MGale PARTial LMax"
          = local myopts "XB Index STDP HR CSNell DEViance CCSnell CMGale LDisp
> lace MGale PARTial LMax"
          - _pred_se "`myopts'" `0'
          = _pred_se "XB Index STDP HR CSNell DEViance CCSnell CMGale LDisplace
>  MGale PARTial LMax" __000004 if __00000F, xb
            ------------------------------------------------ begin _pred_se ---
            - version 6.0, missing
            - sret clear
            - gettoken ouser 0 : 0
            - local orig `"`0'"'
            = local orig `" __000004 if __00000F, xb"'
            - gettoken varn 0 : 0, parse(" ,[")
            - gettoken nxt : 0, parse(" ,[(")
            - if !(`"`nxt'"'=="" | `"`nxt'"'=="if" | `"`nxt'"'=="in" | `"`nxt'"
> '==",") {
            = if !(`"if"'=="" | `"if"'=="if" | `"if"'=="in" | `"if"'==",") {
              local typ `varn'
              gettoken varn 0 : 0, parse(" ,[")
              }
            - syntax [if] [in] [, `ouser' CONStant(varname numeric) noOFFset *]
            = syntax [if] [in] [, XB Index STDP HR CSNell DEViance CCSnell CMGa
> le LDisplace MGale PARTial LMax CONStant(varname numeric) noOFFset *]
            - if `"`options'"' != "" {
            = if `""' != "" {
              _predict `orig'
              sret local done 1
              exit
              }
            - confirm new var `varn'
            = confirm new var __000004
            - sret local done 0
            - sret local typ `"`typ'"'
            = sret local typ `""'
            - sret local varn `"`varn'"'
            = sret local varn `"__000004"'
            - sret local rest `"`0'"'
            = sret local rest `" if __00000F, xb"'
            -------------------------------------------------- end _pred_se ---
          - if `s(done)' {
          = if 0 {
            exit
            }
          - local vtyp `s(typ)'
          = local vtyp 
          - local varn `s(varn)'
          = local varn __000004
          - local 0 `"`s(rest)'"'
          = local 0 `" if __00000F, xb"'
          - syntax [if] [in] [, `myopts' noOFFset]
          = syntax [if] [in] [, XB Index STDP HR CSNell DEViance CCSnell CMGale
>  LDisplace MGale PARTial LMax noOFFset]
          - marksample touse
          - if inlist("`type'", "xb", "index", "stdp") {
          = if inlist("xb", "xb", "index", "stdp") {
          - _predict `vtyp' `varn' if `touse', `type' `offset'
          = _predict  __000004 if __00000R, xb 
          - exit
          ----------------------------------------------------- end stcox_p ---
        - }
        ------------------------------------------------------- end predict ---
      - qui sum `coxindex' if `touse'
      = qui sum __000004 if __00000F
      - qui replace `coxindex'=`coxindex'-r(mean) if `touse'
      = qui replace __000004=__000004-r(mean) if __00000F
      - qui stcox `coxindex' if `touse', basechazard(`S') `initstrata'
      = qui stcox __000004 if __00000F, basechazard(__000005) 
        ------------------------------------------------------- begin stcox ---
        - version 8, missing
        - local version : di "version " string(_caller()) ", missing:"
        - if replay() {
          syntax [, ESTImate *]
          if "`estimate'" == "" {
          if _by() {
          error 190
          }
          if `"`e(cmd2)'"' != "stcox" {
          error 301
          }
          if "`e(shared)'" != "" {
          stcox_fr `0'
          exit
          }
          }
          }
        - if _by() {
          local by "by `_byvars'`_byrc0':"
          }
        - syntax [varlist(default=none fv)] [if] [in] [, FRailty(string) SHared
> (string) ESTImate *]
        - local fvops = "`s(fvops)'" == "true" | _caller() >= 11
        = local fvops = "" == "true" | _caller() >= 11
        - if `fvops' {
        = if 1 {
        - local version: di "version " string(max(11,_caller())) ", missing:"
        - }
        - if `"`shared'"' != "" | `"`frailty'"' != "" {
        = if `""' != "" | `""' != "" {
          `version' `by' stcox_fr `0'
          exit
          }
        - `version' `BY' _vce_parserun stcox, stdata noneedvarlist mark(STrata 
> SHared OFFset tvc CLuster) numdepvars(0) : `0'
        = version 11.1, missing:  _vce_parserun stcox, stdata noneedvarlist mar
> k(STrata SHared OFFset tvc CLuster) numdepvars(0) : __000004 if __00000F, bas
> echazard(__000005) 
          --------------------------------------------- begin _vce_parserun ---
          - version 9
          - local version : di "version " string(_caller()) ":"
          - local bycall = _by()
          - _on_colon_parse `0'
          = _on_colon_parse stcox, stdata noneedvarlist mark(STrata SHared OFFs
> et tvc CLuster) numdepvars(0) : __000004 if __00000F, basechazard(__000005) 
            ----------------------------------------- begin _on_colon_parse ---
            - version 8.2
            - sreturn local before ""
            - sreturn local after ""
            - gettoken before after : 0, parse(":") bind match(par) quotes
            - if "`par'" != "" {
            = if "" != "" {
              local before `"(`before')"'
              }
            - if `"`before'"' == ":" {
            = if `"stcox, stdata noneedvarlist mark(STrata SHared OFFset tvc CL
> uster) numdepvars(0) "' == ":" {
              sreturn local after `"`after'"'
              exit
              }
            - while `"`COLON'"' != ":" & `"`after'"' != "" {
            = while `""' != ":" & `": __000004 if __00000F, basechazard(__00000
> 5) "' != "" {
            - gettoken COLON after : after, parse(":") bind match(par) quotes
            - if "`par'" != "" {
            = if "" != "" {
              local before `before' (`COLON')
              local COLON
              }
            - else if `"`COLON'"' != ":" {
            = else if `":"' != ":" {
              local before `"`before' `COLON'"'
              local COLON
              }
            - }
            - while `"`COLON'"' != ":" & `"`after'"' != "" {
            = while `":"' != ":" & `" __000004 if __00000F, basechazard(__00000
> 5) "' != "" {
              gettoken COLON after : after, parse(":") bind match(par) quotes
              if "`par'" != "" {
              local before `before' (`COLON')
              local COLON
              }
              else if `"`COLON'"' != ":" {
              local before `"`before' `COLON'"'
              local COLON
              }
              }
            - if `"`COLON'"' != ":" {
            = if `":"' != ":" {
              di as err "'' found where ':' expected"
              exit 198
              }
            - sreturn local before `"`before'"'
            = sreturn local before `"stcox, stdata noneedvarlist mark(STrata SH
> ared OFFset tvc CLuster) numdepvars(0) "'
            - sreturn local after `"`after'"'
            = sreturn local after `" __000004 if __00000F, basechazard(__000005
> ) "'
            ------------------------------------------- end _on_colon_parse ---
          - local ZERO `"`s(before)'"'
          = local ZERO `"stcox, stdata noneedvarlist mark(STrata SHared OFFset 
> tvc CLuster) numdepvars(0) "'
          - local 0 `"`s(after)'"'
          = local 0 `" __000004 if __00000F, basechazard(__000005) "'
          - quietly syntax [anything(equalok)] [if] [in] [fw aw pw iw] [, VCE(s
> tring asis) VCE1(string asis) LRMODEL * ]
          - if `"`vce'"' == "" {
          = if `""' == "" {
          - MYRESULT
            ---------------------------------- begin _vce_parserun.MYRESULT ---
            - args exit
            - sreturn local exit `"`exit'"'
            = sreturn local exit `""'
            ------------------------------------ end _vce_parserun.MYRESULT ---
          - exit
          ----------------------------------------------- end _vce_parserun ---
        - if "`s(exit)'" != "" {
        = if "" != "" {
          ereturn local cmdline `"stcox `0'"'
          exit
          }
        - `version' `by' stcox_7 `0'
        = version 11.1, missing:  stcox_7 __000004 if __00000F, basechazard(__0
> 00005) 
          --------------------------------------------- begin stcox.stcox_7 ---
          - local version : di "version " string(_caller()) ", missing:"
          - version 7, missing
          - if _caller()<6 {
            if _by() { error 190 }
            ztcox_5 `0'
            exit
            }
          - if replay() {
            syntax [, ESTImate noHR * ]
            if `"`estimate'"'=="" {
            if _by() { error 190 }
            if `"`e(cmd2)'"' != "stcox" {
            error 301
            }
            if "`e(prefix)'" == "svy" {
            _prefix_display, `hr' `options'
            exit
            }
            _get_diopts diopts, `options'
            local hr = cond(`"`hr'"'=="", "hr", "")
            local h = cond(`"`e(strata)'"'=="", "Cox regression", "Stratified C
> ox regr.")
            local h1="no ties"
            if "`e(ties)'"=="breslow" {
            local h1="Breslow method for ties"
            }
            else if "`e(ties)'"=="efron" {
            local h1="Efron method for ties"
            }
            else if "`e(ties)'"=="partial" {
            local h1="exact partial likelihood"
            }
            else if "`e(ties)'"=="marginal" {
            local h1="exact marginal likelihood"
            }
            di _n as txt `"`h' -- `h1'"'
            st_hcd
            di
            local offset `e(offset)'
            est local offset
            _coef_table, `hr' `options'
            est local offset `offset'
            `version' stcox_footnote
            if `"`e(converged)'"' == "0" {
            di as txt "Warning: convergence not achieved"
            }
            exit
            }
            }
          - st_is 2 analysis
            --------------------------------------------------- begin st_is ---
            - version 6
            - if "`1'"=="2" & `"`_dta[_dta]'"'=="st" & `"`_dta[st_ver]'"'=="2" 
> & _caller()>5 {
            = if "2"=="2" & `"st"'=="st" & `"2"'=="2" & _caller()>5 {
            - if "`2'"=="analysis" & `"`_dta[st_full]'"'=="" | "`2'"=="full" {
            = if "analysis"=="analysis" & `""'=="" | "analysis"=="full" {
            - exit
            ----------------------------------------------------- end st_is ---
          - local oldbaseh = cond(_caller()<7,"BASEHazard(string)","")
          - if _caller() < 14 {
          - local TVCOPT TVC(varlist)
          - }
          - else {
            local TVCOPT TVC(varlist fv)
            }
          - syntax [varlist(default=none fv)] [if] [in] [,CLuster(passthru) CMD
>  ESTImate noHR Level(cilevel) Robust noSHow NOLOG LOG BREslow EFRon EXACTM EX
> ACTP `oldbaseh' BASEHC(passthru) BASEChazard(passthru) BASESurv(passthru) MGa
> le(passthru) esr(passthru) SCHoenfeld(passthru) SCAledsch(passthru) `TVCOPT' 
> texp(string) altvce(name) VCE(passthru) * ]
          = syntax [varlist(default=none fv)] [if] [in] [,CLuster(passthru) CMD
>  ESTImate noHR Level(cilevel) Robust noSHow NOLOG LOG BREslow EFRon EXACTM EX
> ACTP  BASEHC(passthru) BASEChazard(passthru) BASESurv(passthru) MGale(passthr
> u) esr(passthru) SCHoenfeld(passthru) SCAledsch(passthru) TVC(varlist) texp(s
> tring) altvce(name) VCE(passthru) * ]
          - local fvops = "`s(fvops)'" == "true" | _caller() >= 11
          = local fvops = "" == "true" | _caller() >= 11
          - if `fvops' {
          = if 1 {
          - local version: di "version "string(max(11,_caller())) ", missing:"
          - }
          - _parse_iterlog, `nolog' `log'
          = _parse_iterlog,  
            ------------------------------------------ begin _parse_iterlog ---
            - version 16
            - syntax [, NOLOG LOG]
            - if "`log'`nolog'" != "" {
            = if "" != "" {
              opts_exclusive "`log' `nolog'"
              }
            - else if "`c(iterlog)'" == "on" {
            = else if "on" == "on" {
            - local log log
            - }
            - else {
              local nolog nolog
              }
            - sreturn local log `log'
            = sreturn local log log
            - sreturn local nolog `nolog'
            = sreturn local nolog 
            -------------------------------------------- end _parse_iterlog ---
          - if "`s(nolog)'" == "nolog" {
          = if "" == "nolog" {
            local log nolog
            }
          - else if "`s(log)'" == "log" {
          = else if "log" == "log" {
          - local log log
          - }
          - _get_diopts diopts options, `options'
          = _get_diopts diopts options, 
            --------------------------------------------- begin _get_diopts ---
            - version 11
            - syntax namelist(max=2) [, *]
            - gettoken name1 namelist : namelist
            - gettoken name2 namelist : namelist
            - GetDiopts diopts options, `options'
            = GetDiopts diopts options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local diopts                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name1' `"`diopts'"'
            = c_local diopts `""'
            - local snames : s(macros)
            - foreach sname of local snames {
            - local S_`sname' = s(`sname')
            = local S_level = s(level)
            - }
            - local S_`sname' = s(`sname')
            = local S_log = s(log)
            - }
            - sreturn clear
            - GetDiopts DEFAULT
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DEFAULT                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - if `"`name2'"' == "" {
            = if `"options"' == "" {
              GetDiopts DUPS, `options'
              }
            - else {
            - GetDiopts DUPS options, `options'
            = GetDiopts DUPS options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DUPS                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name2' `"`options'"'
            = c_local options `""'
            - }
            - local DUPS : list DUPS - DEFAULT
            - gettoken DUPS : DUPS
            - if `"`DUPS'"' != "" {
            = if `""' != "" {
              if (strpos(`"`DUPS'"', "(")) {
              gettoken DUPS : DUPS, parse("(")
              local DUPS `"`DUPS'()"'
              }
              di as err "duplicate {bf:`DUPS'} option not allowed"
              exit 198
              }
            - sreturn clear
            - foreach sname of local snames {
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local level = `"95"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local log = `"log"'
            - }
            ----------------------------------------------- end _get_diopts ---
          - _vce_parse, argopt(CLuster) opt(OIM Robust) old : [`weight'`exp'], 
> `vce' `robust' `cluster'
          = _vce_parse, argopt(CLuster) opt(OIM Robust) old : [],   
            ---------------------------------------------- begin _vce_parse ---
            - version 10
            - _on_colon_parse `0'
            = _on_colon_parse , argopt(CLuster) opt(OIM Robust) old : [],   
              --------------------------------------- begin _on_colon_parse ---
              - version 8.2
              - sreturn local before ""
              - sreturn local after ""
              - gettoken before after : 0, parse(":") bind match(par) quotes
              - if "`par'" != "" {
              = if "" != "" {
                local before `"(`before')"'
                }
              - if `"`before'"' == ":" {
              = if `", argopt(CLuster) opt(OIM Robust) old "' == ":" {
                sreturn local after `"`after'"'
                exit
                }
              - while `"`COLON'"' != ":" & `"`after'"' != "" {
              = while `""' != ":" & `": [],   "' != "" {
              - gettoken COLON after : after, parse(":") bind match(par) quotes
              - if "`par'" != "" {
              = if "" != "" {
                local before `before' (`COLON')
                local COLON
                }
              - else if `"`COLON'"' != ":" {
              = else if `":"' != ":" {
                local before `"`before' `COLON'"'
                local COLON
                }
              - }
              - while `"`COLON'"' != ":" & `"`after'"' != "" {
              = while `":"' != ":" & `" [],   "' != "" {
                gettoken COLON after : after, parse(":") bind match(par) quotes
                if "`par'" != "" {
                local before `before' (`COLON')
                local COLON
                }
                else if `"`COLON'"' != ":" {
                local before `"`before' `COLON'"'
                local COLON
                }
                }
              - if `"`COLON'"' != ":" {
              = if `":"' != ":" {
                di as err "'' found where ':' expected"
                exit 198
                }
              - sreturn local before `"`before'"'
              = sreturn local before `", argopt(CLuster) opt(OIM Robust) old "'
              - sreturn local after `"`after'"'
              = sreturn local after `" [],   "'
              ----------------------------------------- end _on_colon_parse ---
            - local 0 `"`s(before)'"'
            = local 0 `", argopt(CLuster) opt(OIM Robust) old "'
            - local user `"`s(after)'"'
            = local user `" [],   "'
            - syntax [varname(default=none)], [ OPTlist(namelist) ARGOPTlist(na
> melist) PWallowed(namelist) OLD_is_ok NOARGOPT_is_ok ]
            - local touse `varlist'
            = local touse 
            - tempname o a
            - .`o' = ._optlist.new
            = .__00000R = ._optlist.new
              -class {
              -instance:
              -        array options   = {}
              -        array names     = {}
              -}
            - local optlist : list uniq optlist
            - foreach name of local optlist {
            - .`o'.addopt `name'
            = .__00000R.addopt OIM
              --------------------------------------- begin _optlist.addopt ---
              - version 9
              - syntax name(name=optspec) [, PASSthru]
              - local mname = lower("`optspec'")
              = local mname = lower("OIM")
              - if "`passthru'" != "" {
              = if "" != "" {
                local optspec `optspec'(passthru)
                }
              - .options.Arrpush "`optspec'"
              = .options.Arrpush "OIM"
              - .names.Arrpush "`mname'"
              = .names.Arrpush "oim"
              ----------------------------------------- end _optlist.addopt ---
            - }
            - .`o'.addopt `name'
            = .__00000R.addopt Robust
              --------------------------------------- begin _optlist.addopt ---
              - version 9
              - syntax name(name=optspec) [, PASSthru]
              - local mname = lower("`optspec'")
              = local mname = lower("Robust")
              - if "`passthru'" != "" {
              = if "" != "" {
                local optspec `optspec'(passthru)
                }
              - .options.Arrpush "`optspec'"
              = .options.Arrpush "Robust"
              - .names.Arrpush "`mname'"
              = .names.Arrpush "robust"
              ----------------------------------------- end _optlist.addopt ---
            - }
            - .`a' = ._optlist.new
            = .__00000S = ._optlist.new
            - local argoptlist : list uniq argoptlist
            - foreach name of local argoptlist {
            - .`a'.addopt `name'
            = .__00000S.addopt CLuster
              --------------------------------------- begin _optlist.addopt ---
              - version 9
              - syntax name(name=optspec) [, PASSthru]
              - local mname = lower("`optspec'")
              = local mname = lower("CLuster")
              - if "`passthru'" != "" {
              = if "" != "" {
                local optspec `optspec'(passthru)
                }
              - .options.Arrpush "`optspec'"
              = .options.Arrpush "CLuster"
              - .names.Arrpush "`mname'"
              = .names.Arrpush "cluster"
              ----------------------------------------- end _optlist.addopt ---
            - }
            - local OPTNAMES `"`.`o'.dumpnames'"'
              ------------------------------------ begin _optlist.dumpnames ---
              - version 9
              - forval i = 1/`.names.arrnels' {
              = forval i = 1/2 {
              - local namelist `namelist' `.names[`i']'
              = local namelist  oim
              - }
              - local namelist `namelist' `.names[`i']'
              = local namelist oim robust
              - }
              - local namelist : list uniq namelist
              - sreturn local namelist `"`namelist'"'
              = sreturn local namelist `"oim robust"'
              - class exit `"`namelist'"'
              = class exit `"oim robust"'
              -------------------------------------- end _optlist.dumpnames ---
            = local OPTNAMES `"oim robust"'
            - local ARGOPTNAMES `"`.`a'.dumpnames'"'
              ------------------------------------ begin _optlist.dumpnames ---
              - version 9
              - forval i = 1/`.names.arrnels' {
              = forval i = 1/1 {
              - local namelist `namelist' `.names[`i']'
              = local namelist  cluster
              - }
              - local namelist : list uniq namelist
              - sreturn local namelist `"`namelist'"'
              = sreturn local namelist `"cluster"'
              - class exit `"`namelist'"'
              = class exit `"cluster"'
              -------------------------------------- end _optlist.dumpnames ---
            = local ARGOPTNAMES `"cluster"'
            - local AND : list OPTNAMES & ARGOPTNAMES
            - if `:list sizeof AND' {
            = if 0 {
              di as err "vcetype '`:word 1 of `AND''' specified twice"
              exit 198
              }
            - local pwallowed : list uniq pwallowed
            - local pwlist robust cluster
            - foreach n of local pwallowed {
              local lc = lower("`n'")
              local pwlist `pwlist' `lc'
              }
            - if "`old_is_ok'" != "" {
            = if "old_is_ok" != "" {
            - local ROBUST robust
            - if `:list ROBUST in OPTNAMES' {
            = if 1 {
            - local robust Robust
            - }
            - local CLUSTER cluster
            - if `:list CLUSTER in ARGOPTNAMES' {
            = if 1 {
            - local cluster CLuster(varname)
            - }
            - }
            - local 0 `"`user'"'
            = local 0 `" [],   "'
            - syntax [fw aw pw iw] [, VCE(string asis) `robust' `cluster' ]
            = syntax [fw aw pw iw] [, VCE(string asis) Robust CLuster(varname) 
> ]
            - if `"`vce'"' != "" {
            = if `""' != "" {
              gettoken name args : vce, parse(" ,")
              local args : list retok args
              capture ParseVCE `o' `a' , `name'
              if c(rc) {
              di as err "vcetype '`name'' not allowed"
              exit 198
              }
              local name `r(vce)'
              if "`weight'" == "pweight" & !`:list name in pwlist' {
              di as err "pweights are not allowed with vce(`name')"
              exit 198
              }
              return add
              if `"`robust'"' != "" & !inlist("`name'","","robust","eim","oim",
> "cluster") {
              opts_exclusive "`robust' vce(`name')"
              }
              if "`name'" == "cluster" {
              if `"`args'"' == "" {
              di as err "invalid vce(cluster) option"
              exit 198
              }
              confirm var `args'
              unab args : `args'
              local markout `args'
              if "`cluster'" != "" {
              if !`:list args == cluster' {
              di as err "options cluster() and vce(cluster) are in conflict"
              exit 100
              }
              }
              }
              else if "`cluster'" != "" & !inlist("`name'","eim","oim") {
              opts_exclusive "cluster() vce(`name')"
              }
              if `"`args'"' != "" {
              if ! `:list name in ARGOPTNAMES' {
              di as err "invalid vce() option"
              exit 198
              }
              return local vceargs `"`:list retok args'"'
              }
              else if `:list name in ARGOPTNAMES' {
              if "`noargopt_is_ok'" == "" {
              di as err "invalid vce() option"
              exit 198
              }
              }
              }
            - else {
            - if "`weight'" == "pweight" | "`robust'" != "" {
            = if "" == "pweight" | "" != "" {
              local vce robust
              }
            - if "`cluster'" != "" {
            = if "" != "" {
              local vce cluster
              local args `cluster'
              local markout `cluster'
              }
            - return local vce `"`vce'"'
            = return local vce `""'
            - return local vceargs `"`args'"'
            = return local vceargs `""'
            - }
            - if "`return(vce)'" != "" {
            = if "" != "" {
              if `"`return(vceargs)'"' != "" {
              local ss " "
              }
              return local vceopt `"vce(`return(vce)'`ss'`return(vceargs)')"'
              }
            - if "`return(vce)'" == "cluster" {
            = if "" == "cluster" {
              return local cluster `return(vceargs)'
              }
            - if inlist("`return(vce)'", "robust", "cluster") {
            = if inlist("", "robust", "cluster") {
              return local robust robust
              }
            - if "`touse'" != "" {
            = if "" != "" {
              if "`markout'" != "" {
              markout `touse' `markout', strok
              }
              }
            ------------------------------------------------ end _vce_parse ---
          - local cluster `r(cluster)'
          = local cluster 
          - local robust `r(robust)'
          = local robust 
          - local vce = cond("`r(vce)'" != "", "`r(vce)'", "oim")
          = local vce = cond("" != "", "", "oim")
          - if `"`basehazard'"' != "" {
          = if `""' != "" {
            if `"`basehc'"' != "" {
            di as err "options {bf:basehazard()} and {bf:basehc()} may not be s
> pecified together"
            exit 198
            }
            local basehc `"basehc(`basehazard')"'
            }
          - if _by() {
            _byoptnotallowed basehc() `"`basehc'"'
            _byoptnotallowed basechazard() `"`basechazard'"'
            _byoptnotallowed basesurv() `"`basesurv'"'
            _byoptnotallowed mgale() `"`mgale'"'
            _byoptnotallowed esr() `"`esr'"'
            _byoptnotallowed schoenfeld() `"`schoenfeld'"'
            _byoptnotallowed scaledsch() `"`scaledsch'"'
            }
          - if "`altvce'" != "" {
          = if "" != "" {
            _prefix_vcenotallowed "`altvce'" basehc() `"`basehc'"'
            _prefix_vcenotallowed "`altvce'" basechazard() `"`basechazard'"'
            _prefix_vcenotallowed "`altvce'" basesurv() `"`basesurv'"'
            _prefix_vcenotallowed "`altvce'" mgale() `"`mgale'"'
            _prefix_vcenotallowed "`altvce'" esr() `"`esr'"'
            _prefix_vcenotallowed "`altvce'" schoenfeld() `"`schoenfeld'"'
            _prefix_vcenotallowed "`altvce'" scaledsch() `"`scaledsch'"'
            }
          - if "`tvc'" != "" {
          = if "" != "" {
            _tvc_notallowed basechazard() `"`basechazard'"'
            _tvc_notallowed basehc() `"`basehc'"'
            _tvc_notallowed basesurv() `"`basesurv'"'
            _tvc_notallowed esr() `"`esr'"'
            _tvc_notallowed mgale() `"`mgale'"'
            _tvc_notallowed scaledsch() `"`scaledsch'"'
            _tvc_notallowed schoenfeld() `"`schoenfeld'"'
            }
          - local passthru `basehc' `basechazard' `basesurv' `mgale' `esr' `sch
> oenfeld' `scaledsch'
          = local passthru  basechazard(__000005)     
          - local id : char _dta[st_id]
          - local w : char _dta[st_w]
          - local wt : char _dta[st_wt]
          - local t0 `"t0(_t0)"'
          - local d `"dead(_d)"'
          - tempvar touse
          - st_smpl `touse' `"`if'"' `"`in'"' `"`cluster'"'
          = st_smpl __00000R `"if __00000F"' `""' `""'
            ------------------------------------------------- begin st_smpl ---
            - version 6, missing
            - if _caller()>=6 {
            - args touse if in by adj
            - mark `touse' `if' `in' `_dta[st_w]'
            = mark __00000R if __00000F  
            - markout `touse' `adj'
            = markout __00000R 
            - markout `touse' `by', strok
            = markout __00000R , strok
            - qui replace `touse' = 0 if _st==0
            = qui replace __00000R = 0 if _st==0
            - qui count if `touse'
            = qui count if __00000R
            - if r(N) == 0 {
              di in red `"no observations"'
              exit 2000
              }
            - exit
            --------------------------------------------------- end st_smpl ---
          - markout `touse' `varlist'
          = markout __00000R __000004
          - if _by() {
            qui replace `touse'=0 if `_byindex'!=_byindex()
            }
          - if `"`wt'"'=="pweight" {
          = if `""'=="pweight" {
            local robust `"robust"'
            }
          - if `"`robust'"'!="" & `"`cluster'"'=="" & `"`id'"'!="" {
          = if `""'!="" & `""'=="" & `"patient_id"'!="" {
            local cluster `"`id'"'
            }
          - if `"`cluster'"'!="" {
          = if `""'!="" {
            local cluster `"cluster(`cluster')"'
            }
          - st_show `show'
          = st_show 
            ------------------------------------------------- begin st_show ---
            - version 6.0
            - if _caller()>=6 {
            - st_is 2 full
              ------------------------------------------------- begin st_is ---
              - version 6
              - if "`1'"=="2" & `"`_dta[_dta]'"'=="st" & `"`_dta[st_ver]'"'=="2
> " & _caller()>5 {
              = if "2"=="2" & `"st"'=="st" & `"2"'=="2" & _caller()>5 {
              - if "`2'"=="analysis" & `"`_dta[st_full]'"'=="" | "`2'"=="full" 
> {
              = if "full"=="analysis" & `""'=="" | "full"=="full" {
              - exit
              --------------------------------------------------- end st_is ---
            - if "`1'" == "noshow" | `"`_dta[st_show]'"' != "" {
            = if "" == "noshow" | `""' != "" {
              exit
              }
            - di
            - di _col(10) in gr "failure _d:  " _c
            - if `"`_dta[st_bd]'"' != "" {
            = if `"hosp_any_flag"' != "" {
            - if `"`_dta[st_ev]'"' != "" {
            = if `""' != "" {
              di in ye `"`_dta[st_bd]' == `_dta[st_ev]'"'
              }
            - else di in ye `"`_dta[st_bd]'"'
            = else di in ye `"hosp_any_flag"'
            - }
            - else di in ye "1" in gr " (meaning all fail)"
            - di in gr _col(4) "analysis time _t:  " _c
            - if `"`_dta[st_orig]'"' != "" {
            = if `"time index_date"' != "" {
            - di in ye `"(`_dta[st_bt]'-origin)"' _c
            = di in ye `"(stop-origin)"' _c
            - }
            - else di in ye `"`_dta[st_bt]'"' _c
            = else di in ye `"stop"' _c
            - if `"`_dta[st_bs]'"' != "1" {
            = if `"1"' != "1" {
              di in ye `"/`_dta[st_bs]'"'
              }
            - else di
            - if `"`_dta[st_orig]'"' != "" {
            = if `"time index_date"' != "" {
            - di in gr _col(14) "origin:  " in ye `"`_dta[st_orig]'"'
            = di in gr _col(14) "origin:  " in ye `"time index_date"'
            - }
            - if `"`_dta[st_enter]'"' != "" {
            = if `"time index_date"' != "" {
            - di in gr "  enter on or after:  " in ye `"`_dta[st_enter]'"'
            = di in gr "  enter on or after:  " in ye `"time index_date"'
            - }
            - if `"`_dta[st_exit]'"' != "" {
            = if `""' != "" {
              di in gr "  exit on or before:  " in ye `"`_dta[st_exit]'"'
              }
            - if `"`_dta[st_id]'"' != "" {
            = if `"patient_id"' != "" {
            - di _col(18) in gr "id:  " in ye `"`_dta[st_id]'"'
            = di _col(18) in gr "id:  " in ye `"patient_id"'
            - }
            - if `"`_dta[st_w]'"' != "" {
            = if `""' != "" {
              di in gr _col(14) "weight:  " in ye `"`_dta[st_w]'"'
              }
            - capture confirm integer number `_dta[st_n0]'
            = capture confirm integer number 
            - if _rc { exit }
            --------------------------------------------------- end st_show ---
          - if `"`texp'"' != "" & "`tvc'" == "" {
          = if `""' != "" & "" == "" {
            di as err "{p 0 4 2}option {bf:texp()} allowed only with option {bf
> :tvc()}{p_end}"
            exit 198
            }
          - local fvtvc 0
          - if `"`tvc'"'!="" & _caller() < 14 {
          = if `""'!="" & _caller() < 14 {
            tempvar foft1
            if `"`texp'"' == "" {
            local texp _t
            }
            local texp: subinstr local texp " " "", all
            cap gen double `foft1' = `texp' if `touse'
            if _rc {
            di as err "{p 0 4 2}option {bf:texp()} invalid{p_end}"
            exit 198
            }
            qui count if `touse' & missing(`foft1')
            if `r(N)' {
            di as err "{p 0 4 2}option {bf:texp()} evaluates to missing for "
            di as err "`r(N)' observations{p_end}"
            exit 459
            }
            FunctionOfTime `foft1' if `touse'
            local tvcvars : word count `tvc'
            if `tvcvars' > 100 {
            di as err "too many variables specified"
            di as err "option {bf:tvc()} incorrectly specified"
            exit 198
            }
            di
            version 11: _rmcoll `tvc', forcedrop
            local tvcvars `r(varlist)'
            local tvc `"tvc(`tvcvars')"'
            local texp `"texp(`texp')"'
            local noblank "noblank"
            }
          - else if `"`tvc'"'!="" {
          = else if `""'!="" {
            tempvar foft1
            if `"`texp'"' == "" {
            local texp _t
            }
            local texp: subinstr local texp " " "", all
            cap gen double `foft1' = `texp' if `touse'
            if _rc {
            di as err "{p 0 4 2}option {bf:texp()} invalid{p_end}"
            exit 198
            }
            qui count if `touse' & missing(`foft1')
            if `r(N)' {
            di as err "{p 0 4 2}option {bf:texp()} evaluates to missing for "
            di as err "`r(N)' observations{p_end}"
            exit 459
            }
            FunctionOfTime `foft1' if `touse'
            fvexpand `tvc' if `touse'
            local tvc `r(varlist)'
            local tvcvars : word count `tvc'
            if `tvcvars' > 100 {
            di as err "too many variables specified"
            di as err "option {bf:tvc()} incorrectly specified"
            exit 198
            }
            di
            version 14: _rmcoll `tvc', expand
            local tvcvars `r(varlist)'
            fvrevar `tvcvars'
            local ttvcvars `r(varlist)'
            if !`: list tvcvars == ttvcvars' {
            local fvtvc 1
            }
            local tvc `"tvc(`ttvcvars')"'
            local texp `"texp(`texp')"'
            local noblank "noblank"
            }
          - if `"`cmd'"'!="" {
          = if `""'!="" {
            di _n as txt `"-> cox _t `varlist' `w' `if' `in',"' _c
            di as txt `" `robust' `cluster' `t0' `hr' `d' `tvc' `texp'"' _c
            di as txt `" `options'"' _c
            di as txt `" `breslow' `efron' `exactm' `exactp' `passthru'"'
            exit
            }
          - `version' cox _t `varlist' `w' if `touse', `robust' `cluster' `t0' 
> `d' `tvc' `texp' `options' nocoef `breslow' `efron' `exactm' `exactp' `passth
> ru' `noblank' `log'
          = version 11.1, missing: cox _t __000004  if __00000R,   t0(_t0) dead
> (_d)    nocoef     basechazard(__000005)  log
          - if `fvtvc' {
          = if 0 {
            tempname b
            matrix `b' = e(b)
            local stripe : colna `b'
            local ntvc : list sizeof ttvcvars
            local TVCVARS : copy local tvcvars
            forval i = 1/`ntvc' {
            gettoken tvar ttvcvars : ttvcvars
            gettoken xvar TVCVARS : TVCVARS
            if "`tvar'" != "`xvar'" {
            local stripe : subinstr local stripe "`tvar'" "`xvar'", word all
            }
            }
            version 14: matrix colna `b' = `stripe'
            est repost b=`b', rename buildfvinfo ADDCONS
            }
          - else {
          - est repost, buildfvinfo ADDCONS
          - }
          - local chi2type "`e(chi2type)'"
          = local chi2type "LR"
          - if e(N)==0 | e(N)>=. { exit 2001 }
          - SaveOpt, `passthru'
          = SaveOpt, basechazard(__000005)
            ------------------------------------------- begin stcox.SaveOpt ---
            - syntax [, MGale(string) BASEHC(string) BASEChazard(string) BASESu
> rv(string) SCHoenfeld(string) SCAledsch(string) ESR(string) * ]
            - est local mgale "`mgale'"
            = est local mgale ""
            - est local basehc "`basehc'"
            = est local basehc ""
            - est local baseh "`basedchazard'"
            = est local baseh ""
            - est local basech "`basechazard'"
            = est local basech "__000005"
            - est local bases "`basesurv'"
            = est local bases ""
            - SaveNm vl_sch "`schoenfeld'" "Schoenfeld"
            = SaveNm vl_sch "" "Schoenfeld"
              ------------------------------------------ begin stcox.SaveNm ---
              - args name base lname
              - if "`base'" == "" { exit }
              = if "" == "" { exit }
              -------------------------------------------- end stcox.SaveNm ---
            - SaveNm vl_ssc "`scaledsch'" "scaled Schoenfeld"
            = SaveNm vl_ssc "" "scaled Schoenfeld"
              ------------------------------------------ begin stcox.SaveNm ---
              - args name base lname
              - if "`base'" == "" { exit }
              = if "" == "" { exit }
              -------------------------------------------- end stcox.SaveNm ---
            - SaveNm vl_esr "`esr'" "efficient score"
            = SaveNm vl_esr "" "efficient score"
              ------------------------------------------ begin stcox.SaveNm ---
              - args name base lname
              - if "`base'" == "" { exit }
              = if "" == "" { exit }
              -------------------------------------------- end stcox.SaveNm ---
            - if "`mgale'" != "" { label var `mgale' "martingale" }
            = if "" != "" { label var  "martingale" }
            - if "`basehc'"!= "" {
            = if ""!= "" {
              label var `basehc' "baseline hazard contribution"
              }
            - if "`basesurv'" != "" { label var `basesurv' "baseline survivor" 
> }
            = if "" != "" { label var  "baseline survivor" }
            - if "`basechazard'"!= "" {
            = if "__000005"!= "" {
            - label var `basechazard' "cumulative baseline hazard"
            = label var __000005 "cumulative baseline hazard"
              ------------------------------------------------- begin label ---
              - version 10.0
              - local vv : display "version " string(_caller()) ", missing:"
              - gettoken val : 0
              - if (strpos("`val'", "val") > 0 ) {
              = if (strpos("var", "val") > 0 ) {
                gettoken val 0 : 0
                syntax anything [, nofix]
                if "`fix'" != "" {
                local fix ", nofix"
                }
                gettoken var rest : anything
                while `"`rest'"' != "" {
                gettoken lab rest : rest
                local label "`lab'"
                }
                local vlist : list anything - lab
                if "`lab'" == "." {
                local lab ""
                }
                foreach var of varlist `vlist' {
                `vv' _label `val' `var' `lab' `fix'
                }
                }
              - else {
              - `vv' _label `macval(0)'
              = version 7, missing: _label var __000005 "cumulative baseline ha
> zard"
              - }
              --------------------------------------------------- end label ---
            - }
            --------------------------------------------- end stcox.SaveOpt ---
          - _post_vce_rank, checksize
            ------------------------------------------ begin _post_vce_rank ---
            - syntax, [CHecksize]
            - if "`checksize'" != "" {
            = if "checksize" != "" {
            - tempname V
            - capture matrix `V' = e(V)
            = capture matrix __00000S = e(V)
            - if _rc {
              exit
              }
            - local cols = colsof(`V')
            = local cols = colsof(__00000S)
            - if `cols' == 0 {
            = if 1 == 0 {
              exit
              }
            - }
            - tempname V Vi rank
            - mat `V' = e(V)
            = mat __00000T = e(V)
            - mat `Vi' = invsym(`V')
            = mat __00000U = invsym(__00000T)
            - sca `rank' = rowsof(`V') - diag0cnt(`Vi')
            = sca __00000V = rowsof(__00000T) - diag0cnt(__00000U)
            - mata:st_numscalar("e(rank)", st_numscalar("`rank'"))
            = mata:st_numscalar("e(rank)", st_numscalar("__00000V"))
            -------------------------------------------- end _post_vce_rank ---
          - if "`chi2type'"=="Wald" {
          = if "LR"=="Wald" {
            WaldTest
            }
          - else {
          - local df_m = cond("`e(rank)'"!="","`e(rank)'","0")
          = local df_m = cond("1"!="","1","0")
          - est scalar df_m = `df_m'
          = est scalar df_m = 1
          - est local chi2type "LR"
          - }
          - global S_E_ll = e(ll)
          - global S_E_chi2 = e(chi2)
          - global S_E_mdf = e(df_m)
          - st_hc `touse'
          = st_hc __00000R
            --------------------------------------------------- begin st_hc ---
            - version 6
            - args touse
            - local w : char _dta[st_wv]
            - tempvar z
            - quietly {
            - if "`_dta[st_id]'"=="" {
            = if "patient_id"=="" {
              if "`w'"=="" {
              count if `touse'
              global S_E_subj = r(N)
              est scalar N_sub = r(N)
              count if `touse' & _d
              global S_E_fail = r(N)
              est scalar N_fail = r(N)
              gen double `z' = (_t -_t0 ) if `touse'
              summ `z', meanonly
              global S_E_risk = r(sum)
              est scalar risk = r(sum)
              exit
              }
              summ `w' if `touse', meanonly
              global S_E_subj = r(sum)
              est scalar N_sub = r(sum)
              summ `w' if `touse' & _d, meanonly
              global S_E_fail = r(sum)
              est scalar N_fail = r(sum)
              gen double `z' = `w'*(_t -_t0 ) if `touse'
              summ `z', meanonly
              global S_E_risk = r(sum)
              est scalar risk = r(sum)
              exit
              }
            - if "`w'"=="" {
            = if ""=="" {
            - tempvar w
            - gen byte `w'=1 if `touse'
            = gen byte __00000U=1 if __00000R
            - }
            - sort `touse' `_dta[st_id]'
            = sort __00000R patient_id
            - by `touse' `_dta[st_id]': gen double `z' = `w' if `touse' & _n==1
            = by __00000R patient_id: gen double __00000T = __00000U if __00000
> R & _n==1
            - summ `z', meanonly
            = summ __00000T, meanonly
            - global S_E_subj = r(sum)
            - est scalar N_sub = r(sum)
            - summ `w' if `touse' & _d , meanonly
            = summ __00000U if __00000R & _d , meanonly
            - global S_E_fail = r(sum)
            - est scalar N_fail = r(sum)
            - replace `z' = `w'*(_t -_t0 ) if `touse'
            = replace __00000T = __00000U*(_t -_t0 ) if __00000R
            - summ `z', meanonly
            = summ __00000T, meanonly
            - global S_E_risk = r(sum)
            - est scalar risk = r(sum)
            - }
            ----------------------------------------------------- end st_hc ---
          - if "`robust'" != "" {
          = if "" != "" {
            est local vce robust
            }
          - est local vce "`vce'"
          = est local vce "oim"
          - est local estat_cmd stcox_estat
          - est local predict stcox_p
          - est local footnote stcox_footnote
          - _ms_eq_info
          - est hidden local k_eform = r(k_eq)
          - est hidden local marginsprop addcons allcons
          - est hidden local marginsfootnote _multirecordcheck
          - est local marginsnotok CSNell DEViance DFBeta ESR LDisplace LMax MG
> ale SCAledsch SCHoenfeld SCores
          - est local cmd2 "stcox"
          - local offset `e(offset)'
          = local offset 
          - est hidden local offset1 `offset'
          = est hidden local offset1 
          - est local offset `offset'
          = est local offset 
          - global S_E_cmd2 "stcox"
          - tempname b
          - mat `b' = e(b)
          = mat __00000S = e(b)
          - _ms_omit_info `b'
          = _ms_omit_info __00000S
          - local cols = colsof(`b')
          = local cols = colsof(__00000S)
          - if `r(k_omit)' {
          = if 0 {
            if `r(k_omit)' == `cols' {
            local varlist ""
            }
            else {
            mata : st_local("varlist",invtokens(select(st_matrixcolstripe ("`b'
> ")[.,2]',1:-st_matrix("r(omit)"))))
            }
            }
          - else {
          - local varlist `varlist' `tvcvars'
          = local varlist __000004 
          - }
          - unopvarlist `varlist'
          = unopvarlist __000004
          - local varlist `r(varlist)'
          = local varlist __000004
          - signestimationsample _t _t0 _d `varlist' `e(clustvar)' `e(offset)' 
> `e(strata)'
          = signestimationsample _t _t0 _d __000004   
            ------------------------------------ begin signestimationsample ---
            - version 10
            - syntax varlist(fv) [, EXTRA(varlist)]
            - if (`"`e(wexp)'"'!="") {
            = if (`""'!="") {
              local wvar = strtrim(substr(strtrim(`"`e(wexp)'"'), 2, .))
              capture confirm var `wvar'
              if _rc {
              tempvar wvar
              qui gen float `wvar' `e(wexp)' if e(sample)
              }
              }
            - qui _datasignature `varlist' `wvar' `extra', esample nodefault no
> names
            = qui _datasignature _t _t0 _d __000004  , esample nodefault noname
> s
            - eret local datasignature = r(datasignature)
            - eret local datasignaturevars `varlist'
            = eret local datasignaturevars _t _t0 _d __000004
            -------------------------------------- end signestimationsample ---
          - `version' stcox, `hr' level(`level') `diopts'
          = version 11.1, missing: stcox,  level(95) 
            --------------------------------------------------- begin stcox ---
            - version 8, missing
            - local version : di "version " string(_caller()) ", missing:"
            - if replay() {
            - syntax [, ESTImate *]
            - if "`estimate'" == "" {
            = if "" == "" {
            - if _by() {
              error 190
              }
            - if `"`e(cmd2)'"' != "stcox" {
            = if `"stcox"' != "stcox" {
              error 301
              }
            - if "`e(shared)'" != "" {
            = if "" != "" {
              stcox_fr `0'
              exit
              }
            - }
            - }
            - if _by() {
              local by "by `_byvars'`_byrc0':"
              }
            - syntax [varlist(default=none fv)] [if] [in] [, FRailty(string) SH
> ared(string) ESTImate *]
            - local fvops = "`s(fvops)'" == "true" | _caller() >= 11
            = local fvops = "" == "true" | _caller() >= 11
            - if `fvops' {
            = if 1 {
            - local version: di "version " string(max(11,_caller())) ", missing
> :"
            - }
            - if `"`shared'"' != "" | `"`frailty'"' != "" {
            = if `""' != "" | `""' != "" {
              `version' `by' stcox_fr `0'
              exit
              }
            - `version' `BY' _vce_parserun stcox, stdata noneedvarlist mark(STr
> ata SHared OFFset tvc CLuster) numdepvars(0) : `0'
            = version 11.1, missing:  _vce_parserun stcox, stdata noneedvarlist
>  mark(STrata SHared OFFset tvc CLuster) numdepvars(0) : ,  level(95) 
              ----------------------------------------- begin _vce_parserun ---
              - version 9
              - local version : di "version " string(_caller()) ":"
              - local bycall = _by()
              - _on_colon_parse `0'
              = _on_colon_parse stcox, stdata noneedvarlist mark(STrata SHared 
> OFFset tvc CLuster) numdepvars(0) : ,  level(95) 
                ------------------------------------- begin _on_colon_parse ---
                - version 8.2
                - sreturn local before ""
                - sreturn local after ""
                - gettoken before after : 0, parse(":") bind match(par) quotes
                - if "`par'" != "" {
                = if "" != "" {
                  local before `"(`before')"'
                  }
                - if `"`before'"' == ":" {
                = if `"stcox, stdata noneedvarlist mark(STrata SHared OFFset tv
> c CLuster) numdepvars(0) "' == ":" {
                  sreturn local after `"`after'"'
                  exit
                  }
                - while `"`COLON'"' != ":" & `"`after'"' != "" {
                = while `""' != ":" & `": ,  level(95) "' != "" {
                - gettoken COLON after : after, parse(":") bind match(par) quot
> es
                - if "`par'" != "" {
                = if "" != "" {
                  local before `before' (`COLON')
                  local COLON
                  }
                - else if `"`COLON'"' != ":" {
                = else if `":"' != ":" {
                  local before `"`before' `COLON'"'
                  local COLON
                  }
                - }
                - while `"`COLON'"' != ":" & `"`after'"' != "" {
                = while `":"' != ":" & `" ,  level(95) "' != "" {
                  gettoken COLON after : after, parse(":") bind match(par) quot
> es
                  if "`par'" != "" {
                  local before `before' (`COLON')
                  local COLON
                  }
                  else if `"`COLON'"' != ":" {
                  local before `"`before' `COLON'"'
                  local COLON
                  }
                  }
                - if `"`COLON'"' != ":" {
                = if `":"' != ":" {
                  di as err "'' found where ':' expected"
                  exit 198
                  }
                - sreturn local before `"`before'"'
                = sreturn local before `"stcox, stdata noneedvarlist mark(STrat
> a SHared OFFset tvc CLuster) numdepvars(0) "'
                - sreturn local after `"`after'"'
                = sreturn local after `" ,  level(95) "'
                --------------------------------------- end _on_colon_parse ---
              - local ZERO `"`s(before)'"'
              = local ZERO `"stcox, stdata noneedvarlist mark(STrata SHared OFF
> set tvc CLuster) numdepvars(0) "'
              - local 0 `"`s(after)'"'
              = local 0 `" ,  level(95) "'
              - quietly syntax [anything(equalok)] [if] [in] [fw aw pw iw] [, V
> CE(string asis) VCE1(string asis) LRMODEL * ]
              - if `"`vce'"' == "" {
              = if `""' == "" {
              - MYRESULT
                ------------------------------ begin _vce_parserun.MYRESULT ---
                - args exit
                - sreturn local exit `"`exit'"'
                = sreturn local exit `""'
                -------------------------------- end _vce_parserun.MYRESULT ---
              - exit
              ------------------------------------------- end _vce_parserun ---
            - if "`s(exit)'" != "" {
            = if "" != "" {
              ereturn local cmdline `"stcox `0'"'
              exit
              }
            - `version' `by' stcox_7 `0'
            = version 11.1, missing:  stcox_7 ,  level(95) 
              ----------------------------------------- begin stcox.stcox_7 ---
              - local version : di "version " string(_caller()) ", missing:"
              - version 7, missing
              - if _caller()<6 {
                if _by() { error 190 }
                ztcox_5 `0'
                exit
                }
              - if replay() {
              - syntax [, ESTImate noHR * ]
              - if `"`estimate'"'=="" {
              = if `""'=="" {
              - if _by() { error 190 }
              - if `"`e(cmd2)'"' != "stcox" {
              = if `"stcox"' != "stcox" {
                error 301
                }
              - if "`e(prefix)'" == "svy" {
              = if "" == "svy" {
                _prefix_display, `hr' `options'
                exit
                }
              - _get_diopts diopts, `options'
              = _get_diopts diopts, level(95)
                ----------------------------------------- begin _get_diopts ---
                - version 11
                - syntax namelist(max=2) [, *]
                - gettoken name1 namelist : namelist
                - gettoken name2 namelist : namelist
                - GetDiopts diopts options, `options'
                = GetDiopts diopts options, level(95)
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 2 == 1 & 0 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local diopts                         
                  - if `K' == 2 {
                  = if 2 == 2 {
                  - c_local `c_opts' `"`options'"'
                  = c_local  options `""'
                  - }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - c_local `name1' `"`diopts'"'
                = c_local diopts `""'
                - local snames : s(macros)
                - foreach sname of local snames {
                - local S_`sname' = s(`sname')
                = local S_level = s(level)
                - }
                - local S_`sname' = s(`sname')
                = local S_after = s(after)
                - }
                - local S_`sname' = s(`sname')
                = local S_before = s(before)
                - }
                - sreturn clear
                - GetDiopts DEFAULT
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 1 == 1 & 0 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local DEFAULT                         
                  - if `K' == 2 {
                  = if 1 == 2 {
                    c_local `c_opts' `"`options'"'
                    }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - if `"`name2'"' == "" {
                = if `""' == "" {
                - GetDiopts DUPS, `options'
                = GetDiopts DUPS, 
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 1 == 1 & 0 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local DUPS                         
                  - if `K' == 2 {
                  = if 1 == 2 {
                    c_local `c_opts' `"`options'"'
                    }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - }
                - else {
                  GetDiopts DUPS options, `options'
                  c_local `name2' `"`options'"'
                  }
                - local DUPS : list DUPS - DEFAULT
                - gettoken DUPS : DUPS
                - if `"`DUPS'"' != "" {
                = if `""' != "" {
                  if (strpos(`"`DUPS'"', "(")) {
                  gettoken DUPS : DUPS, parse("(")
                  local DUPS `"`DUPS'()"'
                  }
                  di as err "duplicate {bf:`DUPS'} option not allowed"
                  exit 198
                  }
                - sreturn clear
                - foreach sname of local snames {
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local level = `"95"'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local after = `",  level(95) "'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local before = `"stcox, stdata noneedvarlist mark(STr
> ata SHared OFFset tvc CLuster) numdepvars(0) "'
                - }
                ------------------------------------------- end _get_diopts ---
              - local hr = cond(`"`hr'"'=="", "hr", "")
              = local hr = cond(`""'=="", "hr", "")
              - local h = cond(`"`e(strata)'"'=="", "Cox regression", "Stratifi
> ed Cox regr.")
              = local h = cond(`""'=="", "Cox regression", "Stratified Cox regr
> .")
              - local h1="no ties"
              - if "`e(ties)'"=="breslow" {
              = if "breslow"=="breslow" {
              - local h1="Breslow method for ties"
              - }
              - else if "`e(ties)'"=="efron" {
              = else if "breslow"=="efron" {
                local h1="Efron method for ties"
                }
              - else if "`e(ties)'"=="partial" {
              = else if "breslow"=="partial" {
                local h1="exact partial likelihood"
                }
              - else if "`e(ties)'"=="marginal" {
              = else if "breslow"=="marginal" {
                local h1="exact marginal likelihood"
                }
              - di _n as txt `"`h' -- `h1'"'
              = di _n as txt `"Cox regression -- Breslow method for ties"'
              - st_hcd
                ---------------------------------------------- begin st_hcd ---
                - version 6
                - local crtype = upper(bsubstr(`"`e(crittype)'"',1,1)) + bsubst
> r(`"`e(crittype)'"',2,.)
                = local crtype = upper(bsubstr(`"log likelihood"',1,1)) + bsubs
> tr(`"log likelihood"',2,.)
                - local crlen = max(15,length(`"`crtype'"'))
                = local crlen = max(15,length(`"Log likelihood"'))
                - di _n in gr %-`crlen's "No. of subjects" " = " in ye %12.0fc 
> e(N_sub) _col(49) in gr "Number of obs    =  " in ye %10.0fc e(N)
                = di _n in gr %-15s "No. of subjects" " = " in ye %12.0fc e(N_s
> ub) _col(49) in gr "Number of obs    =  " in ye %10.0fc e(N)
                - di in gr %-`crlen's "No. of failures" " = " in ye %12.0fc `e(
> N_fail)'
                = di in gr %-15s "No. of failures" " = " in ye %12.0fc 58
                - di in gr %-`crlen's "Time at risk" " = " in ye %12.0g e(risk)
                = di in gr %-15s "Time at risk" " = " in ye %12.0g e(risk)
                - if !missing(e(chi2)) | missing(e(df_r)) {
                - if missing(e(chi2)) {
                  di in smcl _col(49) "{help j_robustsingular##|_new:Wald chi2(
> `e(df_m)')}" in gr _col(66) "=  " in ye %10.2f e(F)
                  }
                - else {
                - di _col(49) in gr "`e(chi2type)' chi2(" in ye e(df_m) in gr "
> )" _col(66) "=  " in ye %10.2f e(chi2)
                = di _col(49) in gr "LR chi2(" in ye e(df_m) in gr ")" _col(66)
>  "=  " in ye %10.2f e(chi2)
                - }
                - di in gr %-`crlen's "`crtype'" " =   " in ye %10.0g e(ll) _co
> l(49) in gr "Prob > chi2" _col(66) "=  " in ye %10.4f chiprob(e(df_m), e(chi2
> ))
                = di in gr %-15s "Log likelihood" " =   " in ye %10.0g e(ll) _c
> ol(49) in gr "Prob > chi2" _col(66) "=  " in ye %10.4f chiprob(e(df_m), e(chi
> 2))
                - }
                - else if !missing(e(F)) {
                  di _col(49) in gr "F(" in ye %4.0f e(df_m) in gr "," in ye %7
> .0f e(df_r) in gr ")" _col(66) "=  " in ye %10.2f e(F)
                  di in gr %-`crlen's "`crtype'" " =   " in ye %10.0g e(ll) _co
> l(49) in gr "Prob > F" _col(66) "=  " in ye %10.4f Ftail(e(df_m), e(df_r), e(
> F))
                  }
                - else {
                  local dfm_l : di %4.0f e(df_m)
                  local dfm_l2: di %7.0f e(df_r)
                  di in smcl _col(49) "{help j_robustsingular##|_new:F(`dfm_l',
> `dfm_l2')}" in gr _col(66) "=  " in ye %10.2f e(F)
                  di in gr %-`crlen's "`crtype'" " =   " in ye %10.0g e(ll) _co
> l(49) in gr "Prob > F" _col(66) "=  " in ye %10.4f .
                  }
                ------------------------------------------------ end st_hcd ---
              - di
              - local offset `e(offset)'
              = local offset 
              - est local offset
              - _coef_table, `hr' `options'
              = _coef_table, hr level(95)
                ----------------------------------------- begin _coef_table ---
                - version 11
                - local vv : di "version " string(max(11,_caller())) ", missing
> :"
                - if (!c(noisily) & c(coeftabresults) == "off") {
                  exit
                  }
                - _check_eclass
                - syntax [, BMATrix(passthru) VMATrix(passthru) * ]
                - if "`e(b)'" == "" & "`e(V)'" == "" & "`bmatrix'`vmatrix'"==""
>  {
                = if "matrix" == "" & "matrix" == "" & ""=="" {
                  exit
                  }
                - local mc_cmds contrast margins pwcompare pwmean
                - local cmd "`e(cmd)'"
                = local cmd "cox"
                - local keepmc : list cmd in mc_cmds
                - if inlist("`cmd'", "pwcompare", "pwmean") {
                = if inlist("cox", "pwcompare", "pwmean") {
                  local groups GROUPS
                  }
                - if "`cmd'" == "regress" {
                = if "cox" == "regress" {
                  local beta Beta
                  }
                - if "`cmd'" == "gsem" {
                = if "cox" == "gsem" {
                  local fvignore fvignore(int 0)
                  local flignore flignore
                  }
                - if "`cmd'" == "sem" {
                = if "cox" == "sem" {
                  local standardized STANDARDIZED
                  local showginvariant SHOWGINVariant
                  local nolabel NOLABel LABel NOFVLABel FVLABel
                  local nofootnote NOFOOTnote
                  local wrap wrap(numlist max=1) fvwrap(passthru)
                  }
                - if "`e(mi)'"=="mi" {
                = if ""=="mi" {
                  local dftable DFTable
                  local dfonly DFONLY
                  local noclustreport NOCLUSTReport
                  local pisematrix PISEMATrix(string)
                  }
                - syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(s
> tring) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) R
> OWCFormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(strin
> g) MVMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCL
> ASSMATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string 
> asis) `beta' `standardized' NOCI NOPValues `dftable' `dfonly' dfci DFPValues 
> dfmissing `groups' COEFLegend selegend `fvignore' `flignore' `showginvariant'
>  `nolabel' `nofootnote' `wrap' sort `pisematrix' depname(string) COEFTitle(st
> ring) coeftitle2(string) ptitle(string) cititle(string) NOMCLEGend noCNSRepor
> t FULLCNSReport `noclustreport' cformat(passthru) sformat(passthru) pformat(p
> assthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM NOTEST SEParator(int
> eger 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(string) eqselect(st
> ring) * ]
                = syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(s
> tring) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) R
> OWCFormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(strin
> g) MVMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCL
> ASSMATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string 
> asis)   NOCI NOPValues   dfci DFPValues dfmissing  COEFLegend selegend       
> sort  depname(string) COEFTitle(string) coeftitle2(string) ptitle(string) cit
> itle(string) NOMCLEGend noCNSReport FULLCNSReport  cformat(passthru) sformat(
> passthru) pformat(passthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM N
> OTEST SEParator(integer 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(
> string) eqselect(string) * ]
                - if "`wrap'" != "" {
                = if "" != "" {
                  opts_exclusive `"wrap(`wrap') `fvwrap'"'
                  local fvwrap fvwrap(`wrap')
                  }
                - if "`nolabel'`label'" != "" {
                = if "" != "" {
                  opts_exclusive "`nolabel' `label'"
                  opts_exclusive "`nofvlabel' `fvlabel'"
                  opts_exclusive "`nolabel' `fvlabel'"
                  opts_exclusive "`nofvlabel' `label'"
                  if "`nolabel'" != "" {
                  local fvlabel nofvlabel
                  }
                  else {
                  local fvlabel fvlabel
                  }
                  }
                - else local fvlabel `nofvlabel' `fvlabel'
                = else local fvlabel  
                - local type `coeflegend' `selegend'
                = local type  
                - opts_exclusive "`type' `standardized'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if (`"`rowmatrix'"'=="" & "`norowci'"!="") {
                = if (`""'=="" & ""!="") {
                  di as err "{bf:norowci} requires {bf:rowmatrix()}"
                  exit 198
                  }
                - if ("`dftable'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`dftable'}"
                  exit 198
                  }
                - if ("`dfonly'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`dfonly'}"
                  exit 198
                  }
                - if ("`noci'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`noci'}"
                  exit 198
                  }
                - if "`standardized'" != "" & "`bstdmatrix'" != "" {
                = if "" != "" & "" != "" {
                  local beta beta
                  local standardized
                  }
                - if `:length local type' == 0 {
                = if 0 == 0 {
                - local type `beta' `noci' `nopvalues' `dftable' `dfonly' `grou
> ps' `dfci' `dfpvalues'
                = local type        
                - }
                - opts_exclusive "`type'"
                = opts_exclusive ""
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts 
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`first' `nofirst'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`first' `showeqns'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local cnsreport `cnsreport' `fullcnsreport'
                = local cnsreport  
                - opts_exclusive "`cnsreport'"
                = opts_exclusive ""
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts 
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if `"`showeqns'"' != "" {
                = if `""' != "" {
                  local nofirst nofirst
                  }
                - if `"`ematrix'`noeqcheck'"' == "" {
                = if `""' == "" {
                - if `"`e(error)'"' == "matrix" {
                = if `""' == "matrix" {
                  local ematrix e(error)
                  }
                - }
                - _get_mcompare, `options'
                = _get_mcompare, hr
                  ------------------------------------- begin _get_mcompare ---
                  - version 11
                  - local cmd `"`e(cmd)'"'
                  = local cmd `"cox"'
                  - syntax [name(name=caller)] [, *]
                  - local is_pwc = inlist("pwcompare", "`cmd'", "`caller'") | i
> nlist("pwmean", "`cmd'", "`caller'")
                  = local is_pwc = inlist("pwcompare", "cox", "") | inlist("pwm
> ean", "cox", "")
                  - local is_marg = inlist("margins", "`cmd'", "`e(cmd2)'", "`c
> aller'")
                  = local is_marg = inlist("margins", "cox", "stcox", "")
                  - local OPTIONS NOADJust BONferroni DUNCan DUNNett SCHeffe SI
> Dak SNK TUKey ADJustall
                  - if `is_pwc' {
                  = if 0 {
                    syntax [name] [, `OPTIONS' MCOMPare(string) *]
                    }
                  - else {
                  - syntax [name] [, MCOMPare(string) *]
                  - local suboption mcompare()
                  - }
                  - sreturn clear
                  - sreturn local options `"`options'"'
                  = sreturn local options `"hr"'
                  - if `is_pwc' {
                  = if 0 {
                    local METHOD `noadjust' `bonferroni' `duncan' `dunnett' `sc
> heffe' `sidak' `snk' `tukey'
                    local METHOD : list uniq METHOD
                    opts_exclusive "`METHOD'"
                    local ALL `adjustall'
                    opts_exclusive "`noadjust' `ALL'"
                    }
                  - local 0 `", `mcompare'"'
                  = local 0 `", "'
                  - capture syntax [, `OPTIONS']
                  = capture syntax [, NOADJust BONferroni DUNCan DUNNett SCHeff
> e SIDak SNK TUKey ADJustall]
                  - if c(rc) {
                    di as err "invalid mcompare() option;"
                    di as err "method '`mcompare'' not allowed"
                    error 198
                    }
                  - local METHOD `METHOD' `noadjust' `bonferroni' `duncan' `dun
> nett' `scheffe' `sidak' `snk' `tukey'
                  = local METHOD         
                  - local METHOD : list uniq METHOD
                  - local ALL `ALL' `adjustall'
                  = local ALL  
                  - local ALL : list uniq ALL
                  - opts_exclusive "`METHOD'" `suboption'
                  = opts_exclusive "" mcompare()
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts 
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - if "`METHOD'" == "" {
                  = if "" == "" {
                  - if "`ALL'" != "" {
                  = if "" != "" {
                    di as err "multiple comparison method required with the adj
> ustall option"
                    exit 198
                    }
                  - local METHOD noadjust
                  - local noadjust noadjust
                  - }
                  - opts_exclusive "`ALL' `noadjust'" `suboption'
                  = opts_exclusive " noadjust" mcompare()
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  noadjust
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `"noadjust"' != "" {
                    - local ++n
                    - gettoken item`n' opts : opts, bind
                    = gettoken item1 opts : opts, bind
                    - }
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 1 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local EXCLUDE duncan dunnett snk tukey
                  - if `:list METHOD in EXCLUDE' {
                  = if 0 {
                    if `is_pwc' {
                    local opt : copy local METHOD
                    }
                    else {
                    local opt "mcompare(`METHOD')"
                    }
                    local cmdlist anova manova regress mvreg pwmean
                    if "`cmd'" == "pwcompare" {
                    local cmd `"`e(cmd_est)'"'
                    }
                    if `is_marg' {
                    local cmd margins
                    }
                    if !`:list cmd in cmdlist' | !`is_pwc' {
                    di as err `"method `opt' is not allowed with results from `
> cmd'"'
                    exit 322
                    }
                    if `"`e(prefix)'"' == "svy" {
                    di as err `"method `opt' is not allowed with results using 
> the svy prefix"'
                    exit 322
                    }
                    local vce `"`e(vce)'"'
                    if !inlist("`vce'", "", "ols") {
                    di as err `"method `opt' is not allowed with results using 
> vce(`vce')"'
                    exit 322
                    }
                    }
                  - local EXCLUDE duncan dunnett snk tukey scheffe
                  - if `:list METHOD in EXCLUDE' {
                  = if 0 {
                    if "`ALL'" != "" {
                    di as err `"option adjustall is not allowed with method `ME
> THOD'"'
                    exit 198
                    }
                    }
                  - sreturn local method `"`METHOD'"'
                  = sreturn local method `"noadjust"'
                  - sreturn local adjustall `"`ALL'"'
                  = sreturn local adjustall `""'
                  --------------------------------------- end _get_mcompare ---
                - local method `"`s(method)'"'
                = local method `"noadjust"'
                - local all `"`s(adjustall)'"'
                = local all `""'
                - local options `"`s(options)'"'
                = local options `"hr"'
                - if "`method'" != "noadjust" {
                = if "noadjust" != "noadjust" {
                  local keepmc 1
                  }
                - opts_exclusive "`all' `groups'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if "`method'" == "dunnett" {
                = if "noadjust" == "dunnett" {
                  opts_exclusive "`method' `groups'"
                  }
                - _get_diopts diopts options, `options' `fvwrap' `fvlabel'
                = _get_diopts diopts options, hr  
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, hr
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 2 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `"hr"'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local diopts `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_method = s(method)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_options = s(options)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `"options"' == "" {
                    GetDiopts DUPS, `options'
                    }
                  - else {
                  - GetDiopts DUPS options, `options'
                  = GetDiopts DUPS options, hr
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 2 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `"hr"'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name2' `"`options'"'
                  = c_local options `"hr"'
                  - }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local method = `"noadjust"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local options = `"hr"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - local legend coeflegend selegend
                - local legend : list legend & diopts
                - local diopts : list diopts - legend
                - local lstretch lstretch nolstretch
                - local lstretch : list lstretch & diopts
                - local diopts : list diopts - lstretch
                - local markdown markdown
                - local markdown : list markdown & diopts
                - local diopts : list diopts - markdown
                - _get_diopts ignore, `diopts' `cformat' `sformat' `pformat'
                = _get_diopts ignore,    
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `""'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local ignore `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_options = s(options)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_method = s(method)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `""' == "" {
                  - GetDiopts DUPS, `options'
                  = GetDiopts DUPS, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - }
                  - else {
                    GetDiopts DUPS options, `options'
                    c_local `name2' `"`options'"'
                    }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local options = `"hr"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local method = `"noadjust"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - local cformat `"`s(cformat)'"'
                = local cformat `""'
                - local sformat `"`s(sformat)'"'
                = local sformat `""'
                - local pformat `"`s(pformat)'"'
                = local pformat `""'
                - _get_eformopts , eformopts(`options') allowed(__all__) soptio
> ns
                = _get_eformopts , eformopts(hr) allowed(__all__) soptions
                  ------------------------------------ begin _get_eformopts ---
                  - version 8.0
                  - syntax [, eformopts(string asis) soptions ALLOWed(string) ]
                  - local 0 , `eformopts'
                  = local 0 , hr
                  - local EFALL NOHR hr NOSHR shr or IRr RRr tr TRatio
                  - if "`soptions'" != "" {
                  = if "soptions" != "" {
                  - syntax [, EForm1(passthru) EForm `EFALL' * ]
                  = syntax [, EForm1(passthru) EForm NOHR hr NOSHR shr or IRr R
> Rr tr TRatio * ]
                  - local opts `"`options'"'
                  = local opts `""'
                  - local 0 , `eform1' `eform' `nohr' `hr' `noshr' `shr' `or' `
> irr' `rrr' `tr' `tratio'
                  = local 0 ,    hr       
                  - }
                  - if "`allowed'" == "__all__" {
                  = if "__all__" == "__all__" {
                  - local allowed `EFALL'
                  = local allowed NOHR hr NOSHR shr or IRr RRr tr TRatio
                  - }
                  - foreach ef of local allowed {
                  - capture confirm name `ef'
                  = capture confirm name NOHR
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts  nohr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name hr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name NOSHR
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name shr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name or
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or
                  - }
                  - capture confirm name `ef'
                  = capture confirm name IRr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name RRr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name tr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr tr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name TRatio
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr tr tratio
                  - }
                  - local efopts : list uniq efopts
                  - syntax [, EForm1(string) EForm `allowed' ]
                  = syntax [, EForm1(string) EForm NOHR hr NOSHR shr or IRr RRr
>  tr TRatio ]
                  - foreach ef of local efopts {
                  - local eform `eform' ``ef''
                  = local eform  
                  - }
                  - local eform `eform' ``ef''
                  = local eform  hr
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - local eform `eform' ``ef''
                  = local eform hr 
                  - }
                  - if `"`eform1'"'=="Odds Ratio" local eform_cons_ti = "Odds"
                  = if `""'=="Odds Ratio" local eform_cons_ti = "Odds"
                  - else if `"`eform1'"'=="Haz. Ratio" local eform_cons_ti="Haz
> ard"
                  = else if `""'=="Haz. Ratio" local eform_cons_ti="Hazard"
                  - else if `"`eform1'"'=="Time Ratio" local eform_cons_ti = "T
> ime"
                  = else if `""'=="Time Ratio" local eform_cons_ti = "Time"
                  - else if `"`eform1'"'=="IRR" local eform_cons_ti = "Inc. Rat
> e"
                  = else if `""'=="IRR" local eform_cons_ti = "Inc. Rate"
                  - else if `"`eform1'"'=="Risk Ratio" local eform_cons_ti = "R
> isk"
                  = else if `""'=="Risk Ratio" local eform_cons_ti = "Risk"
                  - else if `"`eform1'"'=="Hlth Ratio" local eform_cons_ti="Hea
> lth"
                  = else if `""'=="Hlth Ratio" local eform_cons_ti="Health"
                  - local k : list sizeof eform
                  - if `k' {
                  = if 1 {
                  - opts_exclusive "`eform'"
                  = opts_exclusive "hr"
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts hr
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `"hr"' != "" {
                    - local ++n
                    - gettoken item`n' opts : opts, bind
                    = gettoken item1 opts : opts, bind
                    - }
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 1 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - if `:length local eform1' {
                  = if 0 {
                    opts_exclusive "eform() `eform'"
                    }
                  - }
                  - if `k' {
                  = if 1 {
                  - if ("`eform'"=="eform") local eform1 = "exp(b)"
                  = if ("hr"=="eform") local eform1 = "exp(b)"
                  - else if ("`eform'"=="hr") {
                  = else if ("hr"=="hr") {
                  - local eform1 = "Haz. Ratio"
                  - local eform_cons_ti = "Hazard"
                  - }
                  - else if ("`eform'"=="shr") {
                  = else if ("hr"=="shr") {
                    local eform1 = "SHR"
                    local eform_cons_ti = "Subhazard"
                    }
                  - else if ("`eform'"=="tr") {
                  = else if ("hr"=="tr") {
                    local eform1 = "Time Ratio"
                    local eform_cons_ti = "Time"
                    }
                  - else if ("`eform'"=="tratio") {
                  = else if ("hr"=="tratio") {
                    local eform1 = "Time Ratio"
                    local eform_cons_ti = "Time"
                    }
                  - else if ("`eform'"=="or") {
                  = else if ("hr"=="or") {
                    local eform1 = "Odds Ratio"
                    if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(c
> md)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                    local eform_cons_ti = "Rel. Risk"
                    }
                    else {
                    local eform_cons_ti = "Odds"
                    }
                    }
                  - else if ("`eform'"=="irr") {
                  = else if ("hr"=="irr") {
                    local eform1 = "IRR"
                    local eform_cons_ti = "Inc. Rate"
                    }
                  - else if ("`eform'"=="rrr") {
                  = else if ("hr"=="rrr") {
                    local eform1 = "RRR"
                    local eform_cons_ti = "Rel. Risk"
                    }
                  - else if ("`eform'"!="nohr") & ("`eform'"!="noshr") {
                  = else if ("hr"!="nohr") & ("hr"!="noshr") {
                    local eform1 = upper("`eform'")
                    }
                  - }
                  - sreturn clear
                  - sreturn local options `"`opts'"'
                  = sreturn local options `""'
                  - sreturn local opt `eform'
                  = sreturn local opt hr
                  - sreturn local str `eform1'
                  = sreturn local str Haz. Ratio
                  - if `"`eform1'"' != "" {
                  = if `"Haz. Ratio"' != "" {
                  - sreturn local eform eform(`"`eform1'"')
                  = sreturn local eform eform(`"Haz. Ratio"')
                  - }
                  - else sreturn local eform ""
                  - sreturn local eform_cons_ti `eform_cons_ti'
                  = sreturn local eform_cons_ti Hazard
                  -------------------------------------- end _get_eformopts ---
                - if inlist("`bmatrix'", "", "e(b)") & "`e(k_eform)'" == "0" {
                = if inlist("", "", "e(b)") & "1" == "0" {
                  local eform
                  }
                - else local eform `"`s(str)'"'
                = else local eform `"Haz. Ratio"'
                - local eform_cons_ti `"`s(eform_cons_ti)'"'
                = local eform_cons_ti `"Hazard"'
                - if ("`e(consonly)'"!="1" | `"`eform_cons_ti'"'=="") {
                = if (""!="1" | `"Hazard"'=="") {
                - local eformdi `"`s(str)'"'
                = local eformdi `"Haz. Ratio"'
                - }
                - else {
                  local eformdi `"`eform_cons_ti'"'
                  }
                - local coefttl = cond(`"`eform'"'==`""', `"`coeftitle'"', `"`e
> formdi'"')
                = local coefttl = cond(`"Haz. Ratio"'==`""', `""', `"Haz. Ratio
> "')
                - local options `"`s(options)'"'
                = local options `""'
                - _get_diparmopts, diparmopts(`options') level(`level')
                = _get_diparmopts, diparmopts() level(95)
                  ----------------------------------- begin _get_diparmopts ---
                  - if _caller() < 8.2 {
                    _get_diparmopts_8 `0'
                    exit
                    }
                  - version 9
                  - local version : di "version " string(_caller()) ":"
                  - syntax [, diparmopts(string asis) EXECute soptions bottom p
> lus SYNTAXonly * ]
                  - local goptions `options'
                  = local goptions level(95)
                  - SpliceGlobals junk , `goptions'
                  = SpliceGlobals junk , level(95)
                    ------------------- begin _get_diparmopts.SpliceGlobals ---
                    - syntax name(id="macro name" name=c_diparm) [, diparm(stri
> ng asis) Level(cilevel) dof(passthru) syntaxonly ]
                    - if `"`dof'"' == "" & `"`e(df_r)'"' != "" {
                    = if `""' == "" & `""' != "" {
                      capture confirm integer number `e(df_r)'
                      if !c(rc) {
                      local gdof dof(`e(df_r)')
                      }
                      capture
                      }
                    - else local gdof `"`dof'"'
                    = else local gdof `""'
                    - local glevel `level'
                    = local glevel 95
                    - local lopt level(`glevel')
                    = local lopt level(95)
                    - if (`"`diparm'"' == "") exit
                    = if (`""' == "") exit
                    --------------------- end _get_diparmopts.SpliceGlobals ---
                  - local 0 `", `diparmopts'"'
                  = local 0 `", "'
                  - local diparmopts
                  - local k 0
                  - syntax [, diparm(string asis) * ]
                  - while `"`diparm'"' != "" {
                  = while `""' != "" {
                    local ++k
                    local single 1
                    local after
                    capture _on_colon_parse `diparm'
                    if !c(rc) {
                    local single 0
                    local diparm `"`s(before)'"'
                    local after `"`s(after)'"'
                    }
                    capture
                    SpliceGlobals diparm , diparm(`diparm') `syntaxonly' `gopti
> ons'
                    local diparm`k' `"`diparm'"'
                    local diparmopts `"`diparmopts' : `diparm'"'
                    if `single' | `"`:list retok after'"' == "" {
                    local 0 `", `options'"'
                    syntax [, diparm(string asis) * ]
                    }
                    else {
                    local diparm `"`after'"'
                    }
                    }
                  - if `"`soptions'"' == "" {
                  = if `""' == "" {
                  - syntax [, diparm(string asis) ]
                  - }
                  - if ("`execute'" == "") {
                  = if ("" == "") {
                  - sreturn clear
                  - sreturn local options `"`options'"'
                  = sreturn local options `""'
                  - sreturn local diparm `"`diparmopts'"'
                  = sreturn local diparm `""'
                  - forval i = 1/`k' {
                  = forval i = 1/0 {
                    sreturn local diparm`i' `"`diparm`i''"'
                    }
                  - sreturn local k `k'
                  = sreturn local k 0
                  - exit
                  ------------------------------------- end _get_diparmopts ---
                - local NODIPARM : length local nodiparm
                - if `NODIPARM' {
                = if 0 {
                  local options
                  }
                - local GTOPTS parse(":") bind quotes
                - local k 0
                - if !`NODIPARM' {
                = if !0 {
                - if `"`e(diparm)'"' != "" {
                = if `""' != "" {
                  local i 0
                  local diparm `"`e(diparm)'"'
                  }
                - else if `"`e(diparm1)'"' != "" {
                = else if `""' != "" {
                  local i 1
                  local diparm `"`e(diparm1)'"'
                  }
                - while `:length local diparm' {
                = while 0 {
                  gettoken diparm rest : diparm, `GTOPTS'
                  while `:length local rest' {
                  local ++k
                  local diparm`k' : copy local diparm
                  gettoken COLON rest : rest, `GTOPTS'
                  gettoken diparm rest : rest, `GTOPTS'
                  }
                  local ++k
                  local diparm`k' : copy local diparm
                  local ++i
                  local diparm `"`e(diparm`i')'"'
                  }
                - }
                - if `:length local options' {
                = if 0 {
                  local 0 `", `options'"'
                  syntax [, diparm(string asis) *]
                  if `k' & `:length local diparm' {
                  local ++k
                  local diparm`k' __sep__
                  }
                  while `:length local diparm' {
                  gettoken diparm rest : diparm, `GTOPTS'
                  while `:length local rest' {
                  local ++k
                  local diparm`k' : copy local diparm
                  gettoken COLON rest : rest, `GTOPTS'
                  gettoken diparm rest : rest, `GTOPTS'
                  }
                  local ++k
                  local diparm`k' : copy local diparm
                  local 0 `", `options'"'
                  syntax [, diparm(string asis) *]
                  }
                  }
                - if "`markdown'" != "" {
                = if "" != "" {
                  local lsize = c(linesize)
                  set linesize 255
                  }
                - `vv' mata: _coef_table()
                = version 11, missing: mata: _coef_table()
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `""'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local __00000U `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_k = s(k)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `""' == "" {
                  - GetDiopts DUPS, `options'
                  = GetDiopts DUPS, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - }
                  - else {
                    GetDiopts DUPS options, `options'
                    c_local `name2' `"`options'"'
                    }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local k = `"0"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - if "`markdown'" != "" {
                = if "" != "" {
                  set linesize `lsize'
                  }
                - if "`eqselect'" == "" {
                = if "" == "" {
                - if "`eformdi'"!="" & ("`e(cmd)'"!="gnbreg" | "`e(prefix)'"=="
> svy") {
                = if "Haz. Ratio"!="" & ("cox"!="gnbreg" | ""=="svy") {
                - local k_eform `e(k_eform)'
                = local k_eform 1
                - if ("`k_eform'"=="") {
                = if ("1"=="") {
                  local k_eform = 1
                  }
                - local k_eq `e(k_eq)'
                = local k_eq 
                - if ("`k_eq'"=="") {
                = if (""=="") {
                - local k_eq = 1
                - }
                - if (`k_eform'<`k_eq' & `k_eform') {
                = if (1<1 & 1) {
                  if ("`e(cmd2)'" == "stintreg" | "`e(cmd2)'" == "streg") & ("`
> e(cmd)'" == "weibull" | "`e(cmd)'" == "gompertz") {
                  }
                  else {
                  _eform_multeq_note efnote : `k_eform'
                  di as txt "`efnote'"
                  }
                  }
                - }
                - if (`"`eformdi'"'!="" & "`e(noconstant)'"=="0" & `"`eform_con
> s_ti'"'!="" & "`e(consonly)'"!="1") {
                = if (`"Haz. Ratio"'!="" & ""=="0" & `"Hazard"'!="" & ""!="1") 
> {
                  if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd
> )'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                  local asvar = `"`e(ranvars)'`e(fixvars)'`e(indvars)'"' != ""
                  if `"`e(casevars)'"' != "" & `asvar' {
                  local note1 "Exponentiated coefficients represent odds ratios
>  for "
                  local note2 "alternative-specific variables (first equation) 
> and "
                  local note3 "{help j_cmrisk##|_new:relative-risk ratios} "
                  local note4 "for case-specific variables."
                  di as txt "{p 0 6 2}Note: `note1'`note2'`note3'`note4'{p_end}
> "
                  }
                  }
                  if "`eform_cons_ti'" == "Inc. Rate" {
                  local eform_cons_note "incidence rate"
                  }
                  else if "`eform_cons_ti'" == "Rel. Risk" {
                  local eform_cons_note "relative risk"
                  }
                  else if "`eform_cons_ti'" == "Health" {
                  local eform_cons_note "health (probability of no disease)"
                  }
                  else {
                  local eform_cons_note = strlower(`"`eform_cons_ti'"')
                  }
                  local eform_cons_note "baseline `eform_cons_note'"
                  if ("`e(cmd2)'"=="") {
                  local cmd `e(cmd)'
                  }
                  else {
                  local cmd `e(cmd2)'
                  }
                  local f2 = udsubstr("`cmd'",1,2)
                  local is_re = ("`f2'"=="xt" | "`f2'"=="me")
                  if `is_re' {
                  local extranote " (conditional on zero random effects)"
                  }
                  di as txt "{p 0 6 2}Note: {res:_cons} estimates " "`eform_con
> s_note'`extranote'" _c
                  if ("`e(cmd)'"=="mlogit" | "`e(cmd)'"=="asclogit" | "`e(cmd)'
> "=="cmclogit" | "`e(cmd)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                  di as txt " for each outcome" _c
                  }
                  di as txt ".{p_end}"
                  }
                - }
                - return add
                - if !`keepmc' {
                = if !0 {
                - return local mcmethod
                - return local mctitle
                - }
                ------------------------------------------- end _coef_table ---
              - est local offset `offset'
              = est local offset 
              - `version' stcox_footnote
              = version 11.1, missing: stcox_footnote
                -------------------------------------- begin stcox_footnote ---
                - version 10
                - local pararg = min(78,c(linesize))
                - if "`e(strata)'" != "" {
                = if "" != "" {
                  local l = `pararg'-13-length("`e(strata)'")
                  di as txt _col(`l') "Stratified by `e(strata)'"
                  }
                - if "`e(k_eform)'" != "1" {
                = if "1" != "1" {
                  local t "tvc"
                  if (_caller()<11) local t "t"
                  local texp "`e(texp)'"
                  di as txt "{p 0 6 0 `pararg'}Note: Variables in " as res "`t'
> " as txt " equation interacted with `texp'.{p_end}"
                  }
                ---------------------------------------- end stcox_footnote ---
              - if `"`e(converged)'"' == "0" {
              = if `""' == "0" {
                di as txt "Warning: convergence not achieved"
                }
              - exit
              ------------------------------------------- end stcox.stcox_7 ---
            - if (!replay() | "`estimate'" != "") {
            = if (!replay() | "" != "") {
              ereturn local cmdline `"stcox `0'"'
              }
            - exit
            ----------------------------------------------------- end stcox ---
          ----------------------------------------------- end stcox.stcox_7 ---
        - if (!replay() | "`estimate'" != "") {
        = if (!replay() | "" != "") {
        - ereturn local cmdline `"stcox `0'"'
        = ereturn local cmdline `"stcox __000004 if __00000F, basechazard(__000
> 005) "'
        - }
        - exit
        --------------------------------------------------------- end stcox ---
      - if "`bhazard'" != "" {
      = if "" != "" {
        qui replace `S' = `S' - `bhazinit'*`bhazard'*_t if `touse'
        }
      - qui replace `S'=exp(-`S') if `touse'
      = qui replace __000005=exp(-__000005) if __00000F
      - qui predict double `Sadj' if `touse', hr
      = qui predict double __000006 if __00000F, hr
        ----------------------------------------------------- begin predict ---
        - version 8.2, missing
        - if "`e(cmd)'" == "rocreg" & "`e(predict)'" == "" {
        = if "cox" == "rocreg" & "stcox_p" == "" {
          di as err "predict not allowed after nonparametric ROC"
          exit 198
          }
        - if "`e(mi)'"!="" & "`e(b)'"!="matrix" {
        = if ""!="" & "matrix"!="matrix" {
          error 321
          }
        - if _caller()<=5 | "`e(predict)'"=="" {
        = if _caller()<=5 | "stcox_p"=="" {
          _predict `0'
          }
        - else {
        - local v : display string(_caller())
        - version `v', missing
        = version 11.1, missing
        - `e(predict)' `0'
        = stcox_p double __000006 if __00000F, hr
          --------------------------------------------------- begin stcox_p ---
          - version 11
          - if `"`e(cmd2)'"' != "stcox" {
          = if `"stcox"' != "stcox" {
            error 301
            }
          - local scopt = cond(_caller() < 11, "SCores", "SCOres")
          - syntax [anything] [if] [in] [, XB Index STDP HR CSNell DEViance CCS
> Nell CMGale MGale BASEChazard basehc BASESurv EFFects ESR `scopt' SCHoenfeld 
> SCAledsch DFBeta LDisplace LMax PARTial noOFFset ]
          = syntax [anything] [if] [in] [, XB Index STDP HR CSNell DEViance CCS
> Nell CMGale MGale BASEChazard basehc BASESurv EFFects ESR SCOres SCHoenfeld S
> CAledsch DFBeta LDisplace LMax PARTial noOFFset ]
          - local type "`xb' `index' `stdp' `hr' `csnell' `deviance' `ccsnell'"
          = local type "   hr   "
          - local type "`type' `cmgale' `mgale' `basechazard' `basehc' `basesur
> v'"
          = local type "   hr        "
          - local type "`type' `effects' `scores' `esr' `schoenfeld' `dfbeta'"
          = local type "   hr             "
          - local type "`type' `ldisplace' `scaledsch' `lmax'"
          = local type "   hr                "
          - if `:word count `type'' > 1 {
          = if 1 > 1 {
            di as err "{p 0 4 2}only one of "
            di as err "`: list uniq type' "
            di as err "may be specified{p_end}"
            exit 198
            }
          - local type : word 1 of `type'
          = local type : word 1 of    hr                
          - if "`type'" == "scores" {
          = if "hr" == "scores" {
            local type esr
            }
          - if "`e(prefix)'" == "svy" {
          = if "" == "svy" {
            if inlist("`type'", "mgale", "csnell", "deviance", "cmgale", "ccsne
> ll") | inlist("`type'", "schoenfeld", "scaledsch", "dfbeta", "ldisplace", "lm
> ax") {
            di as err "{p 0 4 2}option `type' not allowed after "
            di as err "estimation with svy{p_end}"
            exit 322
            }
            }
          - if _caller() < 11 {
            if "`type'" == "esr" | "`type'" == "csnell" {
            local partial partial
            }
            }
          - if inlist("`type'", "esr", "dfbeta", "ldisplace", "lmax", "mgale", 
> "deviance", "csnell") {
          = if inlist("hr", "esr", "dfbeta", "ldisplace", "lmax", "mgale", "dev
> iance", "csnell") {
            if "`partial'" == "" {
            local type c`type'
            }
            }
          - else if "`partial'" != "" {
          = else if "" != "" {
            di as err "{p 0 4 2}option {bf:partial} not allowed{p_end}"
            exit 198
            }
          - if inlist("`type'", "dfbeta", "cdfbeta") {
          = if inlist("hr", "dfbeta", "cdfbeta") {
            if "`e(vce)'" != "oim" & "`e(V_modelbased)'" == "" {
            di as err "{p 0 4 2} prediction not allowed "
            di as err "with this nonstandard vce{p_end}"
            exit 459
            }
            }
          - if inlist("`type'", "ldisplace", "cldisplace", "lmax", "clmax") {
          = if inlist("hr", "ldisplace", "cldisplace", "lmax", "clmax") {
            if "`e(vce)'" != "oim" {
            di as err "{p 0 4 2} prediction not allowed "
            di as err "with nonstandard vce{p_end}"
            exit 459
            }
            }
          - if inlist("`type'", "esr", "cesr", "dfbeta", "cdfbeta", "schoenfeld
> ", "scaledsch") {
          = if inlist("hr", "esr", "cesr", "dfbeta", "cdfbeta", "schoenfeld", "
> scaledsch") {
            GenScoreLike `anything' `if' `in', type(`type') `offset'
            exit
            }
          - if inlist("`type'", "mgale", "basechazard", "basehc", "basesurv", "
> effects") {
          = if inlist("hr", "mgale", "basechazard", "basehc", "basesurv", "effe
> cts") {
            GenSinglePred `anything' `if' `in', type(`type') `offset'
            exit
            }
          - local myopts "XB Index STDP HR CSNell DEViance CCSnell CMGale"
          - local myopts "`myopts' LDisplace MGale PARTial LMax"
          = local myopts "XB Index STDP HR CSNell DEViance CCSnell CMGale LDisp
> lace MGale PARTial LMax"
          - _pred_se "`myopts'" `0'
          = _pred_se "XB Index STDP HR CSNell DEViance CCSnell CMGale LDisplace
>  MGale PARTial LMax" double __000006 if __00000F, hr
            ------------------------------------------------ begin _pred_se ---
            - version 6.0, missing
            - sret clear
            - gettoken ouser 0 : 0
            - local orig `"`0'"'
            = local orig `" double __000006 if __00000F, hr"'
            - gettoken varn 0 : 0, parse(" ,[")
            - gettoken nxt : 0, parse(" ,[(")
            - if !(`"`nxt'"'=="" | `"`nxt'"'=="if" | `"`nxt'"'=="in" | `"`nxt'"
> '==",") {
            = if !(`"__000006"'=="" | `"__000006"'=="if" | `"__000006"'=="in" |
>  `"__000006"'==",") {
            - local typ `varn'
            = local typ double
            - gettoken varn 0 : 0, parse(" ,[")
            - }
            - syntax [if] [in] [, `ouser' CONStant(varname numeric) noOFFset *]
            = syntax [if] [in] [, XB Index STDP HR CSNell DEViance CCSnell CMGa
> le LDisplace MGale PARTial LMax CONStant(varname numeric) noOFFset *]
            - if `"`options'"' != "" {
            = if `""' != "" {
              _predict `orig'
              sret local done 1
              exit
              }
            - confirm new var `varn'
            = confirm new var __000006
            - sret local done 0
            - sret local typ `"`typ'"'
            = sret local typ `"double"'
            - sret local varn `"`varn'"'
            = sret local varn `"__000006"'
            - sret local rest `"`0'"'
            = sret local rest `" if __00000F, hr"'
            -------------------------------------------------- end _pred_se ---
          - if `s(done)' {
          = if 0 {
            exit
            }
          - local vtyp `s(typ)'
          = local vtyp double
          - local varn `s(varn)'
          = local varn __000006
          - local 0 `"`s(rest)'"'
          = local 0 `" if __00000F, hr"'
          - syntax [if] [in] [, `myopts' noOFFset]
          = syntax [if] [in] [, XB Index STDP HR CSNell DEViance CCSnell CMGale
>  LDisplace MGale PARTial LMax noOFFset]
          - marksample touse
          - if inlist("`type'", "xb", "index", "stdp") {
          = if inlist("hr", "xb", "index", "stdp") {
            _predict `vtyp' `varn' if `touse', `type' `offset'
            exit
            }
          - st_is 2 full
            --------------------------------------------------- begin st_is ---
            - version 6
            - if "`1'"=="2" & `"`_dta[_dta]'"'=="st" & `"`_dta[st_ver]'"'=="2" 
> & _caller()>5 {
            = if "2"=="2" & `"st"'=="st" & `"2"'=="2" & _caller()>5 {
            - if "`2'"=="analysis" & `"`_dta[st_full]'"'=="" | "`2'"=="full" {
            = if "full"=="analysis" & `""'=="" | "full"=="full" {
            - exit
            ----------------------------------------------------- end st_is ---
          - if "`type'"=="" | "`type'"=="hr" {
          = if "hr"=="" | "hr"=="hr" {
          - if "`type'"=="" {
          = if "hr"=="" {
            di in gr "(option {bf:hr} assumed; predicted hazard ratio)"
            }
          - tempvar xb
          - qui _predict double `xb' if `touse', xb `offset'
          = qui _predict double __00000S if __00000R, xb 
          - gen `vtyp' `varn' = exp(`xb')
          = gen double __000006 = exp(__00000S)
          - label var `varn' "Predicted hazard ratio"
          = label var __000006 "Predicted hazard ratio"
            --------------------------------------------------- begin label ---
            - version 10.0
            - local vv : display "version " string(_caller()) ", missing:"
            - gettoken val : 0
            - if (strpos("`val'", "val") > 0 ) {
            = if (strpos("var", "val") > 0 ) {
              gettoken val 0 : 0
              syntax anything [, nofix]
              if "`fix'" != "" {
              local fix ", nofix"
              }
              gettoken var rest : anything
              while `"`rest'"' != "" {
              gettoken lab rest : rest
              local label "`lab'"
              }
              local vlist : list anything - lab
              if "`lab'" == "." {
              local lab ""
              }
              foreach var of varlist `vlist' {
              `vv' _label `val' `var' `lab' `fix'
              }
              }
            - else {
            - `vv' _label `macval(0)'
            = version 11, missing: _label var __000006 "Predicted hazard ratio"
            - }
            ----------------------------------------------------- end label ---
          - exit
          ----------------------------------------------------- end stcox_p ---
        - }
        ------------------------------------------------------- end predict ---
      - qui replace `Sadj'=`S'^`Sadj' if `touse'
      = qui replace __000006=__000005^__000006 if __00000F
      - if "`scale'" == "hazard" {
      = if "hazard" == "hazard" {
      - qui gen double `Z' = ln(-ln(`Sadj')) `addoff' if `touse'
      = qui gen double __000000 = ln(-ln(__000006))  if __00000F
      - }
      - else if "`scale'" == "odds" {
      = else if "hazard" == "odds" {
        qui gen double `Z' = ln((1-`Sadj')/`Sadj') `addoff' if `touse'
        }
      - else if "`scale'" == "normal" {
      = else if "hazard" == "normal" {
        qui gen double `Z' = invnormal((`nobs'*(1-`Sadj')-3/8)/(`nobs'+1/4)) `a
> ddoff' if `touse'
        }
      - else if "`scale'" == "log" {
      = else if "hazard" == "log" {
        qui gen double `Z' = ln(1-`Sadj') `addoff' if `touse'
        }
      - else if "`scale'" == "theta" {
      = else if "hazard" == "theta" {
        qui gen double `Z' = ln((`Sadj'^(-`inittheta') - 1)/(`inittheta')) `add
> off' if `touse'
        }
      - qui regress `Z' `varlist' `rcsterms' if `touse' & _d == 1 , `constant'
      = qui regress __000000 udca male age_tv o.any_high_risk_condition eth_bin
>  imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smok
> ing1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _r
> cs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_a
> ge_tv1 if __00000F & _d == 1 , 
        ----------------------------------------------------- begin regress ---
        - version 9, missing
        - local version : di "version " string(_caller()) ", missing :"
        - if replay() {
          if _by() {
          error 190
          }
          `version' Display `0'
          exit
          }
        - syntax [anything] [if] [in] [aw fw iw pw] [, VCE(passthru) Robust CLu
> ster(passthru) HC2 HC3 beta EForm(passthru) noHEader noTABle plus * ]
        - local diopts0 `beta' `eform' `header' `table' `plus'
        = local diopts0     
        - if _by() {
          local BY `"by `_byvars'`_byrc0':"'
          }
        - if `:length local vce' {
        = if 0 {
          `version' `BY' _vce_parserun regress, mark(CLuster) eq(NOConstant) : 
> `0'
          if "`s(exit)'" != "" {
          ereturn local cmdline `"regress `0'"'
          exit
          }
          _vce_parse, argopt(CLuster) opt(OLS Robust HC2 HC3) old : [`weight'`e
> xp'], `vce' `robust' `cluster'
          if "`r(cluster)'" != "" {
          local cluster cluster(`r(cluster)')
          }
          else if "`r(vce)'" != "ols" {
          local robust = "`r(vce)'"
          }
          local vce = cond("`r(vce)'" != "", "`r(vce)'", "ols")
          if "`hc2'`hc3'" != "" {
          if !inlist("`vce'", "ols", "`robust'", "`hc2'`hc3'") {
          opts_exclusive "vce(`vce') `hc2' `hc3'"
          }
          local vce `hc2' `hc3'
          local options `options' `vce'
          }
          }
        - else if "`cluster'" != "" {
        = else if "" != "" {
          local vce cluster
          }
        - else if "`weight'" == "pweight" | "`robust'" != "" {
        = else if "" == "pweight" | "" != "" {
          local vce robust
          }
        - else if "`hc2'`hc3'" != "" {
        = else if "" != "" {
          local vce `hc2' `hc3'
          local options `options' `vce'
          }
        - else local vce ols
        - _get_diopts diopts options, `options'
        = _get_diopts diopts options, 
          ----------------------------------------------- begin _get_diopts ---
          - version 11
          - syntax namelist(max=2) [, *]
          - gettoken name1 namelist : namelist
          - gettoken name2 namelist : namelist
          - GetDiopts diopts options, `options'
          = GetDiopts diopts options, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 2 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local diopts                         
            - if `K' == 2 {
            = if 2 == 2 {
            - c_local `c_opts' `"`options'"'
            = c_local  options `""'
            - }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - c_local `name1' `"`diopts'"'
          = c_local diopts `""'
          - local snames : s(macros)
          - foreach sname of local snames {
          - local S_`sname' = s(`sname')
          = local S_level = s(level)
          - }
          - local S_`sname' = s(`sname')
          = local S_rest = s(rest)
          - }
          - local S_`sname' = s(`sname')
          = local S_varn = s(varn)
          - }
          - local S_`sname' = s(`sname')
          = local S_typ = s(typ)
          - }
          - local S_`sname' = s(`sname')
          = local S_done = s(done)
          - }
          - sreturn clear
          - GetDiopts DEFAULT
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 1 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DEFAULT                         
            - if `K' == 2 {
            = if 1 == 2 {
              c_local `c_opts' `"`options'"'
              }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - if `"`name2'"' == "" {
          = if `"options"' == "" {
            GetDiopts DUPS, `options'
            }
          - else {
          - GetDiopts DUPS options, `options'
          = GetDiopts DUPS options, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 2 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DUPS                         
            - if `K' == 2 {
            = if 2 == 2 {
            - c_local `c_opts' `"`options'"'
            = c_local  options `""'
            - }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - c_local `name2' `"`options'"'
          = c_local options `""'
          - }
          - local DUPS : list DUPS - DEFAULT
          - gettoken DUPS : DUPS
          - if `"`DUPS'"' != "" {
          = if `""' != "" {
            if (strpos(`"`DUPS'"', "(")) {
            gettoken DUPS : DUPS, parse("(")
            local DUPS `"`DUPS'()"'
            }
            di as err "duplicate {bf:`DUPS'} option not allowed"
            exit 198
            }
          - sreturn clear
          - foreach sname of local snames {
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local level = `"95"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local rest = `"if __00000F, hr"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local varn = `"__000006"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local typ = `"double"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local done = `"0"'
          - }
          ------------------------------------------------- end _get_diopts ---
        - if _by() {
          `version' `BY' BYREG `anything' `if' `in' [`weight'`exp'], `options' 
> `diopts0' `diopts' `robust' `cluster'
          }
        - else {
        - `version' _regress `anything' `if' `in' [`weight'`exp'], `diopts0' `d
> iopts' `options' `robust' `cluster'
        = version 11.1, missing : _regress __000000 udca male age_tv o.any_high
> _risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 b
> mi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_fir
> st liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _
> rcs_liver_trans1 _rcs_age_tv1 if __00000F & _d == 1   [],     
          ------------------------------------------ begin _ereturn_display ---
          - version 11
          - if "`e(b)'" == "" & "`e(V)'" == "" {
          = if "matrix" == "" & "matrix" == "" {
            exit
            }
          - if "`e(cmd)'" == "regress" {
          = if "regress" == "regress" {
          - local ALTOPT Beta
          - }
          - syntax [, eform(passthru) First neq(integer -1) PLus `ALTOPT' *]
          = syntax [, eform(passthru) First neq(integer -1) PLus Beta *]
          - _get_mcompare, `options'
          = _get_mcompare, level(95.00) fvwrap(1)
            ------------------------------------------- begin _get_mcompare ---
            - version 11
            - local cmd `"`e(cmd)'"'
            = local cmd `"regress"'
            - syntax [name(name=caller)] [, *]
            - local is_pwc = inlist("pwcompare", "`cmd'", "`caller'") | inlist(
> "pwmean", "`cmd'", "`caller'")
            = local is_pwc = inlist("pwcompare", "regress", "") | inlist("pwmea
> n", "regress", "")
            - local is_marg = inlist("margins", "`cmd'", "`e(cmd2)'", "`caller'
> ")
            = local is_marg = inlist("margins", "regress", "", "")
            - local OPTIONS NOADJust BONferroni DUNCan DUNNett SCHeffe SIDak SN
> K TUKey ADJustall
            - if `is_pwc' {
            = if 0 {
              syntax [name] [, `OPTIONS' MCOMPare(string) *]
              }
            - else {
            - syntax [name] [, MCOMPare(string) *]
            - local suboption mcompare()
            - }
            - sreturn clear
            - sreturn local options `"`options'"'
            = sreturn local options `"level(95.00) fvwrap(1)"'
            - if `is_pwc' {
            = if 0 {
              local METHOD `noadjust' `bonferroni' `duncan' `dunnett' `scheffe'
>  `sidak' `snk' `tukey'
              local METHOD : list uniq METHOD
              opts_exclusive "`METHOD'"
              local ALL `adjustall'
              opts_exclusive "`noadjust' `ALL'"
              }
            - local 0 `", `mcompare'"'
            = local 0 `", "'
            - capture syntax [, `OPTIONS']
            = capture syntax [, NOADJust BONferroni DUNCan DUNNett SCHeffe SIDa
> k SNK TUKey ADJustall]
            - if c(rc) {
              di as err "invalid mcompare() option;"
              di as err "method '`mcompare'' not allowed"
              error 198
              }
            - local METHOD `METHOD' `noadjust' `bonferroni' `duncan' `dunnett' 
> `scheffe' `sidak' `snk' `tukey'
            = local METHOD         
            - local METHOD : list uniq METHOD
            - local ALL `ALL' `adjustall'
            = local ALL  
            - local ALL : list uniq ALL
            - opts_exclusive "`METHOD'" `suboption'
            = opts_exclusive "" mcompare()
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts 
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - if "`METHOD'" == "" {
            = if "" == "" {
            - if "`ALL'" != "" {
            = if "" != "" {
              di as err "multiple comparison method required with the adjustall
>  option"
              exit 198
              }
            - local METHOD noadjust
            - local noadjust noadjust
            - }
            - opts_exclusive "`ALL' `noadjust'" `suboption'
            = opts_exclusive " noadjust" mcompare()
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  noadjust
              - local n 0
              - while `"`opts'"' != "" {
              = while `"noadjust"' != "" {
              - local ++n
              - gettoken item`n' opts : opts, bind
              = gettoken item1 opts : opts, bind
              - }
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 1 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local EXCLUDE duncan dunnett snk tukey
            - if `:list METHOD in EXCLUDE' {
            = if 0 {
              if `is_pwc' {
              local opt : copy local METHOD
              }
              else {
              local opt "mcompare(`METHOD')"
              }
              local cmdlist anova manova regress mvreg pwmean
              if "`cmd'" == "pwcompare" {
              local cmd `"`e(cmd_est)'"'
              }
              if `is_marg' {
              local cmd margins
              }
              if !`:list cmd in cmdlist' | !`is_pwc' {
              di as err `"method `opt' is not allowed with results from `cmd'"'
              exit 322
              }
              if `"`e(prefix)'"' == "svy" {
              di as err `"method `opt' is not allowed with results using the sv
> y prefix"'
              exit 322
              }
              local vce `"`e(vce)'"'
              if !inlist("`vce'", "", "ols") {
              di as err `"method `opt' is not allowed with results using vce(`v
> ce')"'
              exit 322
              }
              }
            - local EXCLUDE duncan dunnett snk tukey scheffe
            - if `:list METHOD in EXCLUDE' {
            = if 0 {
              if "`ALL'" != "" {
              di as err `"option adjustall is not allowed with method `METHOD'"
> '
              exit 198
              }
              }
            - sreturn local method `"`METHOD'"'
            = sreturn local method `"noadjust"'
            - sreturn local adjustall `"`ALL'"'
            = sreturn local adjustall `""'
            --------------------------------------------- end _get_mcompare ---
          - if "`s(method)'" != "" {
          = if "noadjust" != "" {
          - loca mcopt mcompare(`s(method)' `s(adjustall)')
          = loca mcopt mcompare(noadjust )
          - }
          - _get_diopts diopts, `s(options)'
          = _get_diopts diopts, level(95.00) fvwrap(1)
            --------------------------------------------- begin _get_diopts ---
            - version 11
            - syntax namelist(max=2) [, *]
            - gettoken name1 namelist : namelist
            - gettoken name2 namelist : namelist
            - GetDiopts diopts options, `options'
            = GetDiopts diopts options, level(95.00) fvwrap(1)
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "fvwrap(1)" != "" {
              - FVWrap, `fvwrap'
              = FVWrap, fvwrap(1)
                ---------------------------------- begin _get_diopts.FVWrap ---
                - syntax, fvwrap(integer)
                - if `fvwrap' < 0 {
                = if 1 < 0 {
                  di as err "{p}invalid option {bf:fvwrap(`fvwrap')}; " "nonneg
> ative integer required{p_end}"
                  exit 198
                  }
                ------------------------------------ end _get_diopts.FVWrap ---
              - }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local diopts                  fvwrap(1)       
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name1' `"`diopts'"'
            = c_local diopts `"fvwrap(1)"'
            - local snames : s(macros)
            - foreach sname of local snames {
            - local S_`sname' = s(`sname')
            = local S_level = s(level)
            - }
            - local S_`sname' = s(`sname')
            = local S_method = s(method)
            - }
            - local S_`sname' = s(`sname')
            = local S_options = s(options)
            - }
            - sreturn clear
            - GetDiopts DEFAULT
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DEFAULT                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - if `"`name2'"' == "" {
            = if `""' == "" {
            - GetDiopts DUPS, `options'
            = GetDiopts DUPS, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DUPS                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - }
            - else {
              GetDiopts DUPS options, `options'
              c_local `name2' `"`options'"'
              }
            - local DUPS : list DUPS - DEFAULT
            - gettoken DUPS : DUPS
            - if `"`DUPS'"' != "" {
            = if `""' != "" {
              if (strpos(`"`DUPS'"', "(")) {
              gettoken DUPS : DUPS, parse("(")
              local DUPS `"`DUPS'()"'
              }
              di as err "duplicate {bf:`DUPS'} option not allowed"
              exit 198
              }
            - sreturn clear
            - foreach sname of local snames {
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local level = `"95"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local method = `"noadjust"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local options = `"level(95.00) fvwrap(1)"'
            - }
            ----------------------------------------------- end _get_diopts ---
          - if !`:length local first' {
          = if !0 {
          - local first showeqns
          - }
          - if `neq' < 1 {
          = if -1 < 1 {
          - _ms_eq_info
          - local neqopt neq(`r(k_eq)')
          = local neqopt neq(1)
          - }
          - else {
            local neqopt neq(`neq')
            }
          - _coef_table, nodiparm nocnsreport noeqcheck eformall `eform' `first
> ' `neqopt' `plus' `beta' `mcopt' `diopts'
          = _coef_table, nodiparm nocnsreport noeqcheck eformall  showeqns neq(
> 1)   mcompare(noadjust ) fvwrap(1)
            --------------------------------------------- begin _coef_table ---
            - version 11
            - local vv : di "version " string(max(11,_caller())) ", missing:"
            - if (!c(noisily) & c(coeftabresults) == "off") {
              exit
              }
            - _check_eclass
            - syntax [, BMATrix(passthru) VMATrix(passthru) * ]
            - if "`e(b)'" == "" & "`e(V)'" == "" & "`bmatrix'`vmatrix'"=="" {
            = if "matrix" == "" & "matrix" == "" & ""=="" {
              exit
              }
            - local mc_cmds contrast margins pwcompare pwmean
            - local cmd "`e(cmd)'"
            = local cmd "regress"
            - local keepmc : list cmd in mc_cmds
            - if inlist("`cmd'", "pwcompare", "pwmean") {
            = if inlist("regress", "pwcompare", "pwmean") {
              local groups GROUPS
              }
            - if "`cmd'" == "regress" {
            = if "regress" == "regress" {
            - local beta Beta
            - }
            - if "`cmd'" == "gsem" {
            = if "regress" == "gsem" {
              local fvignore fvignore(int 0)
              local flignore flignore
              }
            - if "`cmd'" == "sem" {
            = if "regress" == "sem" {
              local standardized STANDARDIZED
              local showginvariant SHOWGINVariant
              local nolabel NOLABel LABel NOFVLABel FVLABel
              local nofootnote NOFOOTnote
              local wrap wrap(numlist max=1) fvwrap(passthru)
              }
            - if "`e(mi)'"=="mi" {
            = if ""=="mi" {
              local dftable DFTable
              local dfonly DFONLY
              local noclustreport NOCLUSTReport
              local pisematrix PISEMATrix(string)
              }
            - syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(strin
> g) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) ROWCF
> ormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(string) M
> VMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCLASSM
> ATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string asis
> ) `beta' `standardized' NOCI NOPValues `dftable' `dfonly' dfci DFPValues dfmi
> ssing `groups' COEFLegend selegend `fvignore' `flignore' `showginvariant' `no
> label' `nofootnote' `wrap' sort `pisematrix' depname(string) COEFTitle(string
> ) coeftitle2(string) ptitle(string) cititle(string) NOMCLEGend noCNSReport FU
> LLCNSReport `noclustreport' cformat(passthru) sformat(passthru) pformat(passt
> hru) NOFirst First SHOWEQns neq(integer -1) NODIPARM NOTEST SEParator(integer
>  0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(string) eqselect(string
> ) * ]
            = syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(strin
> g) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) ROWCF
> ormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(string) M
> VMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCLASSM
> ATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string asis
> ) Beta  NOCI NOPValues   dfci DFPValues dfmissing  COEFLegend selegend       
> sort  depname(string) COEFTitle(string) coeftitle2(string) ptitle(string) cit
> itle(string) NOMCLEGend noCNSReport FULLCNSReport  cformat(passthru) sformat(
> passthru) pformat(passthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM N
> OTEST SEParator(integer 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(
> string) eqselect(string) * ]
            - if "`wrap'" != "" {
            = if "" != "" {
              opts_exclusive `"wrap(`wrap') `fvwrap'"'
              local fvwrap fvwrap(`wrap')
              }
            - if "`nolabel'`label'" != "" {
            = if "" != "" {
              opts_exclusive "`nolabel' `label'"
              opts_exclusive "`nofvlabel' `fvlabel'"
              opts_exclusive "`nolabel' `fvlabel'"
              opts_exclusive "`nofvlabel' `label'"
              if "`nolabel'" != "" {
              local fvlabel nofvlabel
              }
              else {
              local fvlabel fvlabel
              }
              }
            - else local fvlabel `nofvlabel' `fvlabel'
            = else local fvlabel  
            - local type `coeflegend' `selegend'
            = local type  
            - opts_exclusive "`type' `standardized'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - if (`"`rowmatrix'"'=="" & "`norowci'"!="") {
            = if (`""'=="" & ""!="") {
              di as err "{bf:norowci} requires {bf:rowmatrix()}"
              exit 198
              }
            - if ("`dftable'"!="" & "`norowci'"!="") {
            = if (""!="" & ""!="") {
              di as err "{bf:norowci} is not allowed with {bf:`dftable'}"
              exit 198
              }
            - if ("`dfonly'"!="" & "`norowci'"!="") {
            = if (""!="" & ""!="") {
              di as err "{bf:norowci} is not allowed with {bf:`dfonly'}"
              exit 198
              }
            - if ("`noci'"!="" & "`norowci'"!="") {
            = if (""!="" & ""!="") {
              di as err "{bf:norowci} is not allowed with {bf:`noci'}"
              exit 198
              }
            - if "`standardized'" != "" & "`bstdmatrix'" != "" {
            = if "" != "" & "" != "" {
              local beta beta
              local standardized
              }
            - if `:length local type' == 0 {
            = if 0 == 0 {
            - local type `beta' `noci' `nopvalues' `dftable' `dfonly' `groups' 
> `dfci' `dfpvalues'
            = local type        
            - }
            - opts_exclusive "`type'"
            = opts_exclusive ""
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts 
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`first' `nofirst'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`first' `showeqns'"
            = opts_exclusive " showeqns"
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  showeqns
              - local n 0
              - while `"`opts'"' != "" {
              = while `"showeqns"' != "" {
              - local ++n
              - gettoken item`n' opts : opts, bind
              = gettoken item1 opts : opts, bind
              - }
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 1 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local cnsreport `cnsreport' `fullcnsreport'
            = local cnsreport nocnsreport 
            - opts_exclusive "`cnsreport'"
            = opts_exclusive "nocnsreport"
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts nocnsreport
              - local n 0
              - while `"`opts'"' != "" {
              = while `"nocnsreport"' != "" {
              - local ++n
              - gettoken item`n' opts : opts, bind
              = gettoken item1 opts : opts, bind
              - }
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 1 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - if `"`showeqns'"' != "" {
            = if `"showeqns"' != "" {
            - local nofirst nofirst
            - }
            - if `"`ematrix'`noeqcheck'"' == "" {
            = if `"noeqcheck"' == "" {
              if `"`e(error)'"' == "matrix" {
              local ematrix e(error)
              }
              }
            - _get_mcompare, `options'
            = _get_mcompare, mcompare(noadjust ) fvwrap(1)
              ----------------------------------------- begin _get_mcompare ---
              - version 11
              - local cmd `"`e(cmd)'"'
              = local cmd `"regress"'
              - syntax [name(name=caller)] [, *]
              - local is_pwc = inlist("pwcompare", "`cmd'", "`caller'") | inlis
> t("pwmean", "`cmd'", "`caller'")
              = local is_pwc = inlist("pwcompare", "regress", "") | inlist("pwm
> ean", "regress", "")
              - local is_marg = inlist("margins", "`cmd'", "`e(cmd2)'", "`calle
> r'")
              = local is_marg = inlist("margins", "regress", "", "")
              - local OPTIONS NOADJust BONferroni DUNCan DUNNett SCHeffe SIDak 
> SNK TUKey ADJustall
              - if `is_pwc' {
              = if 0 {
                syntax [name] [, `OPTIONS' MCOMPare(string) *]
                }
              - else {
              - syntax [name] [, MCOMPare(string) *]
              - local suboption mcompare()
              - }
              - sreturn clear
              - sreturn local options `"`options'"'
              = sreturn local options `"fvwrap(1)"'
              - if `is_pwc' {
              = if 0 {
                local METHOD `noadjust' `bonferroni' `duncan' `dunnett' `scheff
> e' `sidak' `snk' `tukey'
                local METHOD : list uniq METHOD
                opts_exclusive "`METHOD'"
                local ALL `adjustall'
                opts_exclusive "`noadjust' `ALL'"
                }
              - local 0 `", `mcompare'"'
              = local 0 `", noadjust"'
              - capture syntax [, `OPTIONS']
              = capture syntax [, NOADJust BONferroni DUNCan DUNNett SCHeffe SI
> Dak SNK TUKey ADJustall]
              - if c(rc) {
                di as err "invalid mcompare() option;"
                di as err "method '`mcompare'' not allowed"
                error 198
                }
              - local METHOD `METHOD' `noadjust' `bonferroni' `duncan' `dunnett
> ' `scheffe' `sidak' `snk' `tukey'
              = local METHOD  noadjust       
              - local METHOD : list uniq METHOD
              - local ALL `ALL' `adjustall'
              = local ALL  
              - local ALL : list uniq ALL
              - opts_exclusive "`METHOD'" `suboption'
              = opts_exclusive "noadjust" mcompare()
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts noadjust
                - local n 0
                - while `"`opts'"' != "" {
                = while `"noadjust"' != "" {
                - local ++n
                - gettoken item`n' opts : opts, bind
                = gettoken item1 opts : opts, bind
                - }
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 1 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - if "`METHOD'" == "" {
              = if "noadjust" == "" {
                if "`ALL'" != "" {
                di as err "multiple comparison method required with the adjusta
> ll option"
                exit 198
                }
                local METHOD noadjust
                local noadjust noadjust
                }
              - opts_exclusive "`ALL' `noadjust'" `suboption'
              = opts_exclusive " noadjust" mcompare()
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  noadjust
                - local n 0
                - while `"`opts'"' != "" {
                = while `"noadjust"' != "" {
                - local ++n
                - gettoken item`n' opts : opts, bind
                = gettoken item1 opts : opts, bind
                - }
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 1 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local EXCLUDE duncan dunnett snk tukey
              - if `:list METHOD in EXCLUDE' {
              = if 0 {
                if `is_pwc' {
                local opt : copy local METHOD
                }
                else {
                local opt "mcompare(`METHOD')"
                }
                local cmdlist anova manova regress mvreg pwmean
                if "`cmd'" == "pwcompare" {
                local cmd `"`e(cmd_est)'"'
                }
                if `is_marg' {
                local cmd margins
                }
                if !`:list cmd in cmdlist' | !`is_pwc' {
                di as err `"method `opt' is not allowed with results from `cmd'
> "'
                exit 322
                }
                if `"`e(prefix)'"' == "svy" {
                di as err `"method `opt' is not allowed with results using the 
> svy prefix"'
                exit 322
                }
                local vce `"`e(vce)'"'
                if !inlist("`vce'", "", "ols") {
                di as err `"method `opt' is not allowed with results using vce(
> `vce')"'
                exit 322
                }
                }
              - local EXCLUDE duncan dunnett snk tukey scheffe
              - if `:list METHOD in EXCLUDE' {
              = if 0 {
                if "`ALL'" != "" {
                di as err `"option adjustall is not allowed with method `METHOD
> '"'
                exit 198
                }
                }
              - sreturn local method `"`METHOD'"'
              = sreturn local method `"noadjust"'
              - sreturn local adjustall `"`ALL'"'
              = sreturn local adjustall `""'
              ------------------------------------------- end _get_mcompare ---
            - local method `"`s(method)'"'
            = local method `"noadjust"'
            - local all `"`s(adjustall)'"'
            = local all `""'
            - local options `"`s(options)'"'
            = local options `"fvwrap(1)"'
            - if "`method'" != "noadjust" {
            = if "noadjust" != "noadjust" {
              local keepmc 1
              }
            - opts_exclusive "`all' `groups'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - if "`method'" == "dunnett" {
            = if "noadjust" == "dunnett" {
              opts_exclusive "`method' `groups'"
              }
            - _get_diopts diopts options, `options' `fvwrap' `fvlabel'
            = _get_diopts diopts options, fvwrap(1)  
              ------------------------------------------- begin _get_diopts ---
              - version 11
              - syntax namelist(max=2) [, *]
              - gettoken name1 namelist : namelist
              - gettoken name2 namelist : namelist
              - GetDiopts diopts options, `options'
              = GetDiopts diopts options, fvwrap(1)
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 2 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "fvwrap(1)" != "" {
                - FVWrap, `fvwrap'
                = FVWrap, fvwrap(1)
                  -------------------------------- begin _get_diopts.FVWrap ---
                  - syntax, fvwrap(integer)
                  - if `fvwrap' < 0 {
                  = if 1 < 0 {
                    di as err "{p}invalid option {bf:fvwrap(`fvwrap')}; " "nonn
> egative integer required{p_end}"
                    exit 198
                    }
                  ---------------------------------- end _get_diopts.FVWrap ---
                - }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local diopts                  fvwrap(1)       
                - if `K' == 2 {
                = if 2 == 2 {
                - c_local `c_opts' `"`options'"'
                = c_local  options `""'
                - }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - c_local `name1' `"`diopts'"'
              = c_local diopts `"fvwrap(1)"'
              - local snames : s(macros)
              - foreach sname of local snames {
              - local S_`sname' = s(`sname')
              = local S_level = s(level)
              - }
              - local S_`sname' = s(`sname')
              = local S_method = s(method)
              - }
              - local S_`sname' = s(`sname')
              = local S_options = s(options)
              - }
              - sreturn clear
              - GetDiopts DEFAULT
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 1 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "" != "" {
                  FVWrap, `fvwrap'
                  }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local DEFAULT                         
                - if `K' == 2 {
                = if 1 == 2 {
                  c_local `c_opts' `"`options'"'
                  }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - if `"`name2'"' == "" {
              = if `"options"' == "" {
                GetDiopts DUPS, `options'
                }
              - else {
              - GetDiopts DUPS options, `options'
              = GetDiopts DUPS options, 
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 2 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "" != "" {
                  FVWrap, `fvwrap'
                  }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local DUPS                         
                - if `K' == 2 {
                = if 2 == 2 {
                - c_local `c_opts' `"`options'"'
                = c_local  options `""'
                - }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - c_local `name2' `"`options'"'
              = c_local options `""'
              - }
              - local DUPS : list DUPS - DEFAULT
              - gettoken DUPS : DUPS
              - if `"`DUPS'"' != "" {
              = if `""' != "" {
                if (strpos(`"`DUPS'"', "(")) {
                gettoken DUPS : DUPS, parse("(")
                local DUPS `"`DUPS'()"'
                }
                di as err "duplicate {bf:`DUPS'} option not allowed"
                exit 198
                }
              - sreturn clear
              - foreach sname of local snames {
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local level = `"95"'
              - }
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local method = `"noadjust"'
              - }
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local options = `"fvwrap(1)"'
              - }
              --------------------------------------------- end _get_diopts ---
            - local legend coeflegend selegend
            - local legend : list legend & diopts
            - local diopts : list diopts - legend
            - local lstretch lstretch nolstretch
            - local lstretch : list lstretch & diopts
            - local diopts : list diopts - lstretch
            - local markdown markdown
            - local markdown : list markdown & diopts
            - local diopts : list diopts - markdown
            - _get_diopts ignore, `diopts' `cformat' `sformat' `pformat'
            = _get_diopts ignore, fvwrap(1)   
              ------------------------------------------- begin _get_diopts ---
              - version 11
              - syntax namelist(max=2) [, *]
              - gettoken name1 namelist : namelist
              - gettoken name2 namelist : namelist
              - GetDiopts diopts options, `options'
              = GetDiopts diopts options, fvwrap(1)
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 2 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "fvwrap(1)" != "" {
                - FVWrap, `fvwrap'
                = FVWrap, fvwrap(1)
                  -------------------------------- begin _get_diopts.FVWrap ---
                  - syntax, fvwrap(integer)
                  - if `fvwrap' < 0 {
                  = if 1 < 0 {
                    di as err "{p}invalid option {bf:fvwrap(`fvwrap')}; " "nonn
> egative integer required{p_end}"
                    exit 198
                    }
                  ---------------------------------- end _get_diopts.FVWrap ---
                - }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local diopts                  fvwrap(1)       
                - if `K' == 2 {
                = if 2 == 2 {
                - c_local `c_opts' `"`options'"'
                = c_local  options `""'
                - }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - c_local `name1' `"`diopts'"'
              = c_local ignore `"fvwrap(1)"'
              - local snames : s(macros)
              - foreach sname of local snames {
              - local S_`sname' = s(`sname')
              = local S_level = s(level)
              - }
              - local S_`sname' = s(`sname')
              = local S_options = s(options)
              - }
              - local S_`sname' = s(`sname')
              = local S_method = s(method)
              - }
              - sreturn clear
              - GetDiopts DEFAULT
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 1 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "" != "" {
                  FVWrap, `fvwrap'
                  }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local DEFAULT                         
                - if `K' == 2 {
                = if 1 == 2 {
                  c_local `c_opts' `"`options'"'
                  }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - if `"`name2'"' == "" {
              = if `""' == "" {
              - GetDiopts DUPS, `options'
              = GetDiopts DUPS, 
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 1 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "" != "" {
                  FVWrap, `fvwrap'
                  }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local DUPS                         
                - if `K' == 2 {
                = if 1 == 2 {
                  c_local `c_opts' `"`options'"'
                  }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - }
              - else {
                GetDiopts DUPS options, `options'
                c_local `name2' `"`options'"'
                }
              - local DUPS : list DUPS - DEFAULT
              - gettoken DUPS : DUPS
              - if `"`DUPS'"' != "" {
              = if `""' != "" {
                if (strpos(`"`DUPS'"', "(")) {
                gettoken DUPS : DUPS, parse("(")
                local DUPS `"`DUPS'()"'
                }
                di as err "duplicate {bf:`DUPS'} option not allowed"
                exit 198
                }
              - sreturn clear
              - foreach sname of local snames {
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local level = `"95"'
              - }
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local options = `"fvwrap(1)"'
              - }
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local method = `"noadjust"'
              - }
              --------------------------------------------- end _get_diopts ---
            - local cformat `"`s(cformat)'"'
            = local cformat `""'
            - local sformat `"`s(sformat)'"'
            = local sformat `""'
            - local pformat `"`s(pformat)'"'
            = local pformat `""'
            - _get_eformopts , eformopts(`options') allowed(__all__) soptions
            = _get_eformopts , eformopts() allowed(__all__) soptions
              ---------------------------------------- begin _get_eformopts ---
              - version 8.0
              - syntax [, eformopts(string asis) soptions ALLOWed(string) ]
              - local 0 , `eformopts'
              = local 0 , 
              - local EFALL NOHR hr NOSHR shr or IRr RRr tr TRatio
              - if "`soptions'" != "" {
              = if "soptions" != "" {
              - syntax [, EForm1(passthru) EForm `EFALL' * ]
              = syntax [, EForm1(passthru) EForm NOHR hr NOSHR shr or IRr RRr t
> r TRatio * ]
              - local opts `"`options'"'
              = local opts `""'
              - local 0 , `eform1' `eform' `nohr' `hr' `noshr' `shr' `or' `irr'
>  `rrr' `tr' `tratio'
              = local 0 ,           
              - }
              - if "`allowed'" == "__all__" {
              = if "__all__" == "__all__" {
              - local allowed `EFALL'
              = local allowed NOHR hr NOSHR shr or IRr RRr tr TRatio
              - }
              - foreach ef of local allowed {
              - capture confirm name `ef'
              = capture confirm name NOHR
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts  nohr
              - }
              - capture confirm name `ef'
              = capture confirm name hr
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr
              - }
              - capture confirm name `ef'
              = capture confirm name NOSHR
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr noshr
              - }
              - capture confirm name `ef'
              = capture confirm name shr
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr noshr shr
              - }
              - capture confirm name `ef'
              = capture confirm name or
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr noshr shr or
              - }
              - capture confirm name `ef'
              = capture confirm name IRr
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr noshr shr or irr
              - }
              - capture confirm name `ef'
              = capture confirm name RRr
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr noshr shr or irr rrr
              - }
              - capture confirm name `ef'
              = capture confirm name tr
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr noshr shr or irr rrr tr
              - }
              - capture confirm name `ef'
              = capture confirm name TRatio
              - if _rc {
                di as err "`ef' is not a valid name"
                exit 198
                }
              - local efopts `efopts' `=lower("`ef'")'
              = local efopts nohr hr noshr shr or irr rrr tr tratio
              - }
              - local efopts : list uniq efopts
              - syntax [, EForm1(string) EForm `allowed' ]
              = syntax [, EForm1(string) EForm NOHR hr NOSHR shr or IRr RRr tr 
> TRatio ]
              - foreach ef of local efopts {
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - local eform `eform' ``ef''
              = local eform  
              - }
              - if `"`eform1'"'=="Odds Ratio" local eform_cons_ti = "Odds"
              = if `""'=="Odds Ratio" local eform_cons_ti = "Odds"
              - else if `"`eform1'"'=="Haz. Ratio" local eform_cons_ti="Hazard"
              = else if `""'=="Haz. Ratio" local eform_cons_ti="Hazard"
              - else if `"`eform1'"'=="Time Ratio" local eform_cons_ti = "Time"
              = else if `""'=="Time Ratio" local eform_cons_ti = "Time"
              - else if `"`eform1'"'=="IRR" local eform_cons_ti = "Inc. Rate"
              = else if `""'=="IRR" local eform_cons_ti = "Inc. Rate"
              - else if `"`eform1'"'=="Risk Ratio" local eform_cons_ti = "Risk"
              = else if `""'=="Risk Ratio" local eform_cons_ti = "Risk"
              - else if `"`eform1'"'=="Hlth Ratio" local eform_cons_ti="Health"
              = else if `""'=="Hlth Ratio" local eform_cons_ti="Health"
              - local k : list sizeof eform
              - if `k' {
              = if 0 {
                opts_exclusive "`eform'"
                if `:length local eform1' {
                opts_exclusive "eform() `eform'"
                }
                }
              - if `k' {
              = if 0 {
                if ("`eform'"=="eform") local eform1 = "exp(b)"
                else if ("`eform'"=="hr") {
                local eform1 = "Haz. Ratio"
                local eform_cons_ti = "Hazard"
                }
                else if ("`eform'"=="shr") {
                local eform1 = "SHR"
                local eform_cons_ti = "Subhazard"
                }
                else if ("`eform'"=="tr") {
                local eform1 = "Time Ratio"
                local eform_cons_ti = "Time"
                }
                else if ("`eform'"=="tratio") {
                local eform1 = "Time Ratio"
                local eform_cons_ti = "Time"
                }
                else if ("`eform'"=="or") {
                local eform1 = "Odds Ratio"
                if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd)'
> "=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                local eform_cons_ti = "Rel. Risk"
                }
                else {
                local eform_cons_ti = "Odds"
                }
                }
                else if ("`eform'"=="irr") {
                local eform1 = "IRR"
                local eform_cons_ti = "Inc. Rate"
                }
                else if ("`eform'"=="rrr") {
                local eform1 = "RRR"
                local eform_cons_ti = "Rel. Risk"
                }
                else if ("`eform'"!="nohr") & ("`eform'"!="noshr") {
                local eform1 = upper("`eform'")
                }
                }
              - sreturn clear
              - sreturn local options `"`opts'"'
              = sreturn local options `""'
              - sreturn local opt `eform'
              = sreturn local opt 
              - sreturn local str `eform1'
              = sreturn local str 
              - if `"`eform1'"' != "" {
              = if `""' != "" {
                sreturn local eform eform(`"`eform1'"')
                }
              - else sreturn local eform ""
              - sreturn local eform_cons_ti `eform_cons_ti'
              = sreturn local eform_cons_ti 
              ------------------------------------------ end _get_eformopts ---
            - if inlist("`bmatrix'", "", "e(b)") & "`e(k_eform)'" == "0" {
            = if inlist("", "", "e(b)") & "" == "0" {
              local eform
              }
            - else local eform `"`s(str)'"'
            = else local eform `""'
            - local eform_cons_ti `"`s(eform_cons_ti)'"'
            = local eform_cons_ti `""'
            - if ("`e(consonly)'"!="1" | `"`eform_cons_ti'"'=="") {
            = if (""!="1" | `""'=="") {
            - local eformdi `"`s(str)'"'
            = local eformdi `""'
            - }
            - else {
              local eformdi `"`eform_cons_ti'"'
              }
            - local coefttl = cond(`"`eform'"'==`""', `"`coeftitle'"', `"`eform
> di'"')
            = local coefttl = cond(`""'==`""', `""', `""')
            - local options `"`s(options)'"'
            = local options `""'
            - _get_diparmopts, diparmopts(`options') level(`level')
            = _get_diparmopts, diparmopts() level(95)
              --------------------------------------- begin _get_diparmopts ---
              - if _caller() < 8.2 {
                _get_diparmopts_8 `0'
                exit
                }
              - version 9
              - local version : di "version " string(_caller()) ":"
              - syntax [, diparmopts(string asis) EXECute soptions bottom plus 
> SYNTAXonly * ]
              - local goptions `options'
              = local goptions level(95)
              - SpliceGlobals junk , `goptions'
              = SpliceGlobals junk , level(95)
                ----------------------- begin _get_diparmopts.SpliceGlobals ---
                - syntax name(id="macro name" name=c_diparm) [, diparm(string a
> sis) Level(cilevel) dof(passthru) syntaxonly ]
                - if `"`dof'"' == "" & `"`e(df_r)'"' != "" {
                = if `""' == "" & `"36"' != "" {
                - capture confirm integer number `e(df_r)'
                = capture confirm integer number 36
                - if !c(rc) {
                - local gdof dof(`e(df_r)')
                = local gdof dof(36)
                - }
                - capture
                - }
                - else local gdof `"`dof'"'
                = else local gdof `""'
                - local glevel `level'
                = local glevel 95
                - local lopt level(`glevel')
                = local lopt level(95)
                - if (`"`diparm'"' == "") exit
                = if (`""' == "") exit
                ------------------------- end _get_diparmopts.SpliceGlobals ---
              - local 0 `", `diparmopts'"'
              = local 0 `", "'
              - local diparmopts
              - local k 0
              - syntax [, diparm(string asis) * ]
              - while `"`diparm'"' != "" {
              = while `""' != "" {
                local ++k
                local single 1
                local after
                capture _on_colon_parse `diparm'
                if !c(rc) {
                local single 0
                local diparm `"`s(before)'"'
                local after `"`s(after)'"'
                }
                capture
                SpliceGlobals diparm , diparm(`diparm') `syntaxonly' `goptions'
                local diparm`k' `"`diparm'"'
                local diparmopts `"`diparmopts' : `diparm'"'
                if `single' | `"`:list retok after'"' == "" {
                local 0 `", `options'"'
                syntax [, diparm(string asis) * ]
                }
                else {
                local diparm `"`after'"'
                }
                }
              - if `"`soptions'"' == "" {
              = if `""' == "" {
              - syntax [, diparm(string asis) ]
              - }
              - if ("`execute'" == "") {
              = if ("" == "") {
              - sreturn clear
              - sreturn local options `"`options'"'
              = sreturn local options `""'
              - sreturn local diparm `"`diparmopts'"'
              = sreturn local diparm `""'
              - forval i = 1/`k' {
              = forval i = 1/0 {
                sreturn local diparm`i' `"`diparm`i''"'
                }
              - sreturn local k `k'
              = sreturn local k 0
              - exit
              ----------------------------------------- end _get_diparmopts ---
            - local NODIPARM : length local nodiparm
            - if `NODIPARM' {
            = if 8 {
            - local options
            - }
            - local GTOPTS parse(":") bind quotes
            - local k 0
            - if !`NODIPARM' {
            = if !8 {
              if `"`e(diparm)'"' != "" {
              local i 0
              local diparm `"`e(diparm)'"'
              }
              else if `"`e(diparm1)'"' != "" {
              local i 1
              local diparm `"`e(diparm1)'"'
              }
              while `:length local diparm' {
              gettoken diparm rest : diparm, `GTOPTS'
              while `:length local rest' {
              local ++k
              local diparm`k' : copy local diparm
              gettoken COLON rest : rest, `GTOPTS'
              gettoken diparm rest : rest, `GTOPTS'
              }
              local ++k
              local diparm`k' : copy local diparm
              local ++i
              local diparm `"`e(diparm`i')'"'
              }
              }
            - if `:length local options' {
            = if 0 {
              local 0 `", `options'"'
              syntax [, diparm(string asis) *]
              if `k' & `:length local diparm' {
              local ++k
              local diparm`k' __sep__
              }
              while `:length local diparm' {
              gettoken diparm rest : diparm, `GTOPTS'
              while `:length local rest' {
              local ++k
              local diparm`k' : copy local diparm
              gettoken COLON rest : rest, `GTOPTS'
              gettoken diparm rest : rest, `GTOPTS'
              }
              local ++k
              local diparm`k' : copy local diparm
              local 0 `", `options'"'
              syntax [, diparm(string asis) *]
              }
              }
            - if "`markdown'" != "" {
            = if "" != "" {
              local lsize = c(linesize)
              set linesize 255
              }
            - `vv' mata: _coef_table()
            = version 11, missing: mata: _coef_table()
              ------------------------------------------- begin _get_diopts ---
              - version 11
              - syntax namelist(max=2) [, *]
              - gettoken name1 namelist : namelist
              - gettoken name2 namelist : namelist
              - GetDiopts diopts options, `options'
              = GetDiopts diopts options, fvwrap(1)
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 2 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "fvwrap(1)" != "" {
                - FVWrap, `fvwrap'
                = FVWrap, fvwrap(1)
                  -------------------------------- begin _get_diopts.FVWrap ---
                  - syntax, fvwrap(integer)
                  - if `fvwrap' < 0 {
                  = if 1 < 0 {
                    di as err "{p}invalid option {bf:fvwrap(`fvwrap')}; " "nonn
> egative integer required{p_end}"
                    exit 198
                    }
                  ---------------------------------- end _get_diopts.FVWrap ---
                - }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local diopts                  fvwrap(1)       
                - if `K' == 2 {
                = if 2 == 2 {
                - c_local `c_opts' `"`options'"'
                = c_local  options `""'
                - }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - c_local `name1' `"`diopts'"'
              = c_local __00000Q `"fvwrap(1)"'
              - local snames : s(macros)
              - foreach sname of local snames {
              - local S_`sname' = s(`sname')
              = local S_level = s(level)
              - }
              - local S_`sname' = s(`sname')
              = local S_k = s(k)
              - }
              - sreturn clear
              - GetDiopts DEFAULT
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 1 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "" != "" {
                  FVWrap, `fvwrap'
                  }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local DEFAULT                         
                - if `K' == 2 {
                = if 1 == 2 {
                  c_local `c_opts' `"`options'"'
                  }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - if `"`name2'"' == "" {
              = if `""' == "" {
              - GetDiopts DUPS, `options'
              = GetDiopts DUPS, 
                ------------------------------- begin _get_diopts.GetDiopts ---
                - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEle
> vels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcell
> s NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) s
> format(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPO
> N(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV
>  ABBREV
                - syntax namelist(max=2) [, `DIOPTS' *]
                = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElev
> els ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYce
> lls EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cfor
> mat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pass
> thru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passt
> hru) NOABBREV ABBREV *]
                - opts_exclusive "`allbaselevels' `noallbaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`allbaselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`baselevels' `nobaselevels'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`emptycells' `noemptycells'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`fvlabel' `nofvlabel'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`omitted' `noomitted'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`lstretch' `nolstretch'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`cnsreport' `fullcnsreport'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`coeflegend' `selegend'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local K : list sizeof namelist
                - gettoken c_diopts c_opts : namelist
                - opts_exclusive "`coding' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`versus' `compare'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`abbrev' `noabbrev'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local allbaselevels `allbaselevels' `noallbaselevels'
                = local allbaselevels  
                - local baselevels `baselevels' `nobaselevels'
                = local baselevels  
                - local emptycells `emptycells' `noemptycells'
                = local emptycells  
                - local omitted `omitted' `noomitted'
                = local omitted  
                - local lstretch `lstretch' `nolstretch'
                = local lstretch  
                - local fvlabel `fvlabel' `nofvlabel'
                = local fvlabel  
                - local abbrev `abbrev' `noabbrev'
                = local abbrev  
                - if "`allbaselevels'`baselevels'" == "" {
                = if "" == "" {
                - if c(showbaselevels) == "all" {
                  local allbaselevels allbaselevels
                  }
                - else if c(showbaselevels) == "on" {
                  local baselevels baselevels
                  }
                - }
                - if "`emptycells'" == "" {
                = if "" == "" {
                - if c(showemptycells) == "off" {
                  local emptycells noemptycells
                  }
                - }
                - if "`omitted'" == "" {
                = if "" == "" {
                - if c(showomitted) == "off" {
                  local omitted noomitted
                  }
                - }
                - if "`lstretch'" == "" {
                = if "" == "" {
                - if c(lstretch) == "off" {
                  local lstretch nolstretch
                  }
                - }
                - if `:length local cformat' {
                = if 0 {
                  confirm numeric format `cformat'
                  if fmtwidth(`"`cformat'"') > 9 {
                  local cformat "%9.0g"
                  di "{txt}note: invalid cformat(), using default"
                  }
                  sreturn local cformat `"`cformat'"'
                  local cformat `"cformat(`cformat')"'
                  }
                - if `:length local sformat' {
                = if 0 {
                  confirm numeric format `sformat'
                  if fmtwidth(`"`sformat'"') > 8 {
                  local sformat "%8.2f"
                  di "{txt}note: invalid sformat(), using default"
                  }
                  sreturn local sformat `"`sformat'"'
                  local sformat `"sformat(`sformat')"'
                  }
                - if `:length local pformat' {
                = if 0 {
                  confirm numeric format `pformat'
                  if fmtwidth(`"`pformat'"') > 5 {
                  local pformat "%5.3f"
                  di "{txt}note: invalid pformat(), using default"
                  }
                  sreturn local pformat `"`pformat'"'
                  local pformat `"pformat(`pformat')"'
                  }
                - if `K' == 1 & `:length local options' {
                = if 1 == 1 & 0 {
                  syntax namelist(max=2) [, `DIOPTS']
                  }
                - if reldif(`level', c(level)) > 1e-3 {
                = if reldif(95, c(level)) > 1e-3 {
                  local levelopt level(`level')
                  }
                - Wrapon , `fvwrapon'
                = Wrapon , 
                  -------------------------------- begin _get_diopts.Wrapon ---
                  - capture syntax [, WOrd WIdth]
                  - if c(rc) {
                    di as err "invalid fvwrapon() option;"
                    syntax [, WOrd WIdth]
                    exit 198
                    }
                  - opts_exclusive "`word' `width'" fvwrapon
                  = opts_exclusive " " fvwrapon
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local fvwrapon `word' `width'
                  = local fvwrapon  
                  - if `:length local fvwrapon' {
                  = if 0 {
                    c_local fvwrapon fvwrapon(`fvwrapon')
                    }
                  ---------------------------------- end _get_diopts.Wrapon ---
                - if "`fvwrap'" != "" {
                = if "" != "" {
                  FVWrap, `fvwrap'
                  }
                - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `base
> levels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coefle
> gend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `f
> vwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                = c_local DUPS                         
                - if `K' == 2 {
                = if 1 == 2 {
                  c_local `c_opts' `"`options'"'
                  }
                - sreturn local coding `coding'
                = sreturn local coding 
                - sreturn local versus `versus'
                = sreturn local versus 
                - sreturn local compare `compare'
                = sreturn local compare 
                - sreturn local level `level'
                = sreturn local level 95
                --------------------------------- end _get_diopts.GetDiopts ---
              - }
              - else {
                GetDiopts DUPS options, `options'
                c_local `name2' `"`options'"'
                }
              - local DUPS : list DUPS - DEFAULT
              - gettoken DUPS : DUPS
              - if `"`DUPS'"' != "" {
              = if `""' != "" {
                if (strpos(`"`DUPS'"', "(")) {
                gettoken DUPS : DUPS, parse("(")
                local DUPS `"`DUPS'()"'
                }
                di as err "duplicate {bf:`DUPS'} option not allowed"
                exit 198
                }
              - sreturn clear
              - foreach sname of local snames {
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local level = `"95"'
              - }
              - sreturn local `sname' = `"`S_`sname''"'
              = sreturn local k = `"0"'
              - }
              --------------------------------------------- end _get_diopts ---
            - if "`markdown'" != "" {
            = if "" != "" {
              set linesize `lsize'
              }
            - if "`eqselect'" == "" {
            = if "" == "" {
            - if "`eformdi'"!="" & ("`e(cmd)'"!="gnbreg" | "`e(prefix)'"=="svy"
> ) {
            = if ""!="" & ("regress"!="gnbreg" | ""=="svy") {
              local k_eform `e(k_eform)'
              if ("`k_eform'"=="") {
              local k_eform = 1
              }
              local k_eq `e(k_eq)'
              if ("`k_eq'"=="") {
              local k_eq = 1
              }
              if (`k_eform'<`k_eq' & `k_eform') {
              if ("`e(cmd2)'" == "stintreg" | "`e(cmd2)'" == "streg") & ("`e(cm
> d)'" == "weibull" | "`e(cmd)'" == "gompertz") {
              }
              else {
              _eform_multeq_note efnote : `k_eform'
              di as txt "`efnote'"
              }
              }
              }
            - if (`"`eformdi'"'!="" & "`e(noconstant)'"=="0" & `"`eform_cons_ti
> '"'!="" & "`e(consonly)'"!="1") {
            = if (`""'!="" & ""=="0" & `""'!="" & ""!="1") {
              if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd)'"=
> ="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
              local asvar = `"`e(ranvars)'`e(fixvars)'`e(indvars)'"' != ""
              if `"`e(casevars)'"' != "" & `asvar' {
              local note1 "Exponentiated coefficients represent odds ratios for
>  "
              local note2 "alternative-specific variables (first equation) and 
> "
              local note3 "{help j_cmrisk##|_new:relative-risk ratios} "
              local note4 "for case-specific variables."
              di as txt "{p 0 6 2}Note: `note1'`note2'`note3'`note4'{p_end}"
              }
              }
              if "`eform_cons_ti'" == "Inc. Rate" {
              local eform_cons_note "incidence rate"
              }
              else if "`eform_cons_ti'" == "Rel. Risk" {
              local eform_cons_note "relative risk"
              }
              else if "`eform_cons_ti'" == "Health" {
              local eform_cons_note "health (probability of no disease)"
              }
              else {
              local eform_cons_note = strlower(`"`eform_cons_ti'"')
              }
              local eform_cons_note "baseline `eform_cons_note'"
              if ("`e(cmd2)'"=="") {
              local cmd `e(cmd)'
              }
              else {
              local cmd `e(cmd2)'
              }
              local f2 = udsubstr("`cmd'",1,2)
              local is_re = ("`f2'"=="xt" | "`f2'"=="me")
              if `is_re' {
              local extranote " (conditional on zero random effects)"
              }
              di as txt "{p 0 6 2}Note: {res:_cons} estimates " "`eform_cons_no
> te'`extranote'" _c
              if ("`e(cmd)'"=="mlogit" | "`e(cmd)'"=="asclogit" | "`e(cmd)'"=="
> cmclogit" | "`e(cmd)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
              di as txt " for each outcome" _c
              }
              di as txt ".{p_end}"
              }
            - }
            - return add
            - if !`keepmc' {
            = if !0 {
            - return local mcmethod
            - return local mctitle
            - }
            ----------------------------------------------- end _coef_table ---
          -------------------------------------------- end _ereturn_display ---
        - }
        - ereturn local vce `vce'
        = ereturn local vce ols
        - ereturn local marginsok "XB default"
        - ereturn hidden local marginsprop minus
        - ereturn local title "Linear regression"
        - ereturn local cmdline `"regress `0'"'
        = ereturn local cmdline `"regress __000000 udca male age_tv o.any_high_
> risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bm
> i_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_firs
> t liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _r
> cs_liver_trans1 _rcs_age_tv1 if __00000F & _d == 1 , "'
        - _post_vce_rank, checksize
          -------------------------------------------- begin _post_vce_rank ---
          - syntax, [CHecksize]
          - if "`checksize'" != "" {
          = if "checksize" != "" {
          - tempname V
          - capture matrix `V' = e(V)
          = capture matrix __00000Q = e(V)
          - if _rc {
            exit
            }
          - local cols = colsof(`V')
          = local cols = colsof(__00000Q)
          - if `cols' == 0 {
          = if 28 == 0 {
            exit
            }
          - }
          - tempname V Vi rank
          - mat `V' = e(V)
          = mat __00000R = e(V)
          - mat `Vi' = invsym(`V')
          = mat __00000S = invsym(__00000R)
          - sca `rank' = rowsof(`V') - diag0cnt(`Vi')
          = sca __00000T = rowsof(__00000R) - diag0cnt(__00000S)
          - mata:st_numscalar("e(rank)", st_numscalar("`rank'"))
          = mata:st_numscalar("e(rank)", st_numscalar("__00000T"))
          ---------------------------------------------- end _post_vce_rank ---
        ------------------------------------------------------- end regress ---
      - matrix `initmat' = e(b)
      = matrix __00000B = e(b)
      - if "`scale'" == "theta" {
      = if "hazard" == "theta" {
        local thetaeq (ln_theta:)
        if "`constheta'" == "" {
        local lntheta = ln(`inittheta')
        matrix `initmat' = `initmat' , `lntheta'
        }
        else {
        local lntheta = ln(`constheta')
        matrix `initmat' = `initmat' , `lntheta'
        }
        }
      - local ncopy : word count `rcsterms'
      = local ncopy : word count _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_cov
> id_vacc_first1 _rcs_liver_trans1 _rcs_age_tv1
      - local nstart : word count `varlist'
      = local nstart : word count udca male age_tv o.any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5
>  smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
      - local nstart = `nstart' + 1
      = local nstart = 21 + 1
      - local ncopy = `nstart' + `ncopy' -1
      = local ncopy = 22 + 6 -1
      - matrix `initmat' = `initmat', `initmat'[1,`nstart'..`ncopy']
      = matrix __00000B = __00000B, __00000B[1,22..27]
      - }
      - else {
        if inlist("`scale'","hazard","odds","normal","log") {
        if "`rcsbaseoff'" == "" {
        local initrcslist _rcs1
        local initdrcslist _d_rcs1
        constraint free
        constraint `r(free)' [xb][_rcs1] = [dxb][_d_rcs1]
        }
        local initconslist `r(free)'
        if "`tvc'" != "" {
        foreach tvcvar in `tvc' {
        local initrcslist `initrcslist' _rcs_`tvcvar'1
        local initdrcslist `initdrcslist' _d_rcs_`tvcvar'1
        constraint free
        constraint `r(free)' [xb][_rcs_`tvcvar'1] = [dxb][_d_rcs_`tvcvar'1]
        local initconslist `initconslist' `r(free)'
        }
        }
        if `del_entry' == 1 {
        local xb0 `"(xb0: `varlist'"'
        if "`rcsbaseoff'" == "" {
        local xb0 `xb0' _s0_rcs1
        }
        if "`tvc'" != "" {
        foreach tvcvar in `tvc' {
        local xb0 `xb0' _s0_rcs_`tvcvar'1
        }
        }
        local xb0 `xb0', `constant' `offopt')
        if "`constant'" == "" {
        local addconstant _cons
        }
        foreach var in `initrcslist' `varlist' `addconstant' {
        constraint free
        if substr("`var'",1,4) == "_rcs" {
        constraint `r(free)' [xb][`var'] = [xb0][_s0`var']
        }
        else {
        constraint `r(free)' [xb][`var'] = [xb0][`var']
        }
        local initconslist `initconslist' `r(free)'
        }
        }
        if "`verbose'"=="verbose" display as txt "Obtaining Initial Values"
        if "`oldest'" == "" {
        if "`mlmethod'" == "" {
        if inlist("`scale'","hazard","odds","normal") {
        local mlmethod lf2
        }
        else {
        local mlmethod lf
        }
        }
        if inlist("`scale'","normal","theta") & "`rs'" != "" {
        local mlmethod lf
        }
        if "`scale'" == "log" {
        local iml lf
        local addilf _lf
        }
        else {
        local iml lf2
        }
        tempname stpm2_struct
        local userinfo userinfo(`stpm2_struct')
        mata stpm2_setup("`stpm2_struct'")
        qui ml model `iml' stpm2_ml`addilf'_`scale'`rs'() (xb: = `varlist' `ini
> trcslist', `constant' `offopt') `thetaeq' (dxb: `initdrcslist', nocons) `xb0'
>  if `touse' `wt', `mlopts' `userinfo' collinear constraints(`initconslist') s
> earch(norescale) maximize
        display in green "Initial Values Obtained"
        matrix `initmat' = e(b)
        constraint drop `initconslist'
        }
        else {
        if "`mlmethod'" == "" {
        if inlist("`scale'","hazard","odds","normal") {
        local mlmethod e2
        }
        else {
        local mlmethod lf
        }
        }
        if "`scale'" == "normal" & "`rs'" != "" {
        local mlmethod lf
        }
        if "`mlmethod'" == "lf" {
        local addlf _lf
        }
        `captureml' qui ml model `mlmethod' stpm2_ml`addlf'_`scale'`rs' (xb: `b
> hazard' = `varlist' `initrcslist', `constant' `offopt') `thetaeq' (dxb: `init
> drcslist', nocons) `xb0' if `touse' `wt', `mlopts' collinear constraints(`ini
> tconslist') search(norescale) maximize
        display in green "Initial Values Obtained"
        matrix `initmat' = e(b)
        constraint drop `initconslist'
        }
        }
        }
      - local conslist
      - local fplist
      - local dfplist
      - if "`scale'" == "theta" & "`constheta'" !="" {
      = if "hazard" == "theta" & "" !="" {
        constraint free
        constraint `r(free)' [ln_theta][_cons] = `constheta'
        local conslist `conslist' `r(free)'
        }
      - forvalues k = 1/`=cond("`cure'"=="",`df',`df'-1)' {
      = forvalues k = 1/1 {
      - constraint free
      - constraint `r(free)' [xb][_rcs`k'] = [dxb][_d_rcs`k']
      = constraint 1999 [xb][_rcs1] = [dxb][_d_rcs1]
      - local conslist `conslist' `r(free)'
      = local conslist  1999
      - }
      - if "`cure'" != "" {
      = if "" != "" {
        constraint free
        constraint `r(free)' [dxb][_d_rcs`df'] = 0
        local conslist `conslist' `r(free)'
        }
      - if "`cure'" != "" {
      = if "" != "" {
        if "`rcsbaseoff'" == "" {
        constraint free
        constraint `r(free)' [xb][_rcs`df'] = 0
        local conslist `conslist' `r(free)'
        }
        }
      - if "`tvc'" != "" {
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" {
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - forvalues k = 1/`tvc_`tvcvar'_df' {
      = forvalues k = 1/1 {
      - constraint free
      - constraint `r(free)' [xb][_rcs_`tvcvar'`k'] = [dxb][_d_rcs_`tvcvar'`k']
      = constraint 1998 [xb][_rcs_udca1] = [dxb][_d_rcs_udca1]
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998
      - }
      - }
      - forvalues k = 1/`tvc_`tvcvar'_df' {
      = forvalues k = 1/1 {
      - constraint free
      - constraint `r(free)' [xb][_rcs_`tvcvar'`k'] = [dxb][_d_rcs_`tvcvar'`k']
      = constraint 1997 [xb][_rcs_severe_disease1] = [dxb][_d_rcs_severe_diseas
> e1]
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997
      - }
      - }
      - forvalues k = 1/`tvc_`tvcvar'_df' {
      = forvalues k = 1/1 {
      - constraint free
      - constraint `r(free)' [xb][_rcs_`tvcvar'`k'] = [dxb][_d_rcs_`tvcvar'`k']
      = constraint 1996 [xb][_rcs_covid_vacc_first1] = [dxb][_d_rcs_covid_vacc_
> first1]
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996
      - }
      - }
      - forvalues k = 1/`tvc_`tvcvar'_df' {
      = forvalues k = 1/1 {
      - constraint free
      - constraint `r(free)' [xb][_rcs_`tvcvar'`k'] = [dxb][_d_rcs_`tvcvar'`k']
      = constraint 1995 [xb][_rcs_liver_trans1] = [dxb][_d_rcs_liver_trans1]
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995
      - }
      - }
      - forvalues k = 1/`tvc_`tvcvar'_df' {
      = forvalues k = 1/1 {
      - constraint free
      - constraint `r(free)' [xb][_rcs_`tvcvar'`k'] = [dxb][_d_rcs_`tvcvar'`k']
      = constraint 1994 [xb][_rcs_age_tv1] = [dxb][_d_rcs_age_tv1]
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994
      - }
      - }
      - }
      - if "`tvc'" != "" & "`cure'" != ""{
      = if "udca severe_disease covid_vacc_first liver_trans age_tv" != "" & ""
>  != ""{
        foreach tvcvar in `tvc' {
        constraint free
        constraint `r(free)' [xb][_rcs_`tvcvar'`tvc_`tvcvar'_df'] = 0
        local conslist `conslist' `r(free)'
        }
        }
      - if `del_entry' == 1 {
      = if 1 == 1 {
      - local xb0 (xb0: `varlist' `s0_rcsterms', `constant' `offopt')
      = local xb0 (xb0: udca male age_tv o.any_high_risk_condition eth_bin imd1
>  imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 
> smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rcs1 _s0_
> rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liver_tra
> ns1 _s0_rcs_age_tv1,  )
      - local xbvarlist `varlist' `rcsterms'
      = local xbvarlist udca male age_tv o.any_high_risk_condition eth_bin imd1
>  imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 
> smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _rcs_ud
> ca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_age_tv
> 1
      - local xbvarlist_omitted `varlist_omitted' `rcsterms'
      = local xbvarlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 im
> d5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid
> _vacc_first liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc
> _first1 _rcs_liver_trans1 _rcs_age_tv1
      - if "`constant'" == "" {
      = if "" == "" {
      - local xbvarlist `xbvarlist' _cons
      = local xbvarlist udca male age_tv o.any_high_risk_condition eth_bin imd1
>  imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 
> smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _rcs_ud
> ca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_age_tv
> 1 _cons
      - local xbvarlist_omitted `xbvarlist_omitted' _cons
      = local xbvarlist_omitted udca male age_tv eth_bin imd1 imd2 imd3 imd4 im
> d5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid
> _vacc_first liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc
> _first1 _rcs_liver_trans1 _rcs_age_tv1 _cons
      - }
      - foreach term in `xbvarlist_omitted' {
      = foreach term in udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd5 bmi_c
> at1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_vacc_fi
> rst liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 
> _rcs_liver_trans1 _rcs_age_tv1 _cons {
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("udca",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm udca
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("udca" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1993 [xb][udca] = [xb0][udca]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("male",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm male
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("male" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1992 [xb][male] = [xb0][male]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("age_tv",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm age_tv
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("age_tv" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1991 [xb][age_tv] = [xb0][age_tv]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("eth_bin",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm eth_bin
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("eth_bin" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1990 [xb][eth_bin] = [xb0][eth_bin]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("imd1",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm imd1
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("imd1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1989 [xb][imd1] = [xb0][imd1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("imd2",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm imd2
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("imd2" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1988 [xb][imd2] = [xb0][imd2]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("imd3",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm imd3
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("imd3" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1987 [xb][imd3] = [xb0][imd3]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("imd4",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm imd4
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("imd4" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1986 [xb][imd4] = [xb0][imd4]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("imd5",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm imd5
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("imd5" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1985 [xb][imd5] = [xb0][imd5]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("bmi_cat1",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm bmi_cat1
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("bmi_cat1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1984 [xb][bmi_cat1] = [xb0][bmi_cat1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("bmi_cat2",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm bmi_cat2
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("bmi_cat2" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1983 [xb][bmi_cat2] = [xb0][bmi_cat2]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("bmi_cat3",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm bmi_cat3
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("bmi_cat3" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1982 [xb][bmi_cat3] = [xb0][bmi_cat3]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("bmi_cat4",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm bmi_cat4
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("bmi_cat4" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1981 [xb][bmi_cat4] = [xb0][bmi_cat4]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("smoking1",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm smoking1
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("smoking1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1980 [xb][smoking1] = [xb0][smoking1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("smoking2",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm smoking2
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("smoking2" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1979 [xb][smoking2] = [xb0][smoking2]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("severe_disease",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm severe_disease
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("severe_disease" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1978 [xb][severe_disease] = [xb0][severe_disease]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("covid_vacc_first",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm covid_vacc_first
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("covid_vacc_first" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1977 [xb][covid_vacc_first] = [xb0][covid_vacc_first]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("liver_trans",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm liver_trans
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("liver_trans" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1976 [xb][liver_trans] = [xb0][liver_trans]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("_rcs1",1,4) == "_rcs" {
      - local addterm = "_s0" + "`term'"
      = local addterm = "_s0" + "_rcs1"
      - }
      - else {
        local addterm `term'
        }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("_rcs1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1975 [xb][_rcs1] = [xb0][_s0_rcs1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("_rcs_udca1",1,4) == "_rcs" {
      - local addterm = "_s0" + "`term'"
      = local addterm = "_s0" + "_rcs_udca1"
      - }
      - else {
        local addterm `term'
        }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("_rcs_udca1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1974 [xb][_rcs_udca1] = [xb0][_s0_rcs_udca1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("_rcs_severe_disease1",1,4) == "_rcs" {
      - local addterm = "_s0" + "`term'"
      = local addterm = "_s0" + "_rcs_severe_disease1"
      - }
      - else {
        local addterm `term'
        }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("_rcs_severe_disease1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1973 [xb][_rcs_severe_disease1] = [xb0][_s0_rcs_severe_disea
> se1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 197
> 3
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("_rcs_covid_vacc_first1",1,4) == "_rcs" {
      - local addterm = "_s0" + "`term'"
      = local addterm = "_s0" + "_rcs_covid_vacc_first1"
      - }
      - else {
        local addterm `term'
        }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("_rcs_covid_vacc_first1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1972 [xb][_rcs_covid_vacc_first1] = [xb0][_s0_rcs_covid_vacc
> _first1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 197
> 3 1972
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("_rcs_liver_trans1",1,4) == "_rcs" {
      - local addterm = "_s0" + "`term'"
      = local addterm = "_s0" + "_rcs_liver_trans1"
      - }
      - else {
        local addterm `term'
        }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("_rcs_liver_trans1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1971 [xb][_rcs_liver_trans1] = [xb0][_s0_rcs_liver_trans1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 197
> 3 1972 1971
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("_rcs_age_tv1",1,4) == "_rcs" {
      - local addterm = "_s0" + "`term'"
      = local addterm = "_s0" + "_rcs_age_tv1"
      - }
      - else {
        local addterm `term'
        }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("_rcs_age_tv1" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1970 [xb][_rcs_age_tv1] = [xb0][_s0_rcs_age_tv1]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 197
> 3 1972 1971 1970
      - }
      - constraint free
      - if substr("`term'",1,4) == "_rcs" {
      = if substr("_cons",1,4) == "_rcs" {
        local addterm = "_s0" + "`term'"
        }
      - else {
      - local addterm `term'
      = local addterm _cons
      - }
      - constraint free
      - if "`cure'" != "" & ("`term'" == "_rcs`df'") {
      = if "" != "" & ("_cons" == "_rcs1") {
        constraint `r(free)' [xb0][`addterm'] = 0
        }
      - else {
      - constraint `r(free)' [xb][`term'] = [xb0][`addterm']
      = constraint 1969 [xb][_cons] = [xb0][_cons]
      - }
      - local conslist `conslist' `r(free)'
      = local conslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1
> 988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 197
> 3 1972 1971 1970 1969
      - }
      - if "`lininit'" == "" {
      = if "" == "" {
      - local nxbterms: word count `xbvarlist'
      = local nxbterms: word count udca male age_tv o.any_high_risk_condition e
> th_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat
> 5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _r
> cs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 
> _rcs_age_tv1 _cons
      - matrix `initmat' = `initmat', `initmat'[1,1..`nxbterms']
      = matrix __00000B = __00000B, __00000B[1,1..28]
      - }
      - }
      - local dropconslist `conslist'
      = local dropconslist 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 19
> 89 1988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974
>  1973 1972 1971 1970 1969
      - if "`extra_constraints'" != "" {
      = if "" != "" {
        local mlopts : subinstr local mlopts "constraints(`extra_constraints')"
>  "",word
        local conslist `conslist' `extra_constraints'
        }
      - if "`from'" == "" {
      = if "" == "" {
      - if "`lininit'" == "" {
      = if "" == "" {
      - local initopt "init(`initmat',copy)"
      = local initopt "init(__00000B,copy)"
      - }
      - else {
        local initopt "init(`initmat')"
        }
      - }
      - else local initopt "init(`from')"
      = else local initopt "init()"
      - if "`verbose'"=="verbose" display as txt "Starting to Fit Model"
      = if ""=="verbose" display as txt "Starting to Fit Model"
      - if "`oldest'" == "" {
      = if "" == "" {
      - if "`mlmethod'" == "" {
      = if "" == "" {
      - if inlist("`scale'","hazard","odds","normal") {
      = if inlist("hazard","hazard","odds","normal") {
      - local mlmethod lf2
      - }
      - else {
        local mlmethod lf
        }
      - if inlist("`scale'","normal","theta") & "`rs'" != "" {
      = if inlist("hazard","normal","theta") & "" != "" {
        local mlmethod lf
        }
      - }
      - if "`failconvlininit'" != "" {
      = if "" != "" {
        local captureml capture
        }
      - tempname stpm2_struct
      - mata stpm2_setup("`stpm2_struct'")
      = mata stpm2_setup("__00000Q")
      - local userinfo userinfo(`stpm2_struct')
      = local userinfo userinfo(__00000Q)
      - `captureml' ml model `mlmethod' stpm2_ml`addlf'_`scale'`rs'() (xb: = `v
> arlist' `rcsterms', `constant' `offopt') `thetaeq' (dxb: `drcsterms', nocons)
>  `xb0' if `touse' `wt', `mlopts' `userinfo' collinear constraints(`conslist')
>  `initopt' search(off) waldtest(0) `log' maximize
      =  ml model lf2 stpm2_ml_hazard() (xb: = udca male age_tv o.any_high_risk
> _condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_ca
> t4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first li
> ver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_l
> iver_trans1 _rcs_age_tv1,  )  (dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_diseas
> e1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons) (xb0:
>  udca male age_tv o.any_high_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 
> bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 s
> evere_disease covid_vacc_first liver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_sev
> ere_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1, 
>  ) if __00000F ,  userinfo(__00000Q) collinear constraints(1999 1998 1997 199
> 6 1995 1994 1993 1992 1991 1990 1989 1988 1987 1986 1985 1984 1983 1982 1981 
> 1980 1979 1978 1977 1976 1975 1974 1973 1972 1971 1970 1969) init(__00000B,co
> py) search(off) waldtest(0)  maximize
        ---------------------------------------------------------- begin ml ---
        - if _caller()>=11 {
        - mopt `0'
        = mopt model lf2 stpm2_ml_hazard() (xb: = udca male age_tv o.any_high_r
> isk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi
> _cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first
>  liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rc
> s_liver_trans1 _rcs_age_tv1,  )  (dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_dis
> ease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons) (x
> b0: udca male age_tv o.any_high_risk_condition eth_bin imd1 imd2 imd3 imd4 im
> d5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking
> 3 severe_disease covid_vacc_first liver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_
> severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv
> 1,  ) if __00000F ,  userinfo(__00000Q) collinear constraints(1999 1998 1997 
> 1996 1995 1994 1993 1992 1991 1990 1989 1988 1987 1986 1985 1984 1983 1982 19
> 81 1980 1979 1978 1977 1976 1975 1974 1973 1972 1971 1970 1969) init(__00000B
> ,copy) search(off) waldtest(0)  maximize
          ------------------------------------------------------ begin mopt ---
          - local vv : di "version " string(_caller()) ":"
          - version 12
          - gettoken subcmd 0 : 0, parse(" ,")
          - local lcmd : length local subcmd
          - if "`subcmd'" == "clear" {
          = if "model" == "clear" {
            Clear
            exit
            }
          - if `"`subcmd'"' == "hold" {
          = if `"model"' == "hold" {
            ml_hold `0'
            exit
            }
          - if `"`subcmd'"' == "unhold" {
          = if `"model"' == "unhold" {
            ml_unhold `0'
            exit
            }
          - if "`subcmd'" == "score" {
          = if "model" == "score" {
            if _caller() > 12 {
            `vv' Score `0'
            }
            else {
            Score `0'
            }
            exit
            }
          - if "`subcmd'" == "count" {
          = if "model" == "count" {
            Count `0'
            exit
            }
          - if "`subcmd'" == "trace" {
          = if "model" == "trace" {
            Trace `0'
            exit
            }
          - if "`subcmd'" == bsubstr("graph",1,max(2,`lcmd')) {
          = if "model" == bsubstr("graph",1,max(2,5)) {
            Graph `0'
            exit
            }
          - if "`subcmd'" == "init" {
          = if "model" == "init" {
            Interactive 0
            `vv' Init `0'
            exit
            }
          - if "`subcmd'" == bsubstr("maximize",1,max(3,`lcmd')) {
          = if "model" == bsubstr("maximize",1,max(3,5)) {
            Interactive 1
            `vv' MaxMin maximize `0'
            exit
            }
          - if "`subcmd'" == bsubstr("minimize",1,max(3,`lcmd')) {
          = if "model" == bsubstr("minimize",1,max(3,5)) {
            Interactive 1
            `vv' MaxMin minimize `0'
            exit
            }
          - if "`subcmd'" == bsubstr("display",1,max(2,`lcmd')) {
          = if "model" == bsubstr("display",1,max(2,5)) {
            Display `0'
            exit
            }
          - if "`subcmd'" == bsubstr("footnote",1,max(4,`lcmd')) {
          = if "model" == bsubstr("footnote",1,max(4,5)) {
            ml_footnote `0'
            exit
            }
          - if "`subcmd'" == "," {
          = if "model" == "," {
            Display, `0'
            exit
            }
          - if "`subcmd'" == bsubstr("model",1,max(3,`lcmd')) {
          = if "model" == bsubstr("model",1,max(3,5)) {
          - `vv' capture noi Model `0'
          = version 11.1: capture noi Model  lf2 stpm2_ml_hazard() (xb: = udca 
> male age_tv o.any_high_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_ca
> t1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_
> disease covid_vacc_first liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _r
> cs_covid_vacc_first1 _rcs_liver_trans1 _rcs_age_tv1,  )  (dxb: _d_rcs1 _d_rcs
> _udca1 _d_rcs_severe_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d
> _rcs_age_tv1, nocons) (xb0: udca male age_tv o.any_high_risk_condition eth_bi
> n imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smo
> king1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rcs
> 1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liv
> er_trans1 _s0_rcs_age_tv1,  ) if __00000F ,  userinfo(__00000Q) collinear con
> straints(1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 1988 1987 198
> 6 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 1973 1972 1971 
> 1970 1969) init(__00000B,copy) search(off) waldtest(0)  maximize
            ---------------------------------------------- begin mopt.Model ---
            - local version = string(_caller())
            - local vv : di "version `version':"
            = local vv : di "version 11.1:"
            - version 12
            - syntax anything(id="model" name=spec) [if] [in] [fw aw pw iw] [, 
> BRACKET COLlinear MISSing CONTinue lf0(string) INIT(string) CONSTraints(strin
> g) noCNSNOTEs VCE(passthru) NEGH NOPREserve TECHnique(string) ITERID(string) 
> CRITtype(string) OBS(numlist max=1 >0) TItle(string) WALDtest(integer -1) SVY
>  SUBpop(string) SRSsubpop noSVYadjust SCore(passthru) noOUTput noSCVARS GROUP
> (varname) ITERPROLOG(string) DERIVPROLOG(string) DERIVH(string) DERIVSCALE(st
> ring) GNWMATrix(string) KAUXiliary(numlist int >=0) MAXimize MINimize USERinf
> o(namelist) PUPDATED Robust CLuster(passthru) moptobj(string) USEVIEWS * ]
            - if `"`moptobj'"' == "" {
            = if `""' == "" {
            - Clear
              -------------------------------------------- begin mopt.Clear ---
              - syntax [, NOTANOPTION]
              - capture drop $ML_w
              = capture drop 
              - capture drop $ML_samp
              = capture drop 
              - capture drop $ML_sample
              = capture drop 
              - capture drop $ML_subv
              = capture drop 
              - capture drop $ML_grp
              = capture drop 
              - mata: Mopt_drop_external()
              - macro drop ML_*
              ---------------------------------------------- end mopt.Clear ---
            - }
            - local maxmin `minimize' `maximize'
            = local maxmin  maximize
            - opts_exclusive "`maxmin'"
            = opts_exclusive "maximize"
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts maximize
              - local n 0
              - while `"`opts'"' != "" {
              = while `"maximize"' != "" {
              - local ++n
              - gettoken item`n' opts : opts, bind
              = gettoken item1 opts : opts, bind
              - }
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 1 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - if `:length local maxmin' {
            = if 8 {
            - local interactive 0
            - }
            - else local interactive 1
            - _get_diparmopts, diparmopts(`options') soptions syntaxonly
            = _get_diparmopts, diparmopts(search(off)) soptions syntaxonly
              --------------------------------------- begin _get_diparmopts ---
              - if _caller() < 8.2 {
                _get_diparmopts_8 `0'
                exit
                }
              - version 9
              - local version : di "version " string(_caller()) ":"
              - syntax [, diparmopts(string asis) EXECute soptions bottom plus 
> SYNTAXonly * ]
              - local goptions `options'
              = local goptions 
              - SpliceGlobals junk , `goptions'
              = SpliceGlobals junk , 
                ----------------------- begin _get_diparmopts.SpliceGlobals ---
                - syntax name(id="macro name" name=c_diparm) [, diparm(string a
> sis) Level(cilevel) dof(passthru) syntaxonly ]
                - if `"`dof'"' == "" & `"`e(df_r)'"' != "" {
                = if `""' == "" & `"36"' != "" {
                - capture confirm integer number `e(df_r)'
                = capture confirm integer number 36
                - if !c(rc) {
                - local gdof dof(`e(df_r)')
                = local gdof dof(36)
                - }
                - capture
                - }
                - else local gdof `"`dof'"'
                = else local gdof `""'
                - local glevel `level'
                = local glevel 95
                - local lopt level(`glevel')
                = local lopt level(95)
                - if (`"`diparm'"' == "") exit
                = if (`""' == "") exit
                ------------------------- end _get_diparmopts.SpliceGlobals ---
              - local 0 `", `diparmopts'"'
              = local 0 `", search(off)"'
              - local diparmopts
              - local k 0
              - syntax [, diparm(string asis) * ]
              - while `"`diparm'"' != "" {
              = while `""' != "" {
                local ++k
                local single 1
                local after
                capture _on_colon_parse `diparm'
                if !c(rc) {
                local single 0
                local diparm `"`s(before)'"'
                local after `"`s(after)'"'
                }
                capture
                SpliceGlobals diparm , diparm(`diparm') `syntaxonly' `goptions'
                local diparm`k' `"`diparm'"'
                local diparmopts `"`diparmopts' : `diparm'"'
                if `single' | `"`:list retok after'"' == "" {
                local 0 `", `options'"'
                syntax [, diparm(string asis) * ]
                }
                else {
                local diparm `"`after'"'
                }
                }
              - if `"`soptions'"' == "" {
              = if `"soptions"' == "" {
                syntax [, diparm(string asis) ]
                }
              - if ("`execute'" == "") {
              = if ("" == "") {
              - sreturn clear
              - sreturn local options `"`options'"'
              = sreturn local options `"search(off)"'
              - sreturn local diparm `"`diparmopts'"'
              = sreturn local diparm `""'
              - forval i = 1/`k' {
              = forval i = 1/0 {
                sreturn local diparm`i' `"`diparm`i''"'
                }
              - sreturn local k `k'
              = sreturn local k 0
              - exit
              ----------------------------------------- end _get_diparmopts ---
            - forval k = 1/`s(k)' {
            = forval k = 1/0 {
              local diparm`k' `"`s(diparm`k')'"'
              }
            - local ndiparm `s(k)'
            = local ndiparm 0
            - local options `"`s(options)'"'
            = local options `"search(off)"'
            - if `interactive' & `:length local options' {
            = if 0 & 11 {
              local 0 , `options'
              syntax [, NOTANOPTION]
              }
            - if `:length local nopreserve' | `:length local score' {
            = if 0 | 0 {
              global ML_preserve no
              }
            - else global ML_preserve yes
            - gettoken evaltype spec : spec
            - confirm name `evaltype'
            = confirm name lf2
            - gettoken evaluator spec : spec
            - global ML_evaltype : copy local evaltype
            - if `:length local srssubpop' {
            = if 0 {
              local 0 , srssubpop
              syntax [, NONOPTION]
              exit 198
              }
            - if `:length local subpop' {
            = if 0 {
              local svy svy
              }
            - if `:length local svy' {
            = if 0 {
              opts_exclusive "`vce' `svy'" vce
              if `:length local weight' {
              di as err "svy option not allowed with weights"
              exit 198
              }
              global ML_noadj : copy local svyadjust
              }
            - global ML_svy : copy local svy
            - if _caller() >= 15 & c(userversion) >= 15 {
              local fparm ", freeparm"
              }
            - local eqspec : copy local spec
            - local ieq 0
            - while `:length local eqspec' {
            = while 735 {
            - local ++ieq
            - gettoken eq eqspec : eqspec, bind
            - if bsubstr(trim("`eq'"),1,1) == "/" {
            = if bsubstr(trim("(xb: = udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_tran
> s1 _rcs_age_tv1,  )"),1,1) == "/" {
              local eq = bsubstr(trim("`eq'"),2,.)
              local spec : subinstr local spec "/`eq'" `"("`eq'":`fparm')"', wo
> rd
              }
            - else {
            - gettoken p1 p2 : eq, parse("()")
            - local p2 = trim(`"`p2'"')
            = local p2 = trim(`"xb: = udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_tran
> s1 _rcs_age_tv1,  )"')
            - if bsubstr("`p2'",1,1) == "," {
            = if bsubstr("xb: = udca male age_tv o.any_high_risk_condition eth_
> bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 s
> moking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1
>  _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rc
> s_age_tv1,  )",1,1) == "," {
              gettoken comma p2 : p2, parse(",")
              local p2 = trim(`"`p2'"')
              }
            - if `"`p1'`p2'"' == "()" {
            = if `"(xb: = udca male age_tv o.any_high_risk_condition eth_bin im
> d1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking
> 1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _rcs_
> udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_age_
> tv1,  )"' == "()" {
              local spec : subinstr local spec "`eq'" "(eq`ieq':)", word
              }
            - }
            - }
            - while `:length local eqspec' {
            = while 436 {
            - local ++ieq
            - gettoken eq eqspec : eqspec, bind
            - if bsubstr(trim("`eq'"),1,1) == "/" {
            = if bsubstr(trim("(dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease
> 1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons)"),1,1)
>  == "/" {
              local eq = bsubstr(trim("`eq'"),2,.)
              local spec : subinstr local spec "/`eq'" `"("`eq'":`fparm')"', wo
> rd
              }
            - else {
            - gettoken p1 p2 : eq, parse("()")
            - local p2 = trim(`"`p2'"')
            = local p2 = trim(`"dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease
> 1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons)"')
            - if bsubstr("`p2'",1,1) == "," {
            = if bsubstr("dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_r
> cs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons)",1,1) == ","
>  {
              gettoken comma p2 : p2, parse(",")
              local p2 = trim(`"`p2'"')
              }
            - if `"`p1'`p2'"' == "()" {
            = if `"(dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs_cov
> id_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons)"' == "()" {
              local spec : subinstr local spec "`eq'" "(eq`ieq':)", word
              }
            - }
            - }
            - while `:length local eqspec' {
            = while 316 {
            - local ++ieq
            - gettoken eq eqspec : eqspec, bind
            - if bsubstr(trim("`eq'"),1,1) == "/" {
            = if bsubstr(trim("(xb0: udca male age_tv o.any_high_risk_condition
>  eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_c
> at5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans 
> _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_
> rcs_liver_trans1 _s0_rcs_age_tv1,  )"),1,1) == "/" {
              local eq = bsubstr(trim("`eq'"),2,.)
              local spec : subinstr local spec "/`eq'" `"("`eq'":`fparm')"', wo
> rd
              }
            - else {
            - gettoken p1 p2 : eq, parse("()")
            - local p2 = trim(`"`p2'"')
            = local p2 = trim(`"xb0: udca male age_tv o.any_high_risk_condition
>  eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_c
> at5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans 
> _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_
> rcs_liver_trans1 _s0_rcs_age_tv1,  )"')
            - if bsubstr("`p2'",1,1) == "," {
            = if bsubstr("xb0: udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rc
> s1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_li
> ver_trans1 _s0_rcs_age_tv1,  )",1,1) == "," {
              gettoken comma p2 : p2, parse(",")
              local p2 = trim(`"`p2'"')
              }
            - if `"`p1'`p2'"' == "()" {
            = if `"(xb0: udca male age_tv o.any_high_risk_condition eth_bin imd
> 1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1
>  smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rcs1 _s0
> _rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liver_tr
> ans1 _s0_rcs_age_tv1,  )"' == "()" {
              local spec : subinstr local spec "`eq'" "(eq`ieq':)", word
              }
            - }
            - }
            - while `:length local eqspec' {
            = while 0 {
              local ++ieq
              gettoken eq eqspec : eqspec, bind
              if bsubstr(trim("`eq'"),1,1) == "/" {
              local eq = bsubstr(trim("`eq'"),2,.)
              local spec : subinstr local spec "/`eq'" `"("`eq'":`fparm')"', wo
> rd
              }
              else {
              gettoken p1 p2 : eq, parse("()")
              local p2 = trim(`"`p2'"')
              if bsubstr("`p2'",1,1) == "," {
              gettoken comma p2 : p2, parse(",")
              local p2 = trim(`"`p2'"')
              }
              if `"`p1'`p2'"' == "()" {
              local spec : subinstr local spec "`eq'" "(eq`ieq':)", word
              }
              }
              }
            - if `interactive' {
            = if 0 {
              SetGlobalVar ML_sample : _MLtua
              }
            - else {
            - global ML_sample : tempvar
            - if `"`moptobj'"' != "" {
            = if `""' != "" {
              global ML_sample `moptobj'$ML_sample
              }
            - }
            - if `"`moptobj'"' != "" {
            = if `""' != "" {
              cap drop $ML_sample
              }
            - `vv' mark $ML_sample `if' `in' [`weight'`exp'], `zeroweight'
            = version 11.1: mark __00000R if __00000F   [], 
            - tempname eqlist
            - .`eqlist' = ._eqlist.new, eqopts(NOCONStant FREEParm) eqargopts(O
> FFset EXPosure) noneedvarlist numdepvars(0) needequal
            = .__00000S = ._eqlist.new, eqopts(NOCONStant FREEParm) eqargopts(O
> FFset EXPosure) noneedvarlist numdepvars(0) needequal
              -class {
              -instance:
              -        array           n_depvars
              -        string          needequal
              -        string          noneedvarlist
              -        string          wtypes
              -        string          collinear
              -        string          nocons
              -        string          nocons_ignore
              -        double          n_eq
              -        string          gl_if
              -        string          gl_in
              -        string          gl_wgt
              -        string          gl_options
              -        _optlist        eq_opts_allowed
                -class {
                -instance:
                -        array options   = {}
                -        array names     = {}
                -}
              -        array           eq_list
              -        _optlist        mark_opts
              -        array           mark_list
              -        array           mark_name
              -        _optlist        rmcoll_opts
              -        array           rmcoll_list
              -        array           rmcoll_name
              -        _optlist        rmdcoll_opts
              -        array           rmdcoll_list
              -        array           rmdcoll_name
              -}
              ------------------------------------------- begin _eqlist.new ---
              - version 9.2
              - ._init
                --------------------------------------- begin _eqlist._init ---
                - version 9.2
                - .n_eq = 0
                - .gl_if = ""
                - .gl_in = ""
                - .gl_wgt = ""
                - .gl_options = ""
                - .eq_list = {}
                ----------------------------------------- end _eqlist._init ---
              - ._setup `0'
              = ._setup , eqopts(NOCONStant FREEParm) eqargopts(OFFset EXPosure
> ) noneedvarlist numdepvars(0) needequal
                -------------------------------------- begin _eqlist._setup ---
                - version 9.2
                - .mark_list = {}
                - .mark_name = {}
                - .mark_opts.reset
                  ------------------------------------ begin _optlist.reset ---
                  - version 9
                  - .options = {}
                  - .names = {}
                  -------------------------------------- end _optlist.reset ---
                - .rmcoll_list = {}
                - .rmcoll_name = {}
                - .rmcoll_opts.reset
                  ------------------------------------ begin _optlist.reset ---
                  - version 9
                  - .options = {}
                  - .names = {}
                  -------------------------------------- end _optlist.reset ---
                - .rmdcoll_list = {}
                - .rmdcoll_name = {}
                - .rmdcoll_opts.reset
                  ------------------------------------ begin _optlist.reset ---
                  - version 9
                  - .options = {}
                  - .names = {}
                  -------------------------------------- end _optlist.reset ---
                - syntax [, EQopts(namelist) EQARGopts(namelist) noNEEDVARLIST 
> COMMONopts(string asis) MARKopts(namelist) RMCOLLopts(namelist) RMDCOLLopts(n
> amelist) NUMDEPvars(numlist integer >=0) NEEDEQUAL WTYPES(string) IGNORENOCON
> S ]
                - .eq_opts_allowed.reset
                  ------------------------------------ begin _optlist.reset ---
                  - version 9
                  - .options = {}
                  - .names = {}
                  -------------------------------------- end _optlist.reset ---
                - foreach opt of local eqopts {
                - .eq_opts_allowed.addopt `opt'
                = .eq_opts_allowed.addopt NOCONStant
                  ----------------------------------- begin _optlist.addopt ---
                  - version 9
                  - syntax name(name=optspec) [, PASSthru]
                  - local mname = lower("`optspec'")
                  = local mname = lower("NOCONStant")
                  - if "`passthru'" != "" {
                  = if "" != "" {
                    local optspec `optspec'(passthru)
                    }
                  - .options.Arrpush "`optspec'"
                  = .options.Arrpush "NOCONStant"
                  - .names.Arrpush "`mname'"
                  = .names.Arrpush "noconstant"
                  ------------------------------------- end _optlist.addopt ---
                - }
                - .eq_opts_allowed.addopt `opt'
                = .eq_opts_allowed.addopt FREEParm
                  ----------------------------------- begin _optlist.addopt ---
                  - version 9
                  - syntax name(name=optspec) [, PASSthru]
                  - local mname = lower("`optspec'")
                  = local mname = lower("FREEParm")
                  - if "`passthru'" != "" {
                  = if "" != "" {
                    local optspec `optspec'(passthru)
                    }
                  - .options.Arrpush "`optspec'"
                  = .options.Arrpush "FREEParm"
                  - .names.Arrpush "`mname'"
                  = .names.Arrpush "freeparm"
                  ------------------------------------- end _optlist.addopt ---
                - }
                - foreach opt of local eqargopts {
                - .eq_opts_allowed.addopt `opt', passthru
                = .eq_opts_allowed.addopt OFFset, passthru
                  ----------------------------------- begin _optlist.addopt ---
                  - version 9
                  - syntax name(name=optspec) [, PASSthru]
                  - local mname = lower("`optspec'")
                  = local mname = lower("OFFset")
                  - if "`passthru'" != "" {
                  = if "passthru" != "" {
                  - local optspec `optspec'(passthru)
                  = local optspec OFFset(passthru)
                  - }
                  - .options.Arrpush "`optspec'"
                  = .options.Arrpush "OFFset(passthru)"
                  - .names.Arrpush "`mname'"
                  = .names.Arrpush "offset"
                  ------------------------------------- end _optlist.addopt ---
                - }
                - .eq_opts_allowed.addopt `opt', passthru
                = .eq_opts_allowed.addopt EXPosure, passthru
                  ----------------------------------- begin _optlist.addopt ---
                  - version 9
                  - syntax name(name=optspec) [, PASSthru]
                  - local mname = lower("`optspec'")
                  = local mname = lower("EXPosure")
                  - if "`passthru'" != "" {
                  = if "passthru" != "" {
                  - local optspec `optspec'(passthru)
                  = local optspec EXPosure(passthru)
                  - }
                  - .options.Arrpush "`optspec'"
                  = .options.Arrpush "EXPosure(passthru)"
                  - .names.Arrpush "`mname'"
                  = .names.Arrpush "exposure"
                  ------------------------------------- end _optlist.addopt ---
                - }
                - local i 0
                - foreach opt of local markopts {
                  .mark_opts.addopt `opt', passthru
                  }
                - local i 0
                - foreach opt of local rmcollopts {
                  .rmcoll_opts.addopt `opt', passthru
                  }
                - local i 0
                - foreach opt of local rmdcollopts {
                  .rmdcoll_opts.addopt `opt', passthru
                  }
                - .n_depvars.Arrdropall
                - if "`numdepvars'" != "" {
                = if "0" != "" {
                - foreach ndep of local numdepvars {
                - .n_depvars.Arrpush `ndep'
                = .n_depvars.Arrpush 0
                - }
                - }
                - else .n_depvars.Arrpush 1
                - .needequal = "`needequal'"
                = .needequal = "needequal"
                - .wtypes = "`wtypes'"
                = .wtypes = ""
                - .noneedvarlist = "`needvarlist'"
                = .noneedvarlist = "noneedvarlist"
                - .nocons_ignore = "`ignorenocons'"
                = .nocons_ignore = ""
                ---------------------------------------- end _eqlist._setup ---
              --------------------------------------------- end _eqlist.new ---
            - .`eqlist'.parse `spec'
            = .__00000S.parse  (xb: = udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_tran
> s1 _rcs_age_tv1,  )  (dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs
> _covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons) (xb0: udca mal
> e age_tv o.any_high_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 
> bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_dis
> ease covid_vacc_first liver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disea
> se1 _s0_rcs_covid_vacc_first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1,  )
              ----------------------------------------- begin _eqlist.parse ---
              - version 9.2
              - ._init
                --------------------------------------- begin _eqlist._init ---
                - version 9.2
                - .n_eq = 0
                - .gl_if = ""
                - .gl_in = ""
                - .gl_wgt = ""
                - .gl_options = ""
                - .eq_list = {}
                ----------------------------------------- end _eqlist._init ---
              - local MARKOPTLIST `"`.mark_opts.dumpoptions'"'
                -------------------------------- begin _optlist.dumpoptions ---
                - version 9
                - forval i = 1/`.options.arrnels' {
                = forval i = 1/0 {
                  local optlist `optlist' `.options[`i']'
                  }
                - local optlist : list uniq optlist
                - sreturn local optlist `"`optlist'"'
                = sreturn local optlist `""'
                - class exit `"`optlist'"'
                = class exit `""'
                ---------------------------------- end _optlist.dumpoptions ---
              = local MARKOPTLIST `""'
              - local RMCOLLOPTLIST `"`.rmcoll_opts.dumpoptions'"'
                -------------------------------- begin _optlist.dumpoptions ---
                - version 9
                - forval i = 1/`.options.arrnels' {
                = forval i = 1/0 {
                  local optlist `optlist' `.options[`i']'
                  }
                - local optlist : list uniq optlist
                - sreturn local optlist `"`optlist'"'
                = sreturn local optlist `""'
                - class exit `"`optlist'"'
                = class exit `""'
                ---------------------------------- end _optlist.dumpoptions ---
              = local RMCOLLOPTLIST `""'
              - local RMDCOLLOPTLIST `"`.rmdcoll_opts.dumpoptions'"'
                -------------------------------- begin _optlist.dumpoptions ---
                - version 9
                - forval i = 1/`.options.arrnels' {
                = forval i = 1/0 {
                  local optlist `optlist' `.options[`i']'
                  }
                - local optlist : list uniq optlist
                - sreturn local optlist `"`optlist'"'
                = sreturn local optlist `""'
                - class exit `"`optlist'"'
                = class exit `""'
                ---------------------------------- end _optlist.dumpoptions ---
              = local RMDCOLLOPTLIST `""'
              - _parse expand EQ GL : 0, gweight common( `MARKOPTLIST' `RMCOLLO
> PTLIST' `RMDCOLLOPTLIST' COLlinear )
              = _parse expand EQ GL : 0, gweight common(    COLlinear )
              - if `EQ_n' == 0 & "`.noneedvarlist'" == "" {
              = if 3 == 0 & "noneedvarlist" == "" {
                syntax varlist
                }
              - local rebind = `EQ_n' == 1
              = local rebind = 3 == 1
              - if `rebind' {
              = if 0 {
                tokenize `"`0'"', parse(",()[]")
                local rebind = `"`1'"' != "(" & `"`2'"' == "("
                }
              - if `rebind' {
              = if 0 {
                while `:length local 0' {
                gettoken tok 0 : 0, parse(" ,") bind match(par)
                if "`par'" == "(" {
                local ZERO `"(`ZERO') (`tok') `0'"'
                local 0
                }
                else if inlist("`tok'", "if", "in", ",") {
                local ZERO `"(`ZERO') `tok' `0'"'
                local 0
                }
                else {
                local ZERO `"`ZERO' `tok'"'
                }
                }
                _parse expand EQ GL : ZERO, gweight common( `MARKOPTLIST' `RMCO
> LLOPTLIST' `RMDCOLLOPTLIST' COLlinear )
                }
              - forval i = 1/`EQ_n' {
              = forval i = 1/3 {
              - if `i' <= `.n_depvars.arrnels' {
              = if 1 <= 1 {
              - local ndep = `.n_depvars[`i']'
              = local ndep = 0
              - }
              - .eq_list[`i'] = ._eqspec.new, numdepvars(`ndep') `.needequal' `
> .noneedvarlist' wtypes(`.wtypes') `.nocons_ignore'
              = .eq_list[1] = ._eqspec.new, numdepvars(0) needequal noneedvarli
> st wtypes() 
                -class {
                -instance:
                -        double  n_depvars
                -        double  needequal
                -        double  needvarlist
                -        string  wtypes
                -        string  name
                -        string  depvars
                -        double  hasequal
                -        string  indepvars
                -        string  other_markvars
                -        double  nocons
                -        double  nocons_ignore
                -        string  offset
                -        double  exposure
                -        double  freeparm
                -        string  if
                -        string  in
                -        string  wgt
                -        string  options
                -}
                ----------------------------------------- begin _eqspec.new ---
                - version 9.2
                - syntax [, NUMDEPvars(numlist integer >=0 max=1) NEEDEQUAL noN
> EEDVARLIST WTYPES(string) IGNORENOCONS ]
                - .n_depvars = 1
                - if `:list sizeof numdepvars' {
                = if 1 {
                - .n_depvars = `numdepvars'
                = .n_depvars = 0
                - }
                - .needequal = ("`needequal'" != "")
                = .needequal = ("needequal" != "")
                - .needvarlist = ("`needvarlist'" == "")
                = .needvarlist = ("noneedvarlist" == "")
                - .nocons_ignore = ("`ignorenocons'" != "")
                = .nocons_ignore = ("" != "")
                - .wtypes = "`wtypes'"
                = .wtypes = ""
                ------------------------------------------- end _eqspec.new ---
              - .eq_list[`i'].parse `.eq_opts_allowed.objkey':`EQ_`i''
              = .eq_list[1].parse __key(585c100):xb: = udca male age_tv o.any_h
> igh_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat
> 3 bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_
> first liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first
> 1 _rcs_liver_trans1 _rcs_age_tv1
                --------------------------------------- begin _eqspec.parse ---
                - version 9.2
                - _on_colon_parse `0'
                = _on_colon_parse __key(585c100):xb: = udca male age_tv o.any_h
> igh_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat
> 3 bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_
> first liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first
> 1 _rcs_liver_trans1 _rcs_age_tv1
                  ----------------------------------- begin _on_colon_parse ---
                  - version 8.2
                  - sreturn local before ""
                  - sreturn local after ""
                  - gettoken before after : 0, parse(":") bind match(par) quote
> s
                  - if "`par'" != "" {
                  = if "" != "" {
                    local before `"(`before')"'
                    }
                  - if `"`before'"' == ":" {
                  = if `"__key(585c100)"' == ":" {
                    sreturn local after `"`after'"'
                    exit
                    }
                  - while `"`COLON'"' != ":" & `"`after'"' != "" {
                  = while `""' != ":" & `":xb: = udca male age_tv o.any_high_ri
> sk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_
> cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first 
> liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs
> _liver_trans1 _rcs_age_tv1"' != "" {
                  - gettoken COLON after : after, parse(":") bind match(par) qu
> otes
                  - if "`par'" != "" {
                  = if "" != "" {
                    local before `before' (`COLON')
                    local COLON
                    }
                  - else if `"`COLON'"' != ":" {
                  = else if `":"' != ":" {
                    local before `"`before' `COLON'"'
                    local COLON
                    }
                  - }
                  - while `"`COLON'"' != ":" & `"`after'"' != "" {
                  = while `":"' != ":" & `"xb: = udca male age_tv o.any_high_ri
> sk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_
> cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first 
> liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs
> _liver_trans1 _rcs_age_tv1"' != "" {
                    gettoken COLON after : after, parse(":") bind match(par) qu
> otes
                    if "`par'" != "" {
                    local before `before' (`COLON')
                    local COLON
                    }
                    else if `"`COLON'"' != ":" {
                    local before `"`before' `COLON'"'
                    local COLON
                    }
                    }
                  - if `"`COLON'"' != ":" {
                  = if `":"' != ":" {
                    di as err "'' found where ':' expected"
                    exit 198
                    }
                  - sreturn local before `"`before'"'
                  = sreturn local before `"__key(585c100)"'
                  - sreturn local after `"`after'"'
                  = sreturn local after `"xb: = udca male age_tv o.any_high_ris
> k_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_c
> at4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first l
> iver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_
> liver_trans1 _rcs_age_tv1"'
                  ------------------------------------- end _on_colon_parse ---
                - local ol `s(before)'
                = local ol __key(585c100)
                - if `:list sizeof ol' {
                = if 1 {
                - local OPTLIST `"`.`ol'.dumpoptions'"'
                  ------------------------------ begin _optlist.dumpoptions ---
                  - version 9
                  - forval i = 1/`.options.arrnels' {
                  = forval i = 1/4 {
                  - local optlist `optlist' `.options[`i']'
                  = local optlist  NOCONStant
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm OFFset(passthru)
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm OFFset(passthru) EXPosure
> (passthru)
                  - }
                  - local optlist : list uniq optlist
                  - sreturn local optlist `"`optlist'"'
                  = sreturn local optlist `"NOCONStant FREEParm OFFset(passthru
> ) EXPosure(passthru)"'
                  - class exit `"`optlist'"'
                  = class exit `"NOCONStant FREEParm OFFset(passthru) EXPosure(
> passthru)"'
                  -------------------------------- end _optlist.dumpoptions ---
                = local OPTLIST `"NOCONStant FREEParm OFFset(passthru) EXPosure
> (passthru)"'
                - local OPTNAMES `"`.`ol'.dumpnames'"'
                  -------------------------------- begin _optlist.dumpnames ---
                  - version 9
                  - forval i = 1/`.names.arrnels' {
                  = forval i = 1/4 {
                  - local namelist `namelist' `.names[`i']'
                  = local namelist  noconstant
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm offset
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm offset exposure
                  - }
                  - local namelist : list uniq namelist
                  - sreturn local namelist `"`namelist'"'
                  = sreturn local namelist `"noconstant freeparm offset exposur
> e"'
                  - class exit `"`namelist'"'
                  = class exit `"noconstant freeparm offset exposure"'
                  ---------------------------------- end _optlist.dumpnames ---
                = local OPTNAMES `"noconstant freeparm offset exposure"'
                - local NOCONS constant noconstant
                - if `"`:list NOCONS & OPTNAMES'"' == "" {
                = if `"noconstant"' == "" {
                  local NOCONS noCONStant
                  }
                - else local NOCONS
                - }
                - local 0 `"`s(after)'"'
                = local 0 `"xb: = udca male age_tv o.any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5
>  smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rc
> s1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _
> rcs_age_tv1"'
                - if `"`.wtypes'"' != "" {
                = if `""' != "" {
                  local wgt "[`.wtypes']"
                  }
                - syntax [anything(equalok)] [if] [in] `wgt' [, `OPTLIST' `NOCO
> NS' *]
                = syntax [anything(equalok)] [if] [in]  [, NOCONStant FREEParm 
> OFFset(passthru) EXPosure(passthru)  *]
                - local HOLDIF `"`if'"'
                = local HOLDIF `""'
                - local HOLDIN `"`in'"'
                = local HOLDIN `""'
                - if "`wgt'" != "" & "`weight'" != "" {
                = if "" != "" & "" != "" {
                  local HOLDWGT `"[`weight'`exp']"'
                  }
                - gettoken NAME REST : anything, parse(":")
                - if trim("`NAME'") == ":" {
                = if trim("xb") == ":" {
                  di as err "nothing found where equation name expected"
                  exit 198
                  }
                - if `:list sizeof REST' {
                = if 29 {
                - if strpos(`"`NAME'"', ":") {
                = if strpos(`"xb"', ":") {
                  capture _msparse `NAME'
                  if c(rc) {
                  di as err "{bf:`NAME'} invalid equation specification"
                  exit 198
                  }
                  }
                - else {
                - ._confirm_eqname `NAME'
                = ._confirm_eqname xb
                  --------------------------- begin _eqspec._confirm_eqname ---
                  - version 9.2
                  - capture confirm number `0'
                  = capture confirm number xb
                  - if (! c(rc)) exit
                  - local hasdot = strpos(`"`0'"',".")
                  = local hasdot = strpos(`"xb"',".")
                  - if `hasdot' {
                  = if 0 {
                    syntax varname(ts)
                    exit
                    }
                  - capture syntax name(id="equation name")
                  - if (! c(rc)) exit
                  ----------------------------- end _eqspec._confirm_eqname ---
                - }
                - local NAME : list retok NAME
                - gettoken COLON anything : REST, parse(":")
                - }
                - else {
                  local NAME
                  }
                - gettoken DEPVARS REST : anything, parse("=") bind
                - if "`DEPVARS'" == "=" {
                = if "=" == "=" {
                - local REST : copy local anything
                - local DEPVARS
                - }
                - if (`:length local DEPVARS' == 0 & `.n_depvars') {
                = if (0 == 0 & 0) {
                  di as err "nothing found where depvar expected"
                  exit 198
                  }
                - if `"`REST'"' == "" {
                = if `" = udca male age_tv o.any_high_risk_condition eth_bin im
> d1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking
> 1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _rcs_
> udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_age_
> tv1"' == "" {
                  if 0`.needequal' {
                  if `.needvarlist' | (`:length local DEPVARS' != 0 & `.n_depva
> rs') {
                  di as err "equal sign required to separate depvars from indep
> vars"
                  exit 198
                  }
                  }
                  local DEPVARS
                  local n_deps : list sizeof anything
                  if `n_deps' != 0 | `.needvarlist' {
                  if `n_deps' < `.n_depvars' {
                  error 102
                  }
                  forval j = 1/`.n_depvars' {
                  gettoken YY anything : anything
                  local DEPVARS `DEPVARS' `YY'
                  }
                  local INDEPVARS : list retok anything
                  }
                  loca hasequal 0
                  }
                - else {
                - gettoken EQ INDEPVARS : REST, parse("=") bind
                - local hasequal 1
                - }
                - if `:list sizeof DEPVARS' {
                = if 0 {
                  _fv_check_depvar `DEPVARS'
                  tsunab DEPVARS : `DEPVARS'
                  }
                - if `:list sizeof INDEPVARS' {
                = if 27 {
                - fvunab INDEPVARS : `INDEPVARS'
                = fvunab INDEPVARS :  udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_tran
> s1 _rcs_age_tv1
                  -------------------------------------------- begin fvunab ---
                  - version 11
                  - _on_colon_parse `0'
                  = _on_colon_parse INDEPVARS :  udca male age_tv o.any_high_ri
> sk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_
> cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first 
> liver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs
> _liver_trans1 _rcs_age_tv1
                    --------------------------------- begin _on_colon_parse ---
                    - version 8.2
                    - sreturn local before ""
                    - sreturn local after ""
                    - gettoken before after : 0, parse(":") bind match(par) quo
> tes
                    - if "`par'" != "" {
                    = if "" != "" {
                      local before `"(`before')"'
                      }
                    - if `"`before'"' == ":" {
                    = if `"INDEPVARS "' == ":" {
                      sreturn local after `"`after'"'
                      exit
                      }
                    - while `"`COLON'"' != ":" & `"`after'"' != "" {
                    = while `""' != ":" & `":  udca male age_tv o.any_high_risk
> _condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_ca
> t4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first li
> ver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_l
> iver_trans1 _rcs_age_tv1"' != "" {
                    - gettoken COLON after : after, parse(":") bind match(par) 
> quotes
                    - if "`par'" != "" {
                    = if "" != "" {
                      local before `before' (`COLON')
                      local COLON
                      }
                    - else if `"`COLON'"' != ":" {
                    = else if `":"' != ":" {
                      local before `"`before' `COLON'"'
                      local COLON
                      }
                    - }
                    - while `"`COLON'"' != ":" & `"`after'"' != "" {
                    = while `":"' != ":" & `"  udca male age_tv o.any_high_risk
> _condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_ca
> t4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first li
> ver_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_l
> iver_trans1 _rcs_age_tv1"' != "" {
                      gettoken COLON after : after, parse(":") bind match(par) 
> quotes
                      if "`par'" != "" {
                      local before `before' (`COLON')
                      local COLON
                      }
                      else if `"`COLON'"' != ":" {
                      local before `"`before' `COLON'"'
                      local COLON
                      }
                      }
                    - if `"`COLON'"' != ":" {
                    = if `":"' != ":" {
                      di as err "'' found where ':' expected"
                      exit 198
                      }
                    - sreturn local before `"`before'"'
                    = sreturn local before `"INDEPVARS "'
                    - sreturn local after `"`after'"'
                    = sreturn local after `"  udca male age_tv o.any_high_risk_
> condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat
> 4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liv
> er_trans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_li
> ver_trans1 _rcs_age_tv1"'
                    ----------------------------------- end _on_colon_parse ---
                  - local 0 `"`s(before)'"'
                  = local 0 `"INDEPVARS "'
                  - syntax name(id="macro name" name=user)
                  - local 0 `"`s(after)'"'
                  = local 0 `"  udca male age_tv o.any_high_risk_condition eth_
> bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 s
> moking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1
>  _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rc
> s_age_tv1"'
                  - syntax [varlist(ts fv default=none)] [, MIN(integer 1) MAX(
> integer 32000) NAME(string) ]
                  - c_local `user' `varlist'
                  = c_local INDEPVARS udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_tran
> s1 _rcs_age_tv1
                  - local n : list sizeof varlist
                  - if (`min' <= `n' & `n' <= `max') exit
                  = if (1 <= 27 & 27 <= 32000) exit
                  ---------------------------------------------- end fvunab ---
                - }
                - if inlist("noconstant", "`noconstant'", "`constant'") {
                = if inlist("noconstant", "", "") {
                  if "`INDEPVARS'" == "" & ! `.nocons_ignore' {
                  di as err "independent variables are required when option noc
> onstant is specified"
                  exit 102
                  }
                  if "`NOCONS'" != "" {
                  local options `options' noconstant
                  }
                  local NOCONS 1
                  }
                - else local NOCONS 0
                - if `"`offset'`exposure'"' != "" {
                = if `""' != "" {
                  ._check_offset, `offset' `exposure'
                  local OFFSET "`s(offset)'"
                  local EXPOSURE = ("`exposure'" != "")
                  local OTHER `s(offset)'
                  }
                - else local EXPOSURE 0
                - local FREEPARM = `"`freeparm'"' != ""
                = local FREEPARM = `""' != ""
                - local OPTIONS
                - local SPACE
                - foreach OPTNAME of local OPTNAMES {
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"`options'"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'`options'"'
                  }
                - .name = `"`NAME'"'
                = .name = `"xb"'
                - .depvars = `"`DEPVARS'"'
                = .depvars = `""'
                - .hasequal = `hasequal'
                = .hasequal = 1
                - .indepvars = `"`:list retok INDEPVARS'"'
                = .indepvars = `"udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs
> 1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _r
> cs_age_tv1"'
                - .other_markvars = `"`:list retok OTHER'"'
                = .other_markvars = `""'
                - .nocons = `NOCONS'
                = .nocons = 0
                - .if = `"`HOLDIF'"'
                = .if = `""'
                - .in = `"`HOLDIN'"'
                = .in = `""'
                - .wgt = `"`HOLDWGT'"'
                = .wgt = `""'
                - .offset = `"`OFFSET'"'
                = .offset = `""'
                - .exposure = `EXPOSURE'
                = .exposure = 0
                - .freeparm = `FREEPARM'
                = .freeparm = 0
                - .options = `"`OPTIONS'"'
                = .options = `""'
                ----------------------------------------- end _eqspec.parse ---
              - }
              - if `i' <= `.n_depvars.arrnels' {
              = if 2 <= 1 {
                local ndep = `.n_depvars[`i']'
                }
              - .eq_list[`i'] = ._eqspec.new, numdepvars(`ndep') `.needequal' `
> .noneedvarlist' wtypes(`.wtypes') `.nocons_ignore'
              = .eq_list[2] = ._eqspec.new, numdepvars(0) needequal noneedvarli
> st wtypes() 
                ----------------------------------------- begin _eqspec.new ---
                - version 9.2
                - syntax [, NUMDEPvars(numlist integer >=0 max=1) NEEDEQUAL noN
> EEDVARLIST WTYPES(string) IGNORENOCONS ]
                - .n_depvars = 1
                - if `:list sizeof numdepvars' {
                = if 1 {
                - .n_depvars = `numdepvars'
                = .n_depvars = 0
                - }
                - .needequal = ("`needequal'" != "")
                = .needequal = ("needequal" != "")
                - .needvarlist = ("`needvarlist'" == "")
                = .needvarlist = ("noneedvarlist" == "")
                - .nocons_ignore = ("`ignorenocons'" != "")
                = .nocons_ignore = ("" != "")
                - .wtypes = "`wtypes'"
                = .wtypes = ""
                ------------------------------------------- end _eqspec.new ---
              - .eq_list[`i'].parse `.eq_opts_allowed.objkey':`EQ_`i''
              = .eq_list[2].parse __key(585c100):dxb: _d_rcs1 _d_rcs_udca1 _d_r
> cs_severe_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv
> 1, nocons
                --------------------------------------- begin _eqspec.parse ---
                - version 9.2
                - _on_colon_parse `0'
                = _on_colon_parse __key(585c100):dxb: _d_rcs1 _d_rcs_udca1 _d_r
> cs_severe_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv
> 1, nocons
                  ----------------------------------- begin _on_colon_parse ---
                  - version 8.2
                  - sreturn local before ""
                  - sreturn local after ""
                  - gettoken before after : 0, parse(":") bind match(par) quote
> s
                  - if "`par'" != "" {
                  = if "" != "" {
                    local before `"(`before')"'
                    }
                  - if `"`before'"' == ":" {
                  = if `"__key(585c100)"' == ":" {
                    sreturn local after `"`after'"'
                    exit
                    }
                  - while `"`COLON'"' != ":" & `"`after'"' != "" {
                  = while `""' != ":" & `":dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_sev
> ere_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, noc
> ons"' != "" {
                  - gettoken COLON after : after, parse(":") bind match(par) qu
> otes
                  - if "`par'" != "" {
                  = if "" != "" {
                    local before `before' (`COLON')
                    local COLON
                    }
                  - else if `"`COLON'"' != ":" {
                  = else if `":"' != ":" {
                    local before `"`before' `COLON'"'
                    local COLON
                    }
                  - }
                  - while `"`COLON'"' != ":" & `"`after'"' != "" {
                  = while `":"' != ":" & `"dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_sev
> ere_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, noc
> ons"' != "" {
                    gettoken COLON after : after, parse(":") bind match(par) qu
> otes
                    if "`par'" != "" {
                    local before `before' (`COLON')
                    local COLON
                    }
                    else if `"`COLON'"' != ":" {
                    local before `"`before' `COLON'"'
                    local COLON
                    }
                    }
                  - if `"`COLON'"' != ":" {
                  = if `":"' != ":" {
                    di as err "'' found where ':' expected"
                    exit 198
                    }
                  - sreturn local before `"`before'"'
                  = sreturn local before `"__key(585c100)"'
                  - sreturn local after `"`after'"'
                  = sreturn local after `"dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_seve
> re_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, noco
> ns"'
                  ------------------------------------- end _on_colon_parse ---
                - local ol `s(before)'
                = local ol __key(585c100)
                - if `:list sizeof ol' {
                = if 1 {
                - local OPTLIST `"`.`ol'.dumpoptions'"'
                  ------------------------------ begin _optlist.dumpoptions ---
                  - version 9
                  - forval i = 1/`.options.arrnels' {
                  = forval i = 1/4 {
                  - local optlist `optlist' `.options[`i']'
                  = local optlist  NOCONStant
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm OFFset(passthru)
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm OFFset(passthru) EXPosure
> (passthru)
                  - }
                  - local optlist : list uniq optlist
                  - sreturn local optlist `"`optlist'"'
                  = sreturn local optlist `"NOCONStant FREEParm OFFset(passthru
> ) EXPosure(passthru)"'
                  - class exit `"`optlist'"'
                  = class exit `"NOCONStant FREEParm OFFset(passthru) EXPosure(
> passthru)"'
                  -------------------------------- end _optlist.dumpoptions ---
                = local OPTLIST `"NOCONStant FREEParm OFFset(passthru) EXPosure
> (passthru)"'
                - local OPTNAMES `"`.`ol'.dumpnames'"'
                  -------------------------------- begin _optlist.dumpnames ---
                  - version 9
                  - forval i = 1/`.names.arrnels' {
                  = forval i = 1/4 {
                  - local namelist `namelist' `.names[`i']'
                  = local namelist  noconstant
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm offset
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm offset exposure
                  - }
                  - local namelist : list uniq namelist
                  - sreturn local namelist `"`namelist'"'
                  = sreturn local namelist `"noconstant freeparm offset exposur
> e"'
                  - class exit `"`namelist'"'
                  = class exit `"noconstant freeparm offset exposure"'
                  ---------------------------------- end _optlist.dumpnames ---
                = local OPTNAMES `"noconstant freeparm offset exposure"'
                - local NOCONS constant noconstant
                - if `"`:list NOCONS & OPTNAMES'"' == "" {
                = if `"noconstant"' == "" {
                  local NOCONS noCONStant
                  }
                - else local NOCONS
                - }
                - local 0 `"`s(after)'"'
                = local 0 `"dxb: _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d
> _rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1, nocons"'
                - if `"`.wtypes'"' != "" {
                = if `""' != "" {
                  local wgt "[`.wtypes']"
                  }
                - syntax [anything(equalok)] [if] [in] `wgt' [, `OPTLIST' `NOCO
> NS' *]
                = syntax [anything(equalok)] [if] [in]  [, NOCONStant FREEParm 
> OFFset(passthru) EXPosure(passthru)  *]
                - local HOLDIF `"`if'"'
                = local HOLDIF `""'
                - local HOLDIN `"`in'"'
                = local HOLDIN `""'
                - if "`wgt'" != "" & "`weight'" != "" {
                = if "" != "" & "" != "" {
                  local HOLDWGT `"[`weight'`exp']"'
                  }
                - gettoken NAME REST : anything, parse(":")
                - if trim("`NAME'") == ":" {
                = if trim("dxb") == ":" {
                  di as err "nothing found where equation name expected"
                  exit 198
                  }
                - if `:list sizeof REST' {
                = if 7 {
                - if strpos(`"`NAME'"', ":") {
                = if strpos(`"dxb"', ":") {
                  capture _msparse `NAME'
                  if c(rc) {
                  di as err "{bf:`NAME'} invalid equation specification"
                  exit 198
                  }
                  }
                - else {
                - ._confirm_eqname `NAME'
                = ._confirm_eqname dxb
                  --------------------------- begin _eqspec._confirm_eqname ---
                  - version 9.2
                  - capture confirm number `0'
                  = capture confirm number dxb
                  - if (! c(rc)) exit
                  - local hasdot = strpos(`"`0'"',".")
                  = local hasdot = strpos(`"dxb"',".")
                  - if `hasdot' {
                  = if 0 {
                    syntax varname(ts)
                    exit
                    }
                  - capture syntax name(id="equation name")
                  - if (! c(rc)) exit
                  ----------------------------- end _eqspec._confirm_eqname ---
                - }
                - local NAME : list retok NAME
                - gettoken COLON anything : REST, parse(":")
                - }
                - else {
                  local NAME
                  }
                - gettoken DEPVARS REST : anything, parse("=") bind
                - if "`DEPVARS'" == "=" {
                = if "_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs_covid_
> vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1" == "=" {
                  local REST : copy local anything
                  local DEPVARS
                  }
                - if (`:length local DEPVARS' == 0 & `.n_depvars') {
                = if (103 == 0 & 0) {
                  di as err "nothing found where depvar expected"
                  exit 198
                  }
                - if `"`REST'"' == "" {
                = if `""' == "" {
                - if 0`.needequal' {
                = if 01 {
                - if `.needvarlist' | (`:length local DEPVARS' != 0 & `.n_depva
> rs') {
                = if 0 | (103 != 0 & 0) {
                  di as err "equal sign required to separate depvars from indep
> vars"
                  exit 198
                  }
                - }
                - local DEPVARS
                - local n_deps : list sizeof anything
                - if `n_deps' != 0 | `.needvarlist' {
                = if 6 != 0 | 0 {
                - if `n_deps' < `.n_depvars' {
                = if 6 < 0 {
                  error 102
                  }
                - forval j = 1/`.n_depvars' {
                = forval j = 1/0 {
                  gettoken YY anything : anything
                  local DEPVARS `DEPVARS' `YY'
                  }
                - local INDEPVARS : list retok anything
                - }
                - loca hasequal 0
                - }
                - else {
                  gettoken EQ INDEPVARS : REST, parse("=") bind
                  local hasequal 1
                  }
                - if `:list sizeof DEPVARS' {
                = if 0 {
                  _fv_check_depvar `DEPVARS'
                  tsunab DEPVARS : `DEPVARS'
                  }
                - if `:list sizeof INDEPVARS' {
                = if 6 {
                - fvunab INDEPVARS : `INDEPVARS'
                = fvunab INDEPVARS : _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease
> 1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1
                  -------------------------------------------- begin fvunab ---
                  - version 11
                  - _on_colon_parse `0'
                  = _on_colon_parse INDEPVARS : _d_rcs1 _d_rcs_udca1 _d_rcs_sev
> ere_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1
                    --------------------------------- begin _on_colon_parse ---
                    - version 8.2
                    - sreturn local before ""
                    - sreturn local after ""
                    - gettoken before after : 0, parse(":") bind match(par) quo
> tes
                    - if "`par'" != "" {
                    = if "" != "" {
                      local before `"(`before')"'
                      }
                    - if `"`before'"' == ":" {
                    = if `"INDEPVARS "' == ":" {
                      sreturn local after `"`after'"'
                      exit
                      }
                    - while `"`COLON'"' != ":" & `"`after'"' != "" {
                    = while `""' != ":" & `": _d_rcs1 _d_rcs_udca1 _d_rcs_sever
> e_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"' != "
> " {
                    - gettoken COLON after : after, parse(":") bind match(par) 
> quotes
                    - if "`par'" != "" {
                    = if "" != "" {
                      local before `before' (`COLON')
                      local COLON
                      }
                    - else if `"`COLON'"' != ":" {
                    = else if `":"' != ":" {
                      local before `"`before' `COLON'"'
                      local COLON
                      }
                    - }
                    - while `"`COLON'"' != ":" & `"`after'"' != "" {
                    = while `":"' != ":" & `" _d_rcs1 _d_rcs_udca1 _d_rcs_sever
> e_disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"' != "
> " {
                      gettoken COLON after : after, parse(":") bind match(par) 
> quotes
                      if "`par'" != "" {
                      local before `before' (`COLON')
                      local COLON
                      }
                      else if `"`COLON'"' != ":" {
                      local before `"`before' `COLON'"'
                      local COLON
                      }
                      }
                    - if `"`COLON'"' != ":" {
                    = if `":"' != ":" {
                      di as err "'' found where ':' expected"
                      exit 198
                      }
                    - sreturn local before `"`before'"'
                    = sreturn local before `"INDEPVARS "'
                    - sreturn local after `"`after'"'
                    = sreturn local after `" _d_rcs1 _d_rcs_udca1 _d_rcs_severe
> _disease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                    ----------------------------------- end _on_colon_parse ---
                  - local 0 `"`s(before)'"'
                  = local 0 `"INDEPVARS "'
                  - syntax name(id="macro name" name=user)
                  - local 0 `"`s(after)'"'
                  = local 0 `" _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_r
> cs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                  - syntax [varlist(ts fv default=none)] [, MIN(integer 1) MAX(
> integer 32000) NAME(string) ]
                  - c_local `user' `varlist'
                  = c_local INDEPVARS _d_rcs1 _d_rcs_udca1 _d_rcs_severe_diseas
> e1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1
                  - local n : list sizeof varlist
                  - if (`min' <= `n' & `n' <= `max') exit
                  = if (1 <= 6 & 6 <= 32000) exit
                  ---------------------------------------------- end fvunab ---
                - }
                - if inlist("noconstant", "`noconstant'", "`constant'") {
                = if inlist("noconstant", "noconstant", "") {
                - if "`INDEPVARS'" == "" & ! `.nocons_ignore' {
                = if "_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs_covid_
> vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1" == "" & ! 0 {
                  di as err "independent variables are required when option noc
> onstant is specified"
                  exit 102
                  }
                - if "`NOCONS'" != "" {
                = if "" != "" {
                  local options `options' noconstant
                  }
                - local NOCONS 1
                - }
                - else local NOCONS 0
                - if `"`offset'`exposure'"' != "" {
                = if `""' != "" {
                  ._check_offset, `offset' `exposure'
                  local OFFSET "`s(offset)'"
                  local EXPOSURE = ("`exposure'" != "")
                  local OTHER `s(offset)'
                  }
                - else local EXPOSURE 0
                - local FREEPARM = `"`freeparm'"' != ""
                = local FREEPARM = `""' != ""
                - local OPTIONS
                - local SPACE
                - foreach OPTNAME of local OPTNAMES {
                - if `"``OPTNAME''"' != "" {
                = if `"noconstant"' != "" {
                - local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                = local OPTIONS `"noconstant"'
                - local SPACE " "
                - }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"`options'"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'`options'"'
                  }
                - .name = `"`NAME'"'
                = .name = `"dxb"'
                - .depvars = `"`DEPVARS'"'
                = .depvars = `""'
                - .hasequal = `hasequal'
                = .hasequal = 0
                - .indepvars = `"`:list retok INDEPVARS'"'
                = .indepvars = `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d
> _rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                - .other_markvars = `"`:list retok OTHER'"'
                = .other_markvars = `""'
                - .nocons = `NOCONS'
                = .nocons = 1
                - .if = `"`HOLDIF'"'
                = .if = `""'
                - .in = `"`HOLDIN'"'
                = .in = `""'
                - .wgt = `"`HOLDWGT'"'
                = .wgt = `""'
                - .offset = `"`OFFSET'"'
                = .offset = `""'
                - .exposure = `EXPOSURE'
                = .exposure = 0
                - .freeparm = `FREEPARM'
                = .freeparm = 0
                - .options = `"`OPTIONS'"'
                = .options = `"noconstant"'
                ----------------------------------------- end _eqspec.parse ---
              - }
              - if `i' <= `.n_depvars.arrnels' {
              = if 3 <= 1 {
                local ndep = `.n_depvars[`i']'
                }
              - .eq_list[`i'] = ._eqspec.new, numdepvars(`ndep') `.needequal' `
> .noneedvarlist' wtypes(`.wtypes') `.nocons_ignore'
              = .eq_list[3] = ._eqspec.new, numdepvars(0) needequal noneedvarli
> st wtypes() 
                ----------------------------------------- begin _eqspec.new ---
                - version 9.2
                - syntax [, NUMDEPvars(numlist integer >=0 max=1) NEEDEQUAL noN
> EEDVARLIST WTYPES(string) IGNORENOCONS ]
                - .n_depvars = 1
                - if `:list sizeof numdepvars' {
                = if 1 {
                - .n_depvars = `numdepvars'
                = .n_depvars = 0
                - }
                - .needequal = ("`needequal'" != "")
                = .needequal = ("needequal" != "")
                - .needvarlist = ("`needvarlist'" == "")
                = .needvarlist = ("noneedvarlist" == "")
                - .nocons_ignore = ("`ignorenocons'" != "")
                = .nocons_ignore = ("" != "")
                - .wtypes = "`wtypes'"
                = .wtypes = ""
                ------------------------------------------- end _eqspec.new ---
              - .eq_list[`i'].parse `.eq_opts_allowed.objkey':`EQ_`i''
              = .eq_list[3].parse __key(585c100):xb0: udca male age_tv o.any_hi
> gh_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3
>  bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_f
> irst liver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid
> _vacc_first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1
                --------------------------------------- begin _eqspec.parse ---
                - version 9.2
                - _on_colon_parse `0'
                = _on_colon_parse __key(585c100):xb0: udca male age_tv o.any_hi
> gh_risk_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3
>  bmi_cat4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_f
> irst liver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid
> _vacc_first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1
                  ----------------------------------- begin _on_colon_parse ---
                  - version 8.2
                  - sreturn local before ""
                  - sreturn local after ""
                  - gettoken before after : 0, parse(":") bind match(par) quote
> s
                  - if "`par'" != "" {
                  = if "" != "" {
                    local before `"(`before')"'
                    }
                  - if `"`before'"' == ":" {
                  = if `"__key(585c100)"' == ":" {
                    sreturn local after `"`after'"'
                    exit
                    }
                  - while `"`COLON'"' != ":" & `"`after'"' != "" {
                  = while `""' != ":" & `":xb0: udca male age_tv o.any_high_ris
> k_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_c
> at4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first l
> iver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_
> first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1"' != "" {
                  - gettoken COLON after : after, parse(":") bind match(par) qu
> otes
                  - if "`par'" != "" {
                  = if "" != "" {
                    local before `before' (`COLON')
                    local COLON
                    }
                  - else if `"`COLON'"' != ":" {
                  = else if `":"' != ":" {
                    local before `"`before' `COLON'"'
                    local COLON
                    }
                  - }
                  - while `"`COLON'"' != ":" & `"`after'"' != "" {
                  = while `":"' != ":" & `"xb0: udca male age_tv o.any_high_ris
> k_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_c
> at4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first l
> iver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_
> first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1"' != "" {
                    gettoken COLON after : after, parse(":") bind match(par) qu
> otes
                    if "`par'" != "" {
                    local before `before' (`COLON')
                    local COLON
                    }
                    else if `"`COLON'"' != ":" {
                    local before `"`before' `COLON'"'
                    local COLON
                    }
                    }
                  - if `"`COLON'"' != ":" {
                  = if `":"' != ":" {
                    di as err "'' found where ':' expected"
                    exit 198
                    }
                  - sreturn local before `"`before'"'
                  = sreturn local before `"__key(585c100)"'
                  - sreturn local after `"`after'"'
                  = sreturn local after `"xb0: udca male age_tv o.any_high_risk
> _condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_ca
> t4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first li
> ver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_f
> irst1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1"'
                  ------------------------------------- end _on_colon_parse ---
                - local ol `s(before)'
                = local ol __key(585c100)
                - if `:list sizeof ol' {
                = if 1 {
                - local OPTLIST `"`.`ol'.dumpoptions'"'
                  ------------------------------ begin _optlist.dumpoptions ---
                  - version 9
                  - forval i = 1/`.options.arrnels' {
                  = forval i = 1/4 {
                  - local optlist `optlist' `.options[`i']'
                  = local optlist  NOCONStant
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm OFFset(passthru)
                  - }
                  - local optlist `optlist' `.options[`i']'
                  = local optlist NOCONStant FREEParm OFFset(passthru) EXPosure
> (passthru)
                  - }
                  - local optlist : list uniq optlist
                  - sreturn local optlist `"`optlist'"'
                  = sreturn local optlist `"NOCONStant FREEParm OFFset(passthru
> ) EXPosure(passthru)"'
                  - class exit `"`optlist'"'
                  = class exit `"NOCONStant FREEParm OFFset(passthru) EXPosure(
> passthru)"'
                  -------------------------------- end _optlist.dumpoptions ---
                = local OPTLIST `"NOCONStant FREEParm OFFset(passthru) EXPosure
> (passthru)"'
                - local OPTNAMES `"`.`ol'.dumpnames'"'
                  -------------------------------- begin _optlist.dumpnames ---
                  - version 9
                  - forval i = 1/`.names.arrnels' {
                  = forval i = 1/4 {
                  - local namelist `namelist' `.names[`i']'
                  = local namelist  noconstant
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm offset
                  - }
                  - local namelist `namelist' `.names[`i']'
                  = local namelist noconstant freeparm offset exposure
                  - }
                  - local namelist : list uniq namelist
                  - sreturn local namelist `"`namelist'"'
                  = sreturn local namelist `"noconstant freeparm offset exposur
> e"'
                  - class exit `"`namelist'"'
                  = class exit `"noconstant freeparm offset exposure"'
                  ---------------------------------- end _optlist.dumpnames ---
                = local OPTNAMES `"noconstant freeparm offset exposure"'
                - local NOCONS constant noconstant
                - if `"`:list NOCONS & OPTNAMES'"' == "" {
                = if `"noconstant"' == "" {
                  local NOCONS noCONStant
                  }
                - else local NOCONS
                - }
                - local 0 `"`s(after)'"'
                = local 0 `"xb0: udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_
> rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_
> liver_trans1 _s0_rcs_age_tv1"'
                - if `"`.wtypes'"' != "" {
                = if `""' != "" {
                  local wgt "[`.wtypes']"
                  }
                - syntax [anything(equalok)] [if] [in] `wgt' [, `OPTLIST' `NOCO
> NS' *]
                = syntax [anything(equalok)] [if] [in]  [, NOCONStant FREEParm 
> OFFset(passthru) EXPosure(passthru)  *]
                - local HOLDIF `"`if'"'
                = local HOLDIF `""'
                - local HOLDIN `"`in'"'
                = local HOLDIN `""'
                - if "`wgt'" != "" & "`weight'" != "" {
                = if "" != "" & "" != "" {
                  local HOLDWGT `"[`weight'`exp']"'
                  }
                - gettoken NAME REST : anything, parse(":")
                - if trim("`NAME'") == ":" {
                = if trim("xb0") == ":" {
                  di as err "nothing found where equation name expected"
                  exit 198
                  }
                - if `:list sizeof REST' {
                = if 28 {
                - if strpos(`"`NAME'"', ":") {
                = if strpos(`"xb0"', ":") {
                  capture _msparse `NAME'
                  if c(rc) {
                  di as err "{bf:`NAME'} invalid equation specification"
                  exit 198
                  }
                  }
                - else {
                - ._confirm_eqname `NAME'
                = ._confirm_eqname xb0
                  --------------------------- begin _eqspec._confirm_eqname ---
                  - version 9.2
                  - capture confirm number `0'
                  = capture confirm number xb0
                  - if (! c(rc)) exit
                  - local hasdot = strpos(`"`0'"',".")
                  = local hasdot = strpos(`"xb0"',".")
                  - if `hasdot' {
                  = if 0 {
                    syntax varname(ts)
                    exit
                    }
                  - capture syntax name(id="equation name")
                  - if (! c(rc)) exit
                  ----------------------------- end _eqspec._confirm_eqname ---
                - }
                - local NAME : list retok NAME
                - gettoken COLON anything : REST, parse(":")
                - }
                - else {
                  local NAME
                  }
                - gettoken DEPVARS REST : anything, parse("=") bind
                - if "`DEPVARS'" == "=" {
                = if "udca male age_tv o.any_high_risk_condition eth_bin imd1 i
> md2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 sm
> oking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rcs1 _s0_rc
> s_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liver_trans
> 1 _s0_rcs_age_tv1" == "=" {
                  local REST : copy local anything
                  local DEPVARS
                  }
                - if (`:length local DEPVARS' == 0 & `.n_depvars') {
                = if (305 == 0 & 0) {
                  di as err "nothing found where depvar expected"
                  exit 198
                  }
                - if `"`REST'"' == "" {
                = if `""' == "" {
                - if 0`.needequal' {
                = if 01 {
                - if `.needvarlist' | (`:length local DEPVARS' != 0 & `.n_depva
> rs') {
                = if 0 | (305 != 0 & 0) {
                  di as err "equal sign required to separate depvars from indep
> vars"
                  exit 198
                  }
                - }
                - local DEPVARS
                - local n_deps : list sizeof anything
                - if `n_deps' != 0 | `.needvarlist' {
                = if 27 != 0 | 0 {
                - if `n_deps' < `.n_depvars' {
                = if 27 < 0 {
                  error 102
                  }
                - forval j = 1/`.n_depvars' {
                = forval j = 1/0 {
                  gettoken YY anything : anything
                  local DEPVARS `DEPVARS' `YY'
                  }
                - local INDEPVARS : list retok anything
                - }
                - loca hasequal 0
                - }
                - else {
                  gettoken EQ INDEPVARS : REST, parse("=") bind
                  local hasequal 1
                  }
                - if `:list sizeof DEPVARS' {
                = if 0 {
                  _fv_check_depvar `DEPVARS'
                  tsunab DEPVARS : `DEPVARS'
                  }
                - if `:list sizeof INDEPVARS' {
                = if 27 {
                - fvunab INDEPVARS : `INDEPVARS'
                = fvunab INDEPVARS : udca male age_tv o.any_high_risk_condition
>  eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_c
> at5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans 
> _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_
> rcs_liver_trans1 _s0_rcs_age_tv1
                  -------------------------------------------- begin fvunab ---
                  - version 11
                  - _on_colon_parse `0'
                  = _on_colon_parse INDEPVARS : udca male age_tv o.any_high_ris
> k_condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_c
> at4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first l
> iver_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_
> first1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1
                    --------------------------------- begin _on_colon_parse ---
                    - version 8.2
                    - sreturn local before ""
                    - sreturn local after ""
                    - gettoken before after : 0, parse(":") bind match(par) quo
> tes
                    - if "`par'" != "" {
                    = if "" != "" {
                      local before `"(`before')"'
                      }
                    - if `"`before'"' == ":" {
                    = if `"INDEPVARS "' == ":" {
                      sreturn local after `"`after'"'
                      exit
                      }
                    - while `"`COLON'"' != ":" & `"`after'"' != "" {
                    = while `""' != ":" & `": udca male age_tv o.any_high_risk_
> condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat
> 4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liv
> er_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_fi
> rst1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1"' != "" {
                    - gettoken COLON after : after, parse(":") bind match(par) 
> quotes
                    - if "`par'" != "" {
                    = if "" != "" {
                      local before `before' (`COLON')
                      local COLON
                      }
                    - else if `"`COLON'"' != ":" {
                    = else if `":"' != ":" {
                      local before `"`before' `COLON'"'
                      local COLON
                      }
                    - }
                    - while `"`COLON'"' != ":" & `"`after'"' != "" {
                    = while `":"' != ":" & `" udca male age_tv o.any_high_risk_
> condition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat
> 4 o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liv
> er_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_fi
> rst1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1"' != "" {
                      gettoken COLON after : after, parse(":") bind match(par) 
> quotes
                      if "`par'" != "" {
                      local before `before' (`COLON')
                      local COLON
                      }
                      else if `"`COLON'"' != ":" {
                      local before `"`before' `COLON'"'
                      local COLON
                      }
                      }
                    - if `"`COLON'"' != ":" {
                    = if `":"' != ":" {
                      di as err "'' found where ':' expected"
                      exit 198
                      }
                    - sreturn local before `"`before'"'
                    = sreturn local before `"INDEPVARS "'
                    - sreturn local after `"`after'"'
                    = sreturn local after `" udca male age_tv o.any_high_risk_c
> ondition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4
>  o.bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first live
> r_trans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_fir
> st1 _s0_rcs_liver_trans1 _s0_rcs_age_tv1"'
                    ----------------------------------- end _on_colon_parse ---
                  - local 0 `"`s(before)'"'
                  = local 0 `"INDEPVARS "'
                  - syntax name(id="macro name" name=user)
                  - local 0 `"`s(after)'"'
                  = local 0 `" udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rc
> s1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_li
> ver_trans1 _s0_rcs_age_tv1"'
                  - syntax [varlist(ts fv default=none)] [, MIN(integer 1) MAX(
> integer 32000) NAME(string) ]
                  - c_local `user' `varlist'
                  = c_local INDEPVARS udca male age_tv o.any_high_risk_conditio
> n eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_
> cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
>  _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0
> _rcs_liver_trans1 _s0_rcs_age_tv1
                  - local n : list sizeof varlist
                  - if (`min' <= `n' & `n' <= `max') exit
                  = if (1 <= 27 & 27 <= 32000) exit
                  ---------------------------------------------- end fvunab ---
                - }
                - if inlist("noconstant", "`noconstant'", "`constant'") {
                = if inlist("noconstant", "", "") {
                  if "`INDEPVARS'" == "" & ! `.nocons_ignore' {
                  di as err "independent variables are required when option noc
> onstant is specified"
                  exit 102
                  }
                  if "`NOCONS'" != "" {
                  local options `options' noconstant
                  }
                  local NOCONS 1
                  }
                - else local NOCONS 0
                - if `"`offset'`exposure'"' != "" {
                = if `""' != "" {
                  ._check_offset, `offset' `exposure'
                  local OFFSET "`s(offset)'"
                  local EXPOSURE = ("`exposure'" != "")
                  local OTHER `s(offset)'
                  }
                - else local EXPOSURE 0
                - local FREEPARM = `"`freeparm'"' != ""
                = local FREEPARM = `""' != ""
                - local OPTIONS
                - local SPACE
                - foreach OPTNAME of local OPTNAMES {
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"``OPTNAME''"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'``OPTNAME''"'
                  local SPACE " "
                  }
                - }
                - if `"`options'"' != "" {
                = if `""' != "" {
                  local OPTIONS `"`OPTIONS'`SPACE'`options'"'
                  }
                - .name = `"`NAME'"'
                = .name = `"xb0"'
                - .depvars = `"`DEPVARS'"'
                = .depvars = `""'
                - .hasequal = `hasequal'
                = .hasequal = 0
                - .indepvars = `"`:list retok INDEPVARS'"'
                = .indepvars = `"udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_
> rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_
> liver_trans1 _s0_rcs_age_tv1"'
                - .other_markvars = `"`:list retok OTHER'"'
                = .other_markvars = `""'
                - .nocons = `NOCONS'
                = .nocons = 0
                - .if = `"`HOLDIF'"'
                = .if = `""'
                - .in = `"`HOLDIN'"'
                = .in = `""'
                - .wgt = `"`HOLDWGT'"'
                = .wgt = `""'
                - .offset = `"`OFFSET'"'
                = .offset = `""'
                - .exposure = `EXPOSURE'
                = .exposure = 0
                - .freeparm = `FREEPARM'
                = .freeparm = 0
                - .options = `"`OPTIONS'"'
                = .options = `""'
                ----------------------------------------- end _eqspec.parse ---
              - }
              - local MARKOPTLIST `"`.mark_opts.dumpoptions'"'
                -------------------------------- begin _optlist.dumpoptions ---
                - version 9
                - forval i = 1/`.options.arrnels' {
                = forval i = 1/0 {
                  local optlist `optlist' `.options[`i']'
                  }
                - local optlist : list uniq optlist
                - sreturn local optlist `"`optlist'"'
                = sreturn local optlist `""'
                - class exit `"`optlist'"'
                = class exit `""'
                ---------------------------------- end _optlist.dumpoptions ---
              = local MARKOPTLIST `""'
              - local MARKOPTNAMES `"`.mark_opts.dumpnames'"'
                ---------------------------------- begin _optlist.dumpnames ---
                - version 9
                - forval i = 1/`.names.arrnels' {
                = forval i = 1/0 {
                  local namelist `namelist' `.names[`i']'
                  }
                - local namelist : list uniq namelist
                - sreturn local namelist `"`namelist'"'
                = sreturn local namelist `""'
                - class exit `"`namelist'"'
                = class exit `""'
                ------------------------------------ end _optlist.dumpnames ---
              = local MARKOPTNAMES `""'
              - local OPTLIST1 : subinstr local MARKOPTLIST "(passthru)" "(stri
> ng asis)", all
              - local RMCOLLOPTLIST `"`.rmcoll_opts.dumpoptions'"'
                -------------------------------- begin _optlist.dumpoptions ---
                - version 9
                - forval i = 1/`.options.arrnels' {
                = forval i = 1/0 {
                  local optlist `optlist' `.options[`i']'
                  }
                - local optlist : list uniq optlist
                - sreturn local optlist `"`optlist'"'
                = sreturn local optlist `""'
                - class exit `"`optlist'"'
                = class exit `""'
                ---------------------------------- end _optlist.dumpoptions ---
              = local RMCOLLOPTLIST `""'
              - local RMCOLLOPTNAMES `"`.rmcoll_opts.dumpnames'"'
                ---------------------------------- begin _optlist.dumpnames ---
                - version 9
                - forval i = 1/`.names.arrnels' {
                = forval i = 1/0 {
                  local namelist `namelist' `.names[`i']'
                  }
                - local namelist : list uniq namelist
                - sreturn local namelist `"`namelist'"'
                = sreturn local namelist `""'
                - class exit `"`namelist'"'
                = class exit `""'
                ------------------------------------ end _optlist.dumpnames ---
              = local RMCOLLOPTNAMES `""'
              - local OPTLIST2 : subinstr local RMCOLLOPTLIST "(passthru)" "(st
> ring asis)", all
              - local RMDCOLLOPTLIST `"`.rmdcoll_opts.dumpoptions'"'
                -------------------------------- begin _optlist.dumpoptions ---
                - version 9
                - forval i = 1/`.options.arrnels' {
                = forval i = 1/0 {
                  local optlist `optlist' `.options[`i']'
                  }
                - local optlist : list uniq optlist
                - sreturn local optlist `"`optlist'"'
                = sreturn local optlist `""'
                - class exit `"`optlist'"'
                = class exit `""'
                ---------------------------------- end _optlist.dumpoptions ---
              = local RMDCOLLOPTLIST `""'
              - local RMDCOLLOPTNAMES `"`.rmdcoll_opts.dumpnames'"'
                ---------------------------------- begin _optlist.dumpnames ---
                - version 9
                - forval i = 1/`.names.arrnels' {
                = forval i = 1/0 {
                  local namelist `namelist' `.names[`i']'
                  }
                - local namelist : list uniq namelist
                - sreturn local namelist `"`namelist'"'
                = sreturn local namelist `""'
                - class exit `"`namelist'"'
                = class exit `""'
                ------------------------------------ end _optlist.dumpnames ---
              = local RMDCOLLOPTNAMES `""'
              - local OPTLIST3 : subinstr local RMDCOLLOPTLIST "(passthru)" "(s
> tring asis)", all
              - local 0 `", `GL_op'"'
              = local 0 `", "'
              - syntax [, `OPTLIST1' `OPTLIST2' `OPTLIST3' COLlinear noCONStant
>  *]
              = syntax [,    COLlinear noCONStant *]
              - local GL_op `"`options'"'
              = local GL_op `""'
              - if `"`collinear'"' != "" {
              = if `""' != "" {
                local GL_op `"`GL_op' `collinear'"'
                .collinear = "`collinear'"
                }
              - if `"`constant'"' != "" {
              = if `""' != "" {
                local GL_op `"`GL_op' `constant'"'
                .nocons = "`constant'"
                }
              - local I 0
              - foreach OPT of local MARKOPTNAMES {
                if `:list sizeof `OPT'' {
                .mark_list[`++I'] = ._eqspec.new, numdep(0) wtypes(`.wtypes')
                .mark_list[`I'].parse "" : ``OPT''
                .mark_name.Arrpush "`OPT'"
                }
                }
              - local I 0
              - foreach OPT of local RMCOLLOPTNAMES {
                if `:list sizeof `OPT'' {
                .rmcoll_list[`++I'] = ._eqspec.new, numdep(0) wtypes(`.wtypes')
                .rmcoll_list[`I'].parse "" : ``OPT''
                .rmcoll_name.Arrpush "`OPT'"
                }
                }
              - local I 0
              - foreach OPT of local RMDCOLLOPTNAMES {
                if `:list sizeof `OPT'' {
                .rmdcoll_list[`++I'] = ._eqspec.new, wtypes(`.wtypes')
                .rmdcoll_list[`I'].parse "" : ``OPT''
                .rmdcoll_name.Arrpush "`OPT'"
                }
                }
              - .n_eq = `EQ_n'
              = .n_eq = 3
              - .gl_if = `"`GL_if'"'
              = .gl_if = `""'
              - .gl_in = `"`GL_in'"'
              = .gl_in = `""'
              - .gl_wgt = `"`GL_wt'"'
              = .gl_wgt = `""'
              - .gl_options = `"`:list retok GL_op'"'
              = .gl_options = `""'
              ------------------------------------------- end _eqlist.parse ---
            - if "`subpop'" != "" & "`missing'" == "" {
            = if "" != "" & "" == "" {
              if `interactive' {
              SetGlobalVar ML_samp : _MLtu
              }
              else {
              global ML_samp : tempvar
              if `"`moptobj'"' != "" {
              global ML_samp `moptobj'$ML_samp
              }
              }
              tempvar markuse
              _svy_setup $ML_sample $ML_samp, svy subpop(`subpop')
              quietly gen byte `markuse' = $ML_samp
              }
            - else global ML_samp $ML_sample
            = else global ML_samp __00000R
            - if "`collinear'" == "" {
            = if "collinear" == "" {
              .`eqlist'.rmcoll $ML_samp, replace `missing'
              }
            - else if "`missing'" == "" {
            = else if "" == "" {
            - .`eqlist'.markout $ML_samp, replace
            = .__00000S.markout __00000R, replace
              --------------------------------------- begin _eqlist.markout ---
              - version 9.2
              - syntax name(name=TOUSE id="mark variable") [, REPLACE ALLDEPSMI
> Ssing]
              - if "`replace'" != "" {
              = if "replace" != "" {
              - confirm variable `TOUSE', exact
              = confirm variable __00000R, exact
              - tempname TOUSE2
              - mark `TOUSE2' `.global if' `.global in'
                -------------------------------------- begin _eqlist.global ---
                - version 9.2
                - args item
                - ._check_gl_item_name item, `item'
                = ._check_gl_item_name item, if
                  ----------------------- begin _eqlist._check_gl_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, IF IN WGT OPTions]
                  - if c(rc) error 198
                  - c_local `c_item' `if' `in' `wgt' `options'
                  = c_local item if   
                  ------------------------- end _eqlist._check_gl_item_name ---
                - local value `"`.gl_`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ---------------------------------------- end _eqlist.global ---
                -------------------------------------- begin _eqlist.global ---
                - version 9.2
                - args item
                - ._check_gl_item_name item, `item'
                = ._check_gl_item_name item, in
                  ----------------------- begin _eqlist._check_gl_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, IF IN WGT OPTions]
                  - if c(rc) error 198
                  - c_local `c_item' `if' `in' `wgt' `options'
                  = c_local item  in  
                  ------------------------- end _eqlist._check_gl_item_name ---
                - local value `"`.gl_`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ---------------------------------------- end _eqlist.global ---
              = mark __00000T  
              - quietly replace `TOUSE' = 0 if `TOUSE2' == 0
              = quietly replace __00000R = 0 if __00000T == 0
              - drop `TOUSE2'
              = drop __00000T
              - }
              - else {
                mark `TOUSE' `.global if' `.global in'
                }
              - forval i = 1/`.eq count' {
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "count" == "count" {
                - sreturn local value `"`.n_eq'"'
                = sreturn local value `"3"'
                - class exit `"`s(value)'"'
                = class exit `"3"'
                -------------------------------------------- end _eqlist.eq ---
              = forval i = 1/3 {
              - .eq_list[`i'].markout `TOUSE', `alldepsmissing'
              = .eq_list[1].markout __00000R, 
                ------------------------------------- begin _eqspec.markout ---
                - version 9.2
                - syntax name(name=touse id="mark variable") [, ALLDEPSMISsing]
                - confirm variable `touse', exact
                = confirm variable __00000R, exact
                - if "`alldepsmissing'" == "" {
                = if "" == "" {
                - markout `touse' `.item depvars' `.item indepvars'
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, depvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item  depvars          
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item depvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `""'
                  - sreturn local value `"`value'"'
                  = sreturn local value `""'
                  - class exit `"`value'"'
                  = class exit `""'
                  ---------------------------------------- end _eqspec.item ---
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, indepvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item   indepvars         
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item indepvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"udca male age_tv o.any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5
>  smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rc
> s1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _
> rcs_age_tv1"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"udca male age_tv o.any_high_risk_cond
> ition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.
> bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_t
> rans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_
> trans1 _rcs_age_tv1"'
                  - class exit `"`value'"'
                  = class exit `"udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs
> 1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _r
> cs_age_tv1"'
                  ---------------------------------------- end _eqspec.item ---
                = markout __00000R  udca male age_tv o.any_high_risk_condition 
> eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_ca
> t5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _
> rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1
>  _rcs_age_tv1
                - markout `touse' `.item other', strok
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, other
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 1 {
                    - local other other_markvars
                    - }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item       other_markvars     
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item other_markvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `""'
                  - sreturn local value `"`value'"'
                  = sreturn local value `""'
                  - class exit `"`value'"'
                  = class exit `""'
                  ---------------------------------------- end _eqspec.item ---
                = markout __00000R , strok
                - }
                - else {
                  markout `touse' `.item indepvars'
                  markout `touse' `.item other', strok
                  tempname touse2
                  gen byte `touse2' = 0
                  local xvars `.item depvars'
                  foreach xvar of local xvars {
                  quietly replace `touse2' = 1 if !missing(`xvar')
                  }
                  quietly replace `touse' = 0 if `touse2' == 0
                  }
                --------------------------------------- end _eqspec.markout ---
              - }
              - .eq_list[`i'].markout `TOUSE', `alldepsmissing'
              = .eq_list[2].markout __00000R, 
                ------------------------------------- begin _eqspec.markout ---
                - version 9.2
                - syntax name(name=touse id="mark variable") [, ALLDEPSMISsing]
                - confirm variable `touse', exact
                = confirm variable __00000R, exact
                - if "`alldepsmissing'" == "" {
                = if "" == "" {
                - markout `touse' `.item depvars' `.item indepvars'
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, depvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item  depvars          
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item depvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `""'
                  - sreturn local value `"`value'"'
                  = sreturn local value `""'
                  - class exit `"`value'"'
                  = class exit `""'
                  ---------------------------------------- end _eqspec.item ---
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, indepvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item   indepvars         
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item indepvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _
> d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_di
> sease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                  - class exit `"`value'"'
                  = class exit `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d
> _rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                  ---------------------------------------- end _eqspec.item ---
                = markout __00000R  _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1
>  _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1
                - markout `touse' `.item other', strok
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, other
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 1 {
                    - local other other_markvars
                    - }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item       other_markvars     
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item other_markvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `""'
                  - sreturn local value `"`value'"'
                  = sreturn local value `""'
                  - class exit `"`value'"'
                  = class exit `""'
                  ---------------------------------------- end _eqspec.item ---
                = markout __00000R , strok
                - }
                - else {
                  markout `touse' `.item indepvars'
                  markout `touse' `.item other', strok
                  tempname touse2
                  gen byte `touse2' = 0
                  local xvars `.item depvars'
                  foreach xvar of local xvars {
                  quietly replace `touse2' = 1 if !missing(`xvar')
                  }
                  quietly replace `touse' = 0 if `touse2' == 0
                  }
                --------------------------------------- end _eqspec.markout ---
              - }
              - .eq_list[`i'].markout `TOUSE', `alldepsmissing'
              = .eq_list[3].markout __00000R, 
                ------------------------------------- begin _eqspec.markout ---
                - version 9.2
                - syntax name(name=touse id="mark variable") [, ALLDEPSMISsing]
                - confirm variable `touse', exact
                = confirm variable __00000R, exact
                - if "`alldepsmissing'" == "" {
                = if "" == "" {
                - markout `touse' `.item depvars' `.item indepvars'
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, depvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item  depvars          
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item depvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `""'
                  - sreturn local value `"`value'"'
                  = sreturn local value `""'
                  - class exit `"`value'"'
                  = class exit `""'
                  ---------------------------------------- end _eqspec.item ---
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, indepvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item   indepvars         
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item indepvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"udca male age_tv o.any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5
>  smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0
> _rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs
> _liver_trans1 _s0_rcs_age_tv1"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"udca male age_tv o.any_high_risk_cond
> ition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.
> bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_t
> rans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1
>  _s0_rcs_liver_trans1 _s0_rcs_age_tv1"'
                  - class exit `"`value'"'
                  = class exit `"udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_
> rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_
> liver_trans1 _s0_rcs_age_tv1"'
                  ---------------------------------------- end _eqspec.item ---
                = markout __00000R  udca male age_tv o.any_high_risk_condition 
> eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_ca
> t5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _
> s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_r
> cs_liver_trans1 _s0_rcs_age_tv1
                - markout `touse' `.item other', strok
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, other
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 1 {
                    - local other other_markvars
                    - }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item       other_markvars     
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item other_markvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `""'
                  - sreturn local value `"`value'"'
                  = sreturn local value `""'
                  - class exit `"`value'"'
                  = class exit `""'
                  ---------------------------------------- end _eqspec.item ---
                = markout __00000R , strok
                - }
                - else {
                  markout `touse' `.item indepvars'
                  markout `touse' `.item other', strok
                  tempname touse2
                  gen byte `touse2' = 0
                  local xvars `.item depvars'
                  foreach xvar of local xvars {
                  quietly replace `touse2' = 1 if !missing(`xvar')
                  }
                  quietly replace `touse' = 0 if `touse2' == 0
                  }
                --------------------------------------- end _eqspec.markout ---
              - }
              - forval i = 1/`.mark_list.arrnels' {
              = forval i = 1/0 {
                .mark_list[`i'].markout `TOUSE'
                }
              - forval i = 1/`.rmcoll_list.arrnels' {
              = forval i = 1/0 {
                .rmcoll_list[`i'].markout `TOUSE'
                }
              - forval i = 1/`.rmdcoll_list.arrnels' {
              = forval i = 1/0 {
                .rmdcoll_list[`i'].markout `TOUSE'
                }
              ----------------------------------------- end _eqlist.markout ---
            - }
            - if "$ML_samp" != "$ML_sample" {
            = if "__00000R" != "__00000R" {
              `vv' quietly replace $ML_sample = 0 if `markuse' & !$ML_samp
              drop `markuse'
              }
            - local eq_n = `.`eqlist'.eq count'
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "count" == "count" {
              - sreturn local value `"`.n_eq'"'
              = sreturn local value `"3"'
              - class exit `"`s(value)'"'
              = class exit `"3"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_n = 3
            - global ML_n : copy local eq_n
            - global ML_dim = `.`eqlist'.dim'
              ------------------------------------------- begin _eqlist.dim ---
              - version 9.2
              - syntax
              - local neq = `.eq count'
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "count" == "count" {
                - sreturn local value `"`.n_eq'"'
                = sreturn local value `"3"'
                - class exit `"`s(value)'"'
                = class exit `"3"'
                -------------------------------------------- end _eqlist.eq ---
              = local neq = 3
              - forval i = 1/`neq' {
              = forval i = 1/3 {
              - local xvarsi `"`.eq indepvars `i''"'
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "indepvars" == "count" {
                  sreturn local value `"`.n_eq'"'
                  class exit `"`s(value)'"'
                  }
                - else if 0 < `idx' & `idx' <= `.n_eq' {
                = else if 0 < 1 & 1 <= 3 {
                - .eq_list[`idx'].item `item'
                = .eq_list[1].item indepvars
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, indepvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item   indepvars         
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item indepvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"udca male age_tv o.any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5
>  smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rc
> s1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _
> rcs_age_tv1"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"udca male age_tv o.any_high_risk_cond
> ition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.
> bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_t
> rans _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_
> trans1 _rcs_age_tv1"'
                  - class exit `"`value'"'
                  = class exit `"udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs
> 1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _r
> cs_age_tv1"'
                  ---------------------------------------- end _eqspec.item ---
                - class exit `"`s(value)'"'
                = class exit `"udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 
> _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs
> _age_tv1"'
                -------------------------------------------- end _eqlist.eq ---
              = local xvarsi `"udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 
> _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs
> _age_tv1"'
              - local noconsi `"`.eq nocons `i''"'
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "nocons" == "count" {
                  sreturn local value `"`.n_eq'"'
                  class exit `"`s(value)'"'
                  }
                - else if 0 < `idx' & `idx' <= `.n_eq' {
                = else if 0 < 1 & 1 <= 3 {
                - .eq_list[`idx'].item `item'
                = .eq_list[1].item nocons
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, nocons
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item        nocons    
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item nocons
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"0"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"0"'
                  - class exit `"`value'"'
                  = class exit `"0"'
                  ---------------------------------------- end _eqspec.item ---
                - class exit `"`s(value)'"'
                = class exit `"0"'
                -------------------------------------------- end _eqlist.eq ---
              = local noconsi `"0"'
              - local dim = `dim' + `:list sizeof xvarsi'
              = local dim =  + 27
              - if "`noconsi'" == "0" {
              = if "0" == "0" {
              - local ++dim
              - }
              - }
              - local xvarsi `"`.eq indepvars `i''"'
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "indepvars" == "count" {
                  sreturn local value `"`.n_eq'"'
                  class exit `"`s(value)'"'
                  }
                - else if 0 < `idx' & `idx' <= `.n_eq' {
                = else if 0 < 2 & 2 <= 3 {
                - .eq_list[`idx'].item `item'
                = .eq_list[2].item indepvars
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, indepvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item   indepvars         
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item indepvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _
> d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_di
> sease1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                  - class exit `"`value'"'
                  = class exit `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d
> _rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                  ---------------------------------------- end _eqspec.item ---
                - class exit `"`s(value)'"'
                = class exit `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_r
> cs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                -------------------------------------------- end _eqlist.eq ---
              = local xvarsi `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_r
> cs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
              - local noconsi `"`.eq nocons `i''"'
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "nocons" == "count" {
                  sreturn local value `"`.n_eq'"'
                  class exit `"`s(value)'"'
                  }
                - else if 0 < `idx' & `idx' <= `.n_eq' {
                = else if 0 < 2 & 2 <= 3 {
                - .eq_list[`idx'].item `item'
                = .eq_list[2].item nocons
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, nocons
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item        nocons    
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item nocons
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"1"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"1"'
                  - class exit `"`value'"'
                  = class exit `"1"'
                  ---------------------------------------- end _eqspec.item ---
                - class exit `"`s(value)'"'
                = class exit `"1"'
                -------------------------------------------- end _eqlist.eq ---
              = local noconsi `"1"'
              - local dim = `dim' + `:list sizeof xvarsi'
              = local dim = 28 + 6
              - if "`noconsi'" == "0" {
              = if "1" == "0" {
                local ++dim
                }
              - }
              - local xvarsi `"`.eq indepvars `i''"'
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "indepvars" == "count" {
                  sreturn local value `"`.n_eq'"'
                  class exit `"`s(value)'"'
                  }
                - else if 0 < `idx' & `idx' <= `.n_eq' {
                = else if 0 < 3 & 3 <= 3 {
                - .eq_list[`idx'].item `item'
                = .eq_list[3].item indepvars
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, indepvars
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item   indepvars         
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item indepvars
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"udca male age_tv o.any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5
>  smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0
> _rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs
> _liver_trans1 _s0_rcs_age_tv1"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"udca male age_tv o.any_high_risk_cond
> ition eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.
> bmi_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_t
> rans _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1
>  _s0_rcs_liver_trans1 _s0_rcs_age_tv1"'
                  - class exit `"`value'"'
                  = class exit `"udca male age_tv o.any_high_risk_condition eth
> _bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 
> smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_
> rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_
> liver_trans1 _s0_rcs_age_tv1"'
                  ---------------------------------------- end _eqspec.item ---
                - class exit `"`s(value)'"'
                = class exit `"udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rc
> s1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_li
> ver_trans1 _s0_rcs_age_tv1"'
                -------------------------------------------- end _eqlist.eq ---
              = local xvarsi `"udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rc
> s1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_li
> ver_trans1 _s0_rcs_age_tv1"'
              - local noconsi `"`.eq nocons `i''"'
                ------------------------------------------ begin _eqlist.eq ---
                - version 9.2
                - args item idx
                - if "`item'" == "count" {
                = if "nocons" == "count" {
                  sreturn local value `"`.n_eq'"'
                  class exit `"`s(value)'"'
                  }
                - else if 0 < `idx' & `idx' <= `.n_eq' {
                = else if 0 < 3 & 3 <= 3 {
                - .eq_list[`idx'].item `item'
                = .eq_list[3].item nocons
                  -------------------------------------- begin _eqspec.item ---
                  - version 9.2
                  - args item
                  - ._check_eq_item_name item, `item'
                  = ._check_eq_item_name item, nocons
                    --------------------- begin _eqspec._check_eq_item_name ---
                    - version 9.2
                    - capture syntax name(name=c_item) [, NAME DEPvars INDEPvar
> s IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                    - if c(rc) error 198
                    - if `:list sizeof other' {
                    = if 0 {
                      local other other_markvars
                      }
                    - local item `name' `depvars' `indepvars' `if' `in' `wgt' `
> other' `nocons' `offset' `exposure' `freeparm' `options'
                    = local item        nocons    
                    - if `:list sizeof item' != 1 {
                    = if 1 != 1 {
                      error 198
                      }
                    - c_local `c_item' `item'
                    = c_local item nocons
                    ----------------------- end _eqspec._check_eq_item_name ---
                  - local value `"`.`item''"'
                  = local value `"0"'
                  - sreturn local value `"`value'"'
                  = sreturn local value `"0"'
                  - class exit `"`value'"'
                  = class exit `"0"'
                  ---------------------------------------- end _eqspec.item ---
                - class exit `"`s(value)'"'
                = class exit `"0"'
                -------------------------------------------- end _eqlist.eq ---
              = local noconsi `"0"'
              - local dim = `dim' + `:list sizeof xvarsi'
              = local dim = 34 + 27
              - if "`noconsi'" == "0" {
              = if "0" == "0" {
              - local ++dim
              - }
              - }
              - sreturn local value `"`dim'"'
              = sreturn local value `"62"'
              - class exit `"`s(value)'"'
              = class exit `"62"'
              --------------------------------------------- end _eqlist.dim ---
            = global ML_dim = 62
            - forval i = 1/`eq_n' {
            = forval i = 1/3 {
            - local depvars `.`eqlist'.eq depvars `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "depvars" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 1 & 1 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[1].item depvars
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, depvars
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item  depvars          
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item depvars
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `""'
              ---------------------------------------------- end _eqlist.eq ---
            = local depvars 
            - local eq `.`eqlist'.eq name `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "name" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 1 & 1 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[1].item name
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, name
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item name           
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item name
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"xb"'
                - sreturn local value `"`value'"'
                = sreturn local value `"xb"'
                - class exit `"`value'"'
                = class exit `"xb"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"xb"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq xb
            - if !`:length local eq' {
            = if !2 {
              local eq eq`i'
              }
            - if `:list eq in eqnames' {
            = if 0 {
              di as err "equation '`eq'' multiply defined"
              exit 110
              }
            - local eqnames `eqnames' `eq'
            = local eqnames  xb
            - fvexpand `.`eqlist'.eq indepvars `i'' if $ML_samp
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "indepvars" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 1 & 1 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[1].item indepvars
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, indepvars
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item   indepvars         
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item indepvars
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"udca male age_tv o.any_high_risk_condition eth_
> bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 s
> moking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1
>  _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rc
> s_age_tv1"'
                - sreturn local value `"`value'"'
                = sreturn local value `"udca male age_tv o.any_high_risk_condit
> ion eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bm
> i_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_tra
> ns _rcs1 _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_tr
> ans1 _rcs_age_tv1"'
                - class exit `"`value'"'
                = class exit `"udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 
> _rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs
> _age_tv1"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"udca male age_tv o.any_high_risk_condition eth_bin
>  imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smok
> ing1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _r
> cs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_a
> ge_tv1"'
              ---------------------------------------------- end _eqlist.eq ---
            = fvexpand udca male age_tv o.any_high_risk_condition eth_bin imd1 
> imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 s
> moking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _rcs_udc
> a1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_age_tv1
>  if __00000R
            - if "`r(tsops)'" == "true" {
            = if "" == "true" {
              global ML_preserve no
              }
            - local eq_rhs`i' `"`r(varlist)'"'
            = local eq_rhs1 `"udca male age_tv o.any_high_risk_condition eth_bi
> n imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smo
> king1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _rcs1 _
> rcs_udca1 _rcs_severe_disease1 _rcs_covid_vacc_first1 _rcs_liver_trans1 _rcs_
> age_tv1"'
            - local eq_nocons`i' `.`eqlist'.eq nocons `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "nocons" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 1 & 1 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[1].item nocons
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, nocons
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item        nocons    
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item nocons
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_nocons1 0
            - local eq_offset`i' `.`eqlist'.eq offset `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "offset" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 1 & 1 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[1].item offset
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, offset
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item         offset   
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item offset
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `""'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_offset1 
            - local eq_exposure`i' `.`eqlist'.eq exposure `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "exposure" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 1 & 1 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[1].item exposure
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, exposure
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item          exposure  
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item exposure
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_exposure1 0
            - local eq_freeparm`i' `.`eqlist'.eq freeparm `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "freeparm" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 1 & 1 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[1].item freeparm
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, freeparm
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item           freeparm 
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item freeparm
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_freeparm1 0
            - local lhs `lhs' `depvars'
            = local lhs  
            - local eq_names `eq_names' `eq'
            = local eq_names  xb
            - local nxvars :list sizeof eq_rhs`i'
            = local nxvars :list sizeof eq_rhs1
            - local TMP : copy local eq_rhs`i'
            = local TMP : copy local eq_rhs1
            - forval j = 1/`nxvars' {
            = forval j = 1/27 {
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
> "'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1"'
            - }
            - if `eq_freeparm`i'' {
            = if 0 {
              if `nxvars' {
              di as err "{it:xvars} not allowed with option {bf:freeparm}"
              exit 198
              }
              if strpos(`"`eq'"', ":") {
              local colna `"`colna' /`eq'"'
              }
              else {
              local colna `"`colna' /:`eq'"'
              }
              }
            - else if !`eq_nocons`i'' {
            = else if !0 {
            - local colna `"`colna' `eq':_cons"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons"'
            - }
            - if "`moptobj'" != "" {
            = if "" != "" {
              if "`eq_offset`i''" != "" {
              if usubstr("`eq_offset`i''",1,2)=="__" {
              capture clonevar `moptobj'`eq_offset`i'' = `eq_offset`i''
              local dropmetoo `dropmetoo' `moptobj'`eq_offset`i''
              }
              }
              }
            - }
            - local depvars `.`eqlist'.eq depvars `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "depvars" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 2 & 2 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[2].item depvars
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, depvars
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item  depvars          
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item depvars
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `""'
              ---------------------------------------------- end _eqlist.eq ---
            = local depvars 
            - local eq `.`eqlist'.eq name `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "name" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 2 & 2 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[2].item name
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, name
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item name           
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item name
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"dxb"'
                - sreturn local value `"`value'"'
                = sreturn local value `"dxb"'
                - class exit `"`value'"'
                = class exit `"dxb"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"dxb"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq dxb
            - if !`:length local eq' {
            = if !3 {
              local eq eq`i'
              }
            - if `:list eq in eqnames' {
            = if 0 {
              di as err "equation '`eq'' multiply defined"
              exit 110
              }
            - local eqnames `eqnames' `eq'
            = local eqnames xb dxb
            - fvexpand `.`eqlist'.eq indepvars `i'' if $ML_samp
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "indepvars" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 2 & 2 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[2].item indepvars
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, indepvars
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item   indepvars         
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item indepvars
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_
> rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                - sreturn local value `"`value'"'
                = sreturn local value `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_dise
> ase1 _d_rcs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                - class exit `"`value'"'
                = class exit `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_r
> cs_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs
> _covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
              ---------------------------------------------- end _eqlist.eq ---
            = fvexpand _d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rcs_covid
> _vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1 if __00000R
            - if "`r(tsops)'" == "true" {
            = if "" == "true" {
              global ML_preserve no
              }
            - local eq_rhs`i' `"`r(varlist)'"'
            = local eq_rhs2 `"_d_rcs1 _d_rcs_udca1 _d_rcs_severe_disease1 _d_rc
> s_covid_vacc_first1 _d_rcs_liver_trans1 _d_rcs_age_tv1"'
            - local eq_nocons`i' `.`eqlist'.eq nocons `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "nocons" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 2 & 2 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[2].item nocons
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, nocons
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item        nocons    
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item nocons
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"1"'
                - sreturn local value `"`value'"'
                = sreturn local value `"1"'
                - class exit `"`value'"'
                = class exit `"1"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"1"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_nocons2 1
            - local eq_offset`i' `.`eqlist'.eq offset `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "offset" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 2 & 2 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[2].item offset
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, offset
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item         offset   
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item offset
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `""'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_offset2 
            - local eq_exposure`i' `.`eqlist'.eq exposure `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "exposure" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 2 & 2 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[2].item exposure
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, exposure
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item          exposure  
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item exposure
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_exposure2 0
            - local eq_freeparm`i' `.`eqlist'.eq freeparm `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "freeparm" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 2 & 2 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[2].item freeparm
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, freeparm
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item           freeparm 
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item freeparm
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_freeparm2 0
            - local lhs `lhs' `depvars'
            = local lhs  
            - local eq_names `eq_names' `eq'
            = local eq_names xb dxb
            - local nxvars :list sizeof eq_rhs`i'
            = local nxvars :list sizeof eq_rhs2
            - local TMP : copy local eq_rhs`i'
            = local TMP : copy local eq_rhs2
            - forval j = 1/`nxvars' {
            = forval j = 1/6 {
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1"'
            - }
            - if `eq_freeparm`i'' {
            = if 0 {
              if `nxvars' {
              di as err "{it:xvars} not allowed with option {bf:freeparm}"
              exit 198
              }
              if strpos(`"`eq'"', ":") {
              local colna `"`colna' /`eq'"'
              }
              else {
              local colna `"`colna' /:`eq'"'
              }
              }
            - else if !`eq_nocons`i'' {
            = else if !1 {
              local colna `"`colna' `eq':_cons"'
              }
            - if "`moptobj'" != "" {
            = if "" != "" {
              if "`eq_offset`i''" != "" {
              if usubstr("`eq_offset`i''",1,2)=="__" {
              capture clonevar `moptobj'`eq_offset`i'' = `eq_offset`i''
              local dropmetoo `dropmetoo' `moptobj'`eq_offset`i''
              }
              }
              }
            - }
            - local depvars `.`eqlist'.eq depvars `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "depvars" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 3 & 3 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[3].item depvars
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, depvars
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item  depvars          
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item depvars
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `""'
              ---------------------------------------------- end _eqlist.eq ---
            = local depvars 
            - local eq `.`eqlist'.eq name `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "name" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 3 & 3 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[3].item name
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, name
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item name           
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item name
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"xb0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"xb0"'
                - class exit `"`value'"'
                = class exit `"xb0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"xb0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq xb0
            - if !`:length local eq' {
            = if !3 {
              local eq eq`i'
              }
            - if `:list eq in eqnames' {
            = if 0 {
              di as err "equation '`eq'' multiply defined"
              exit 110
              }
            - local eqnames `eqnames' `eq'
            = local eqnames xb dxb xb0
            - fvexpand `.`eqlist'.eq indepvars `i'' if $ML_samp
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "indepvars" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 3 & 3 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[3].item indepvars
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, indepvars
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item   indepvars         
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item indepvars
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"udca male age_tv o.any_high_risk_condition eth_
> bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 s
> moking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_r
> cs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_l
> iver_trans1 _s0_rcs_age_tv1"'
                - sreturn local value `"`value'"'
                = sreturn local value `"udca male age_tv o.any_high_risk_condit
> ion eth_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bm
> i_cat5 smoking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_tra
> ns _s0_rcs1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _
> s0_rcs_liver_trans1 _s0_rcs_age_tv1"'
                - class exit `"`value'"'
                = class exit `"udca male age_tv o.any_high_risk_condition eth_b
> in imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 sm
> oking1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rc
> s1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_li
> ver_trans1 _s0_rcs_age_tv1"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"udca male age_tv o.any_high_risk_condition eth_bin
>  imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smok
> ing1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rcs1
>  _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_live
> r_trans1 _s0_rcs_age_tv1"'
              ---------------------------------------------- end _eqlist.eq ---
            = fvexpand udca male age_tv o.any_high_risk_condition eth_bin imd1 
> imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smoking1 s
> moking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rcs1 _s0_r
> cs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liver_tran
> s1 _s0_rcs_age_tv1 if __00000R
            - if "`r(tsops)'" == "true" {
            = if "" == "true" {
              global ML_preserve no
              }
            - local eq_rhs`i' `"`r(varlist)'"'
            = local eq_rhs3 `"udca male age_tv o.any_high_risk_condition eth_bi
> n imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smo
> king1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans _s0_rcs
> 1 _s0_rcs_udca1 _s0_rcs_severe_disease1 _s0_rcs_covid_vacc_first1 _s0_rcs_liv
> er_trans1 _s0_rcs_age_tv1"'
            - local eq_nocons`i' `.`eqlist'.eq nocons `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "nocons" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 3 & 3 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[3].item nocons
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, nocons
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item        nocons    
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item nocons
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_nocons3 0
            - local eq_offset`i' `.`eqlist'.eq offset `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "offset" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 3 & 3 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[3].item offset
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, offset
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item         offset   
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item offset
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `""'
                - sreturn local value `"`value'"'
                = sreturn local value `""'
                - class exit `"`value'"'
                = class exit `""'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `""'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_offset3 
            - local eq_exposure`i' `.`eqlist'.eq exposure `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "exposure" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 3 & 3 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[3].item exposure
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, exposure
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item          exposure  
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item exposure
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_exposure3 0
            - local eq_freeparm`i' `.`eqlist'.eq freeparm `i''
              -------------------------------------------- begin _eqlist.eq ---
              - version 9.2
              - args item idx
              - if "`item'" == "count" {
              = if "freeparm" == "count" {
                sreturn local value `"`.n_eq'"'
                class exit `"`s(value)'"'
                }
              - else if 0 < `idx' & `idx' <= `.n_eq' {
              = else if 0 < 3 & 3 <= 3 {
              - .eq_list[`idx'].item `item'
              = .eq_list[3].item freeparm
                ---------------------------------------- begin _eqspec.item ---
                - version 9.2
                - args item
                - ._check_eq_item_name item, `item'
                = ._check_eq_item_name item, freeparm
                  ----------------------- begin _eqspec._check_eq_item_name ---
                  - version 9.2
                  - capture syntax name(name=c_item) [, NAME DEPvars INDEPvars 
> IF IN WGT OTHER NOCONS OFFset EXPosure FREEParm OPTions ]
                  - if c(rc) error 198
                  - if `:list sizeof other' {
                  = if 0 {
                    local other other_markvars
                    }
                  - local item `name' `depvars' `indepvars' `if' `in' `wgt' `ot
> her' `nocons' `offset' `exposure' `freeparm' `options'
                  = local item           freeparm 
                  - if `:list sizeof item' != 1 {
                  = if 1 != 1 {
                    error 198
                    }
                  - c_local `c_item' `item'
                  = c_local item freeparm
                  ------------------------- end _eqspec._check_eq_item_name ---
                - local value `"`.`item''"'
                = local value `"0"'
                - sreturn local value `"`value'"'
                = sreturn local value `"0"'
                - class exit `"`value'"'
                = class exit `"0"'
                ------------------------------------------ end _eqspec.item ---
              - class exit `"`s(value)'"'
              = class exit `"0"'
              ---------------------------------------------- end _eqlist.eq ---
            = local eq_freeparm3 0
            - local lhs `lhs' `depvars'
            = local lhs  
            - local eq_names `eq_names' `eq'
            = local eq_names xb dxb xb0
            - local nxvars :list sizeof eq_rhs`i'
            = local nxvars :list sizeof eq_rhs3
            - local TMP : copy local eq_rhs`i'
            = local TMP : copy local eq_rhs3
            - forval j = 1/`nxvars' {
            = forval j = 1/27 {
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1 xb0
> :_s0_rcs_severe_disease1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1 xb0
> :_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1 xb0
> :_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_rcs_liver_tran
> s1"'
            - }
            - gettoken xvar TMP : TMP
            - local colna `"`colna' `eq':`xvar'"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1 xb0
> :_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_rcs_liver_tran
> s1 xb0:_s0_rcs_age_tv1"'
            - }
            - if `eq_freeparm`i'' {
            = if 0 {
              if `nxvars' {
              di as err "{it:xvars} not allowed with option {bf:freeparm}"
              exit 198
              }
              if strpos(`"`eq'"', ":") {
              local colna `"`colna' /`eq'"'
              }
              else {
              local colna `"`colna' /:`eq'"'
              }
              }
            - else if !`eq_nocons`i'' {
            = else if !0 {
            - local colna `"`colna' `eq':_cons"'
            = local colna `" xb:udca xb:male xb:age_tv xb:o.any_high_risk_condi
> tion xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_ca
> t2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking
> 3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1
>  xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_r
> cs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 d
> xb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:ud
> ca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0
> :imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:b
> mi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_di
> sease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1 xb0
> :_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_rcs_liver_tran
> s1 xb0:_s0_rcs_age_tv1 xb0:_cons"'
            - }
            - if "`moptobj'" != "" {
            = if "" != "" {
              if "`eq_offset`i''" != "" {
              if usubstr("`eq_offset`i''",1,2)=="__" {
              capture clonevar `moptobj'`eq_offset`i'' = `eq_offset`i''
              local dropmetoo `dropmetoo' `moptobj'`eq_offset`i''
              }
              }
              }
            - }
            - if "`moptobj'" != "" {
            = if "" != "" {
              foreach y of local lhs {
              if usubstr("`y'",1,2)=="__" {
              capture clonevar `moptobj'`y' = `y'
              local tmp `tmp' `moptobj'`y'
              local dropmetoo `dropmetoo' `moptobj'`y'
              }
              else {
              local tmp `tmp' `y'
              }
              }
              local lhs `tmp'
              }
            - if `waldtest' > 0 & `:length local lf0' {
            = if 0 > 0 & 0 {
              opts_exclusive "waldtest() lf0()"
              }
            - if `:length local continue' {
            = if 0 {
              if !`:length local init' {
              tempname init
              local ub0 `init'
              }
              else tempname ub0
              mat `ub0' = e(b)
              tempname v0 iv0
              mat `v0' = e(V)
              mat `iv0' = syminv(`v0')
              global ML_rank0 = colsof(`v0') - diag0cnt(`iv0')
              if !`:length local lf0' & !missing(e(ll)) {
              local lf0 `=colsof(`ub0')' `e(ll)'
              }
              local ub0
              }
            - if `:length local init' {
            = if 13 {
            - tempname b0
            - local dim : list sizeof colna
            - matrix `b0' = J(1,`dim',0)
            = matrix __00000T = J(1,62,0)
            - matrix colna `b0' = `colna'
            = matrix colna __00000T =  xb:udca xb:male xb:age_tv xb:o.any_high_
> risk_condition xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1
>  xb:bmi_cat2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb
> :o.smoking3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:
> _rcs_udca1 xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_tr
> ans1 xb:_rcs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_
> disease1 dxb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_
> tv1 xb0:udca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb
> 0:imd1 xb0:imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_
> cat3 xb0:bmi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0
> :severe_disease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs
> _udca1 xb0:_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_rcs_
> liver_trans1 xb0:_s0_rcs_age_tv1 xb0:_cons
            - `vv' _mkvec `b0', from(`init') update first error("initial vector
> ")
            = version 11.1: _mkvec __00000T, from(__00000B,copy) update first e
> rror("initial vector")
              ------------------------------------------------ begin _mkvec ---
              - local vv : display "version " string(_caller()) ":"
              - version 6
              - gettoken matout 0 : 0, parse(", ")
              - if "`matout'"=="" | "`matout'"=="," {
              = if "__00000T"=="" | "__00000T"=="," {
                error 198
                }
              - syntax [, FROM(str) UPdate COLnames(str) ERRor(str) FIRST ]
              - if "`update'"!="" {
              = if "update"!="" {
              - if "`colname'"!="" {
              = if ""!="" {
                di in red "update and colnames() cannot both be " "specified"
                exit 198
                }
              - capture local colname : colfullnames `matout'
              = capture local colname : colfullnames __00000T
              - if _rc {
                di in red "matrix `matout' not found"
                exit 111
                }
              - if rowsof(matrix(`matout')) != 1 {
              = if rowsof(matrix(__00000T)) != 1 {
                di in red "`matout' matrix to be updated must be " "a row vecto
> r"
                exit 503
                }
              - local matin `matout'
              = local matin __00000T
              - }
              - if `"`error'"'!="" {
              = if `"initial vector"'!="" {
              - local error `"`error': "'
              = local error `"initial vector: "'
              - }
              - tempname mat
              - if `"`from'"'!="" {
              = if `"__00000B,copy"'!="" {
              - From `from'
              = From __00000B,copy
                ----------------------------------------- begin _mkvec.From ---
                - gettoken from 0 : 0, parse(",") bind
                - sret clear
                - sret local from `from'
                = sret local from __00000B
                - if `"`0'"'!="" {
                = if `",copy"'!="" {
                - syntax [, COPY SKIP ]
                - }
                - sret local copy `copy'
                = sret local copy copy
                - sret local skip `skip'
                = sret local skip 
                ------------------------------------------- end _mkvec.From ---
              - local copy `s(copy)'
              = local copy copy
              - local skip `s(skip)'
              = local skip 
              - if "`copy'"!="" {
              = if "copy"!="" {
              - CopyMat `mat' `"`error'"' `s(from)'
              = CopyMat __00000U `"initial vector: "' __00000B
                -------------------------------------- begin _mkvec.CopyMat ---
                - args matall error
                - tempname matadd
                - local i 3
                - while "``i''"!="" {
                = while "__00000B"!="" {
                - capture di matrix(``i''[1,1])
                = capture di matrix(__00000B[1,1])
                - if _rc == 0 {
                - ChkMat `matadd' ``i'' `"`error'"'
                = ChkMat __00000V __00000B `"initial vector: "'
                  ------------------------------------- begin _mkvec.ChkMat ---
                  - args matout matin error
                  - capture di matrix(`matin'[1,1])
                  = capture di matrix(__00000B[1,1])
                  - if _rc {
                    capture confirm number `matin'
                    if _rc {
                    di in red `"`error'matrix `matin' not found"'
                    exit 111
                    }
                    di in red `"`error'list of numbers requires copy option"'
                    exit 198
                    }
                  - if matrix(rowsof(`matin')!=1 & colsof(`matin')!=1) {
                  = if matrix(rowsof(__00000B)!=1 & colsof(__00000B)!=1) {
                    di in red "`matin' " matrix(rowsof(`matin')) " x " matrix(c
> olsof(`matin')) " is not a vector"
                    exit 503
                    }
                  - if matrix(rowsof(`matin')) == 1 {
                  = if matrix(rowsof(__00000B)) == 1 {
                  - mat `matout' = `matin'
                  = mat __00000V = __00000B
                  - }
                  - else mat `matout' = `matin''
                  = else mat __00000V = __00000B'
                  --------------------------------------- end _mkvec.ChkMat ---
                - }
                - else {
                  capture confirm number ``i''
                  if _rc {
                  di in red `"`error'copy option requires "' "either a matrix o
> r a list of numbers"
                  exit 198
                  }
                  mat `matadd' = J(1,1,``i'')
                  }
                - mat `matall' = nullmat(`matall') , `matadd'
                = mat __00000U = nullmat(__00000U) , __00000V
                - local i = `i' + 1
                = local i = 3 + 1
                - }
                - while "``i''"!="" {
                = while ""!="" {
                  capture di matrix(``i''[1,1])
                  if _rc == 0 {
                  ChkMat `matadd' ``i'' `"`error'"'
                  }
                  else {
                  capture confirm number ``i''
                  if _rc {
                  di in red `"`error'copy option requires "' "either a matrix o
> r a list of numbers"
                  exit 198
                  }
                  mat `matadd' = J(1,1,``i'')
                  }
                  mat `matall' = nullmat(`matall') , `matadd'
                  local i = `i' + 1
                  }
                ---------------------------------------- end _mkvec.CopyMat ---
              - if `"`colname'"'!="" {
              = if `"xb:udca xb:male xb:age_tv xb:o.any_high_risk_condition xb:
> eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_cat2 xb:bm
> i_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking3 xb:sev
> ere_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1 xb:_rcs
> _severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_rcs_age_t
> v1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 dxb:_d_rc
> s_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:udca xb0:m
> ale xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0:imd2 xb
> 0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:bmi_cat4 
> xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_disease xb
> 0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1 xb0:_s0_rcs
> _severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_rcs_liver_trans1 xb0:_
> s0_rcs_age_tv1 xb0:_cons"'!="" {
              - local dim : list sizeof colname
              - if `dim' != colsof(matrix(`mat')) {
              = if 62 != colsof(matrix(__00000U)) {
                di in red `"`error'matrix must "' `"be dimension "' `dim'
                exit 503
                }
              - `vv' mat colnames `mat' = `colname'
              = version 11.1: mat colnames __00000U = xb:udca xb:male xb:age_tv
>  xb:o.any_high_risk_condition xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:i
> md5 xb:bmi_cat1 xb:bmi_cat2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1
>  xb:smoking2 xb:o.smoking3 xb:severe_disease xb:covid_vacc_first xb:liver_tra
> ns xb:_rcs1 xb:_rcs_udca1 xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 x
> b:_rcs_liver_trans1 xb:_rcs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb
> :_d_rcs_severe_disease1 dxb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 
> dxb:_d_rcs_age_tv1 xb0:udca xb0:male xb0:age_tv xb0:o.any_high_risk_condition
>  xb0:eth_bin xb0:imd1 xb0:imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bm
> i_cat2 xb0:bmi_cat3 xb0:bmi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0
> :o.smoking3 xb0:severe_disease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_r
> cs1 xb0:_s0_rcs_udca1 xb0:_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_firs
> t1 xb0:_s0_rcs_liver_trans1 xb0:_s0_rcs_age_tv1 xb0:_cons
              - }
              - }
              - else {
                `vv' BuildMat `mat' `"`error'"' "`skip'" `s(from)'
                if `"`colname'"'!="" {
                `vv' ChkNames `mat' "`matin'" `"`colname'"' `"`error'"' "`skip'
> " "`first'"
                local fill `s(k_fill)'
                }
                }
              - }
              - else {
                local fill 0
                if "`update'"!="" {
                mat `mat' = `matin'
                }
                else if `"`colname'"'!="" {
                local dim : list sizeof colname
                mat `mat' = J(1,`dim',0)
                `vv' mat colnames `mat' = `colname'
                }
                else {
                di in red "from() must be specified"
                exit 198
                }
                }
              - sret clear
              - sret local copy `copy'
              = sret local copy copy
              - sret local skip `skip'
              = sret local skip 
              - sret local k = colsof(matrix(`mat'))
              = sret local k = colsof(matrix(__00000U))
              - if "`fill'"!="" {
              = if ""!="" {
                sret local k_fill `fill'
                }
              - else sret local k_fill = colsof(matrix(`mat'))
              = else sret local k_fill = colsof(matrix(__00000U))
              - matrix rename `mat' `matout', replace
              = matrix rename __00000U __00000T, replace
              -------------------------------------------------- end _mkvec ---
            - }
            - tempname bomit
            - matrix `bomit' = J(1,`:list sizeof colna',0)
            = matrix __00000U = J(1,62,0)
            - matrix colna `bomit' = `colna'
            = matrix colna __00000U =  xb:udca xb:male xb:age_tv xb:o.any_high_
> risk_condition xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1
>  xb:bmi_cat2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb
> :o.smoking3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:
> _rcs_udca1 xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_tr
> ans1 xb:_rcs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_
> disease1 dxb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_
> tv1 xb0:udca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb
> 0:imd1 xb0:imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_
> cat3 xb0:bmi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0
> :severe_disease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs
> _udca1 xb0:_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_rcs_
> liver_trans1 xb0:_s0_rcs_age_tv1 xb0:_cons
            - _ms_omit_info `bomit'
            = _ms_omit_info __00000U
            - if r(k_omit) | `:length local constraints' {
            = if r(k_omit) | 154 {
            - nobreak {
            - capture noisily break {
            - _b_post0 `colna'
            = _b_post0  xb:udca xb:male xb:age_tv xb:o.any_high_risk_condition 
> xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_cat1 xb:bmi_cat2 xb
> :bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking2 xb:o.smoking3 xb:
> severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1 xb:_rcs_udca1 xb:_
> rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_liver_trans1 xb:_rcs_ag
> e_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_severe_disease1 dxb:_d
> _rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_age_tv1 xb0:udca xb
> 0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bin xb0:imd1 xb0:imd2
>  xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:bmi_cat3 xb0:bmi_ca
> t4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3 xb0:severe_disease
>  xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0_rcs_udca1 xb0:_s0_
> rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_rcs_liver_trans1 xb
> 0:_s0_rcs_age_tv1 xb0:_cons
              ---------------------------------------------- begin _b_post0 ---
              - version 11
              - tempname b V
              - local dim : list sizeof 0
              - matrix `b' = J( 1,`dim',0)
              = matrix __00000V = J( 1,62,0)
              - matrix `V' = J(`dim',`dim',0)
              = matrix __00000W = J(62,62,0)
              - matrix colnames `b' = `0'
              = matrix colnames __00000V = xb:udca xb:male xb:age_tv xb:o.any_h
> igh_risk_condition xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_
> cat1 xb:bmi_cat2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking
> 2 xb:o.smoking3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1
>  xb:_rcs_udca1 xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_live
> r_trans1 xb:_rcs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_sev
> ere_disease1 dxb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_
> age_tv1 xb0:udca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bi
> n xb0:imd1 xb0:imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:
> bmi_cat3 xb0:bmi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3
>  xb0:severe_disease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0
> _rcs_udca1 xb0:_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_
> rcs_liver_trans1 xb0:_s0_rcs_age_tv1 xb0:_cons
              - matrix colnames `V' = `0'
              = matrix colnames __00000W = xb:udca xb:male xb:age_tv xb:o.any_h
> igh_risk_condition xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_
> cat1 xb:bmi_cat2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking
> 2 xb:o.smoking3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1
>  xb:_rcs_udca1 xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_live
> r_trans1 xb:_rcs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_sev
> ere_disease1 dxb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_
> age_tv1 xb0:udca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bi
> n xb0:imd1 xb0:imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:
> bmi_cat3 xb0:bmi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3
>  xb0:severe_disease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0
> _rcs_udca1 xb0:_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_
> rcs_liver_trans1 xb0:_s0_rcs_age_tv1 xb0:_cons
              - matrix rownames `V' = `0'
              = matrix rownames __00000W = xb:udca xb:male xb:age_tv xb:o.any_h
> igh_risk_condition xb:eth_bin xb:imd1 xb:imd2 xb:imd3 xb:imd4 xb:imd5 xb:bmi_
> cat1 xb:bmi_cat2 xb:bmi_cat3 xb:bmi_cat4 xb:o.bmi_cat5 xb:smoking1 xb:smoking
> 2 xb:o.smoking3 xb:severe_disease xb:covid_vacc_first xb:liver_trans xb:_rcs1
>  xb:_rcs_udca1 xb:_rcs_severe_disease1 xb:_rcs_covid_vacc_first1 xb:_rcs_live
> r_trans1 xb:_rcs_age_tv1 xb:_cons dxb:_d_rcs1 dxb:_d_rcs_udca1 dxb:_d_rcs_sev
> ere_disease1 dxb:_d_rcs_covid_vacc_first1 dxb:_d_rcs_liver_trans1 dxb:_d_rcs_
> age_tv1 xb0:udca xb0:male xb0:age_tv xb0:o.any_high_risk_condition xb0:eth_bi
> n xb0:imd1 xb0:imd2 xb0:imd3 xb0:imd4 xb0:imd5 xb0:bmi_cat1 xb0:bmi_cat2 xb0:
> bmi_cat3 xb0:bmi_cat4 xb0:o.bmi_cat5 xb0:smoking1 xb0:smoking2 xb0:o.smoking3
>  xb0:severe_disease xb0:covid_vacc_first xb0:liver_trans xb0:_s0_rcs1 xb0:_s0
> _rcs_udca1 xb0:_s0_rcs_severe_disease1 xb0:_s0_rcs_covid_vacc_first1 xb0:_s0_
> rcs_liver_trans1 xb0:_s0_rcs_age_tv1 xb0:_cons
              - ereturn post `b' `V'
              = ereturn post __00000V __00000W
              ------------------------------------------------ end _b_post0 ---
            - local clist : subinstr local constraints "," " ", all
            - `vv' makecns `clist', `cnsnotes'
            = version 11.1: makecns 1999 1998 1997 1996 1995 1994 1993 1992 199
> 1 1990 1989 1988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 
> 1975 1974 1973 1972 1971 1970 1969, 
              ----------------------------------------------- begin makecns ---
              - if _caller() < 11 {
                MakeCns `0'
                exit
                }
              - _makecns `0'
              = _makecns 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989
>  1988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 1
> 973 1972 1971 1970 1969, 
              ------------------------------------------------- end makecns ---
            - local constraints `"`r(clist)'"'
            = local constraints `"1999 1998 1997 1996 1995 1994 1993 1992 1991 
> 1990 1989 1988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 19
> 75 1974 1973 1972 1971 1970 1969"'
            - local k_autoCns = e(k_autoCns)
            - tempname C
            - capture matrix `C' = e(Cns)
            = capture matrix __00000V = e(Cns)
            - local rcc = c(rc)
            - }
            - local rc = c(rc)
            - ereturn clear
            - }
            - if (`rc') exit `rc'
            = if (0) exit 0
            - if (`rcc') {
            = if (0) {
              local C
              local k_autoCns
              }
            - }
            - if `:length local constraints' {
            = if 154 {
            - local lf0
            - }
            - local vce `vce' `robust' `cluster'
            = local vce   
            - if `:length local vce' {
            = if 0 {
              _vce_parse, argoptlist(CLuster) optlist(OIM OPG Robust) old : `wt
> ', `vce'
              local vce `r(vce)'
              }
            - else if "`weight'" == "pweight" {
            = else if "" == "pweight" {
              local vce robust
              }
            - if `:length local svy' {
            = if 0 {
              local vce svy
              }
            - if `"`vce'"' == "cluster" {
            = if `""' == "cluster" {
              local cluster `r(cluster)'
              markout $ML_sample `cluster', strok
              }
            - if `:length local group' {
            = if 0 {
              markout $ML_sample `group', strok
              global ML_group : copy local group
              if bsubstr("`:type `group''",1,3) == "str" {
              if `interactive' {
              SetGlobalVar ML_grp : _MLgr
              }
              else {
              global ML_grp : tempvar
              if `"`moptobj'"' != "" {
              global ML_grp `moptobj'$ML_grp
              }
              }
              quietly egen $ML_grp = group(`group')
              if ! `:length local cluster' {
              local cluster : copy global ML_grp
              }
              }
              else {
              if ! `:length local cluster' {
              local cluster : copy global ML_group
              }
              }
              }
            - if "$ML_samp" != "$ML_sample" {
            = if "__00000R" != "__00000R" {
              quietly replace $ML_samp = 0 if $ML_samp & $ML_sample == 0
              }
            - if `:length local vce' == 0 {
            = if 0 == 0 {
            - if `"`technique'"' == "bhhh" {
            = if `""' == "bhhh" {
              local vce opg
              }
            - else local vce oim
            - }
            - if inlist("`vce'", "robust", "cluster") & bsubstr("`evaltype'",1,
> 1) == "d" {
            = if inlist("oim", "robust", "cluster") & bsubstr("lf2",1,1) == "d"
>  {
              local optname = cond("`svy'"=="","vce(`vce')","svy")
              di as err "option `optname' is not allowed with evaltype `evaltyp
> e'"
              exit 198
              }
            - if `:length local crittype' == 0 {
            = if 0 == 0 {
            - if inlist("`vce'", "cluster", "robust", "svy") {
            = if inlist("oim", "cluster", "robust", "svy") {
              local crittype "log pseudolikelihood"
              }
            - else local crittype "log likelihood"
            - }
            - global ML_waldtest `waldtest'
            = global ML_waldtest 0
            - if `:length local svy' | `:length local weight' {
            = if 0 | 0 {
              if `interactive' {
              SetGlobalVar ML_w : _MLw
              }
              else {
              global ML_w : tempvar
              if `"`moptobj'"' != "" {
              global ML_w `moptobj'$ML_w
              }
              }
              }
            - if `:length local weight' {
            = if 0 {
              if `"`moptobj'"' != "" {
              cap drop $ML_w
              }
              quietly gen double $ML_w `exp' if $ML_samp
              local wtype `"`weight'"'
              local wexp `"`exp'"'
              global ML_wtyp : copy local wtype
              global ML_wexp : copy local wexp
              if "`wtype'" == "iweight" | "`svy'" != "" {
              local zeroweight zeroweight
              }
              }
            - if inlist("`vce'", "svy", "cluster") {
            = if inlist("oim", "svy", "cluster") {
              if `interactive' {
              SetGlobalVar ML_subv : _MLsu
              }
              else {
              global ML_subv : tempvar
              if `"`moptobj'"' != "" {
              global ML_subv `moptobj'$ML_subv
              }
              }
              }
            - quietly count if $ML_sample
            = quietly count if __00000R
            - if r(N) == 0 {
              error 2000
              }
            - if `"`weight'"' != "" {
            = if `""' != "" {
              quietly count if $ML_sample & $ML_w != 0
              if r(N) == 0 {
              di in gr "all observation have zero weights"
              exit 2000
              }
              }
            - if `:length local lf0' {
            = if 0 {
              if `:list sizeof lf0' != 2 {
              di as err "lf0(`lf0') invalid"
              exit 198
              }
              global ML_k0 : word 1 of `lf0'
              global ML_ll_0 : word 2 of `lf0'
              confirm integer number $ML_k0
              confirm number $ML_ll_0
              if $ML_k0 < 0 {
              di as err "lf0(`lf0') invalid"
              exit 198
              }
              }
            - if "`obs'" == "" {
            = if "" == "" {
            - if "`wtype'" != "fweight" {
            = if "" != "fweight" {
            - quietly count if $ML_sample
            = quietly count if __00000R
            - local obs = r(N)
            - }
            - else {
              sum $ML_w if $ML_sample, mean
              local obs = r(sum)
              }
            - }
            - if `:length local iterid' {
            = if 0 {
              local iterid = trim(bsubstr(`"`iterid'"',1,32))
              }
            - if `:length local crittype' {
            = if 14 {
            - local crittype = trim(bsubstr(`"`crittype'"',1,32))
            = local crittype = trim(bsubstr(`"log likelihood"',1,32))
            - }
            - if `:length local derivscale' {
            = if 0 {
              confirm matrix `derivscale'
              }
            - if `:length local derivh' {
            = if 0 {
              confirm matrix `derivh'
              }
            - if `:length local gnwmatrix' {
            = if 0 {
              confirm matrix `gnwmatrix'
              }
            - `vv' mata: Mopt_model()
            = version 11.1: mata: Mopt_model()
            - global ML_stat model
            - if !`interactive' {
            = if !0 {
            - `vv' MaxMin `maxmin', nooutput `score' `options' moptobj(`moptobj
> ')
            = version 11.1: MaxMin maximize, nooutput  search(off) moptobj()
              ------------------------------------------- begin mopt.MaxMin ---
              - local vv : di "version " string(_caller()) ":"
              - version 12
              - ChkMacros
                -------------------------------------- begin mopt.ChkMacros ---
                - if "$ML_stat" != "model" {
                = if "model" != "model" {
                  di as err "you must issue -ml model- first"
                  exit 198
                  }
                - capture confirm var $ML_samp $ML_w $ML_subv
                = capture confirm var __00000R  
                - if c(rc) {
                  di as err "Since issuing the -ml model- statement, you have d
> one something to drop" _n "temporary variables ml added to your data.  You mu
> st start again."
                  Clear
                  exit 111
                  }
                ---------------------------------------- end mopt.ChkMacros ---
              - syntax name(name=maxmin) [, NEGH TOLerance(numlist max=1 >=0) L
> TOLerance(numlist max=1 >=0) NONRTOLerance NRTOLerance(numlist max=1 >=0) QTO
> Lerance(numlist max=1 >=0) GTOLerance(numlist max=1 >=0) ITERate(numlist max=
> 1 >=0) NOTCONCAVE(numlist max=1 >=0) ndami DIFficult HALFSTEPonly DOOPT SEArc
> h(name) Repeat(passthru) Bounds(string) SCore(string) noWARNing noCLEAR NOLOg
>  LOg DOTs SHOWTOLerance SHOWNRtolerance SHOWSTEP TRace COEFDIffs GRADient HES
> Sian noSKIPline noOUTput Level(cilevel) moptobj(string) * ]
              - if `:length local nrtolerance' {
              = if 0 {
                opts_exclusive "nrtolerance() `nonrtolerance'"
                }
              - if `:length local qtolerance' {
              = if 0 {
                opts_exclusive "qtolerance() `nonrtolerance'"
                }
              - opts_exclusive "`nonrtolerance' `shownrtolerance'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - if `:length local shownrtolerance' {
              = if 0 {
                local showtolerance showtolerance
                }
              - if "$ML_preserve" != "no" {
              = if "yes" != "no" {
              - if `:length local score' {
              = if 0 {
                di as err "May not specify score() option unless" _n "     a)  
> estimation subsample is the entire data in memory, or" _n "     b)  you speci
> fy nopreserve option on -ml model- statement (meaning" _n "         your eval
> uation program explicitly restricts itself to obs." _n "         for which $"
>  "ML_samp==1."
                exit 198
                }
              - preserve
              - local N = c(N)
              - quietly keep if $ML_sample
              = quietly keep if __00000R
              - if (`N' != c(N)) {
              = if (2870 != c(N)) {
              - mata: Mopt_init_regetviews()
              - }
              - }
              - if `:length local score' {
              = if 0 {
                SetupScore `"$ML_evaltype"' `"`score'"' $ML_n $ML_dim
                local scores "`s(scores)'"
                }
              - _parse_iterlog, `nolog' `log'
              = _parse_iterlog,  
                -------------------------------------- begin _parse_iterlog ---
                - version 16
                - syntax [, NOLOG LOG]
                - if "`log'`nolog'" != "" {
                = if "" != "" {
                  opts_exclusive "`log' `nolog'"
                  }
                - else if "`c(iterlog)'" == "on" {
                = else if "on" == "on" {
                - local log log
                - }
                - else {
                  local nolog nolog
                  }
                - sreturn local log `log'
                = sreturn local log log
                - sreturn local nolog `nolog'
                = sreturn local nolog 
                ---------------------------------------- end _parse_iterlog ---
              - local log "`s(nolog)'"
              = local log ""
              - local tropts `log' `dots' `showtolerance' `showstep' `trace' `c
> oefdiffs'
              = local tropts      
              - if "`tropts'" != "nolog" {
              = if "" != "nolog" {
              - local tropts `tropts' `gradient' `hessian'
              = local tropts   
              - if "`skipline'" == "" {
              = if "" == "" {
              - if "`iterate'" != "0" | `:length local tropts' {
              = if "" != "0" | 0 {
              - di

              - }
              - }
              - }
              - else {
                local gradient
                local hessian
                local nolog nolog
                }
              - if "`search'" != "off" & "`iterate'" != "0" {
              = if "off" != "off" & "" != "0" {
                if "`search'" == "quietly" {
                local sopts nolog
                }
                else {
                if `:length local tropts' {
                if "`tropts'" != "nolog" {
                local sopts trace
                }
                else local sopts nolog
                }
                }
                if "`search'" == "norescale" {
                local sopts `sopts' norescale
                }
                Search `bounds', nopreserve `sopts' `repeat' `maxmin'
                }
              - tempname value b V iV
              - `vv' mata: Mopt_maxmin()
              = version 11.1: mata: Mopt_maxmin()
Iteration 0:   log likelihood = -256.03414  (not concave)
Iteration 1:   log likelihood = -254.28889  (not concave)
Iteration 2:   log likelihood = -254.20244  (not concave)
Iteration 3:   log likelihood = -253.26262  (not concave)
Iteration 4:   log likelihood = -253.07764  (not concave)
Iteration 5:   log likelihood = -252.93622  (not concave)
Iteration 6:   log likelihood =  -252.8172  (not concave)
Iteration 7:   log likelihood = -252.71771  (not concave)
Iteration 8:   log likelihood = -252.63126  (not concave)
Iteration 9:   log likelihood = -252.55552  (not concave)
Iteration 10:  log likelihood = -252.48921  (not concave)
Iteration 11:  log likelihood = -252.43041  (not concave)
Iteration 12:  log likelihood =  -252.3781  (not concave)
Iteration 13:  log likelihood = -252.33136  (not concave)
Iteration 14:  log likelihood = -252.28944  (not concave)
Iteration 15:  log likelihood = -252.25183  (not concave)
Iteration 16:  log likelihood = -252.21795  (not concave)
Iteration 17:  log likelihood = -252.18747  (not concave)
Iteration 18:  log likelihood = -252.15996  (not concave)
Iteration 19:  log likelihood = -252.13516  (not concave)
Iteration 20:  log likelihood = -252.11275  (not concave)
Iteration 21:  log likelihood = -252.09252  (not concave)
Iteration 22:  log likelihood = -252.07422  (not concave)
Iteration 23:  log likelihood = -252.05769  (not concave)
Iteration 24:  log likelihood = -252.04273  (not concave)
Iteration 25:  log likelihood =  -252.0292  (not concave)
Iteration 26:  log likelihood = -252.01695  (not concave)
Iteration 27:  log likelihood = -252.00587  (not concave)
Iteration 28:  log likelihood = -251.99583  (not concave)
Iteration 29:  log likelihood = -251.98674  (not concave)
Iteration 30:  log likelihood =  -251.9785  (not concave)
Iteration 31:  log likelihood = -251.97105  (not concave)
Iteration 32:  log likelihood = -251.96428  (not concave)
Iteration 33:  log likelihood = -251.95815  (not concave)
Iteration 34:  log likelihood = -251.95259  (not concave)
Iteration 35:  log likelihood = -251.94755  (not concave)
Iteration 36:  log likelihood = -251.94298  (not concave)
Iteration 37:  log likelihood = -251.93883  (not concave)
Iteration 38:  log likelihood = -251.93506  (not concave)
Iteration 39:  log likelihood = -251.93164  (not concave)
Iteration 40:  log likelihood = -251.92853  (not concave)
Iteration 41:  log likelihood = -251.92571  (not concave)
Iteration 42:  log likelihood = -251.92479  (not concave)
Iteration 43:  log likelihood = -251.92404  (not concave)
Iteration 44:  log likelihood = -251.92334  (not concave)
Iteration 45:  log likelihood =   -251.923  (not concave)
Iteration 46:  log likelihood = -251.92259  (not concave)
Iteration 47:  log likelihood = -251.92201  (not concave)
Iteration 48:  log likelihood = -251.92167  (not concave)
Iteration 49:  log likelihood = -251.92123  (not concave)
Iteration 50:  log likelihood = -251.92098  (not concave)
Iteration 51:  log likelihood = -251.92064  (not concave)
Iteration 52:  log likelihood = -251.92038  (not concave)
Iteration 53:  log likelihood = -251.92012  (not concave)
Iteration 54:  log likelihood = -251.91972  (not concave)
Iteration 55:  log likelihood = -251.91934  (not concave)
Iteration 56:  log likelihood = -251.89751  (not concave)
Iteration 57:  log likelihood =  -251.8975  (not concave)
Iteration 58:  log likelihood = -251.89749  (not concave)
Iteration 59:  log likelihood = -251.89747  (not concave)
Iteration 60:  log likelihood = -251.89746  (not concave)
Iteration 61:  log likelihood = -251.89745  (not concave)
Iteration 62:  log likelihood = -251.89744  (not concave)
Iteration 63:  log likelihood = -251.89743  (not concave)
Iteration 64:  log likelihood = -251.89742  (not concave)
Iteration 65:  log likelihood =  -251.8974  (not concave)
Iteration 66:  log likelihood = -251.89739  (not concave)
Iteration 67:  log likelihood = -251.89738  (not concave)
Iteration 68:  log likelihood = -251.89737  (not concave)
Iteration 69:  log likelihood = -251.89736  (not concave)
Iteration 70:  log likelihood = -251.89735  (not concave)
Iteration 71:  log likelihood = -251.89734  (not concave)
Iteration 72:  log likelihood = -251.89732  (not concave)
Iteration 73:  log likelihood = -251.89731  (not concave)
Iteration 74:  log likelihood =  -251.8973  (not concave)
Iteration 75:  log likelihood = -251.89729  (not concave)
Iteration 76:  log likelihood = -251.89728  (not concave)
Iteration 77:  log likelihood = -251.89727  (not concave)
Iteration 78:  log likelihood = -251.89726  (not concave)
Iteration 79:  log likelihood = -251.89725  (not concave)
Iteration 80:  log likelihood = -251.89724  (not concave)
Iteration 81:  log likelihood = -251.89723  (not concave)
Iteration 82:  log likelihood = -251.89722  (not concave)
Iteration 83:  log likelihood =  -251.8972  (not concave)
Iteration 84:  log likelihood = -251.89719  (not concave)
Iteration 85:  log likelihood = -251.89718  (not concave)
Iteration 86:  log likelihood = -251.89717  (not concave)
Iteration 87:  log likelihood = -251.89716  (not concave)
Iteration 88:  log likelihood = -251.89715  (not concave)
Iteration 89:  log likelihood = -251.89714  (not concave)
Iteration 90:  log likelihood = -251.89713  (not concave)
Iteration 91:  log likelihood = -251.89712  (not concave)
Iteration 92:  log likelihood = -251.89711  (not concave)
Iteration 93:  log likelihood =  -251.8971  (not concave)
Iteration 94:  log likelihood = -251.89709  (not concave)
Iteration 95:  log likelihood = -251.89708  (not concave)
Iteration 96:  log likelihood = -251.89707  (not concave)
Iteration 97:  log likelihood = -251.89706  (not concave)
Iteration 98:  log likelihood = -251.89705  (not concave)
Iteration 99:  log likelihood = -251.89703  (not concave)
Iteration 100: log likelihood = -251.89702  (not concave)
Iteration 101: log likelihood = -251.89701  (not concave)
Iteration 102: log likelihood =   -251.897  (not concave)
Iteration 103: log likelihood = -251.89699  (not concave)
Iteration 104: log likelihood = -251.89698  (not concave)
Iteration 105: log likelihood = -251.89697  (not concave)
Iteration 106: log likelihood = -251.89696  (not concave)
Iteration 107: log likelihood = -251.89695  (not concave)
Iteration 108: log likelihood = -251.89694  (not concave)
Iteration 109: log likelihood = -251.89693  (not concave)
Iteration 110: log likelihood = -251.89692  (not concave)
Iteration 111: log likelihood = -251.89691  (not concave)
Iteration 112: log likelihood =  -251.8969  (not concave)
Iteration 113: log likelihood = -251.89689  (not concave)
Iteration 114: log likelihood = -251.89688  (not concave)
Iteration 115: log likelihood = -251.89687  (not concave)
Iteration 116: log likelihood = -251.89686  (not concave)
Iteration 117: log likelihood = -251.89685  (not concave)
Iteration 118: log likelihood = -251.89684  (not concave)
Iteration 119: log likelihood = -251.89683  (not concave)
Iteration 120: log likelihood = -251.89682  (not concave)
Iteration 121: log likelihood = -251.89681  (not concave)
Iteration 122: log likelihood =  -251.8968  (not concave)
Iteration 123: log likelihood = -251.89679  (not concave)
Iteration 124: log likelihood = -251.89678  (not concave)
Iteration 125: log likelihood = -251.89677  (not concave)
Iteration 126: log likelihood = -251.89676  (not concave)
Iteration 127: log likelihood = -251.89675  (not concave)
Iteration 128: log likelihood = -251.89674  (not concave)
Iteration 129: log likelihood = -251.89673  (not concave)
Iteration 130: log likelihood = -251.89672  (not concave)
Iteration 131: log likelihood = -251.89671  (not concave)
Iteration 132: log likelihood =  -251.8967  (not concave)
Iteration 133: log likelihood = -251.89669  (not concave)
Iteration 134: log likelihood = -251.89668  (not concave)
Iteration 135: log likelihood = -251.89667  (not concave)
Iteration 136: log likelihood = -251.89666  (not concave)
Iteration 137: log likelihood = -251.89665  (not concave)
Iteration 138: log likelihood = -251.89664  (not concave)
Iteration 139: log likelihood = -251.89663  (not concave)
Iteration 140: log likelihood = -251.89662  (not concave)
Iteration 141: log likelihood = -251.89661  (not concave)
Iteration 142: log likelihood =  -251.8966  (not concave)
Iteration 143: log likelihood = -251.89659  (not concave)
Iteration 144: log likelihood = -251.89658  (not concave)
Iteration 145: log likelihood = -251.89657  (not concave)
Iteration 146: log likelihood = -251.89656  (not concave)
Iteration 147: log likelihood = -251.89655  (not concave)
Iteration 148: log likelihood = -251.89654  (not concave)
Iteration 149: log likelihood = -251.89653  (not concave)
Iteration 150: log likelihood = -251.89652  (not concave)
Iteration 151: log likelihood = -251.89651  (not concave)
Iteration 152: log likelihood =  -251.8965  (not concave)
Iteration 153: log likelihood = -251.89649  (not concave)
Iteration 154: log likelihood = -251.89648  (not concave)
Iteration 155: log likelihood = -251.89647  (not concave)
Iteration 156: log likelihood = -251.89646  (not concave)
Iteration 157: log likelihood = -251.89645  (not concave)
Iteration 158: log likelihood = -251.89644  (not concave)
Iteration 159: log likelihood = -251.89643  (not concave)
Iteration 160: log likelihood = -251.89642  (not concave)
Iteration 161: log likelihood = -251.89641  (not concave)
Iteration 162: log likelihood =  -251.8964  (not concave)
Iteration 163: log likelihood = -251.89639  (not concave)
Iteration 164: log likelihood = -251.89638  (not concave)
Iteration 165: log likelihood = -251.89637  (not concave)
Iteration 166: log likelihood = -251.89636  (not concave)
Iteration 167: log likelihood = -251.89635  (not concave)
Iteration 168: log likelihood = -251.89634  (not concave)
Iteration 169: log likelihood = -251.89633  (not concave)
Iteration 170: log likelihood = -251.89632  (not concave)
Iteration 171: log likelihood = -251.89631  (not concave)
Iteration 172: log likelihood =  -251.8963  (not concave)
Iteration 173: log likelihood = -251.89629  (not concave)
Iteration 174: log likelihood = -251.89628  (not concave)
Iteration 175: log likelihood = -251.89627  (not concave)
Iteration 176: log likelihood = -251.89626  (not concave)
Iteration 177: log likelihood = -251.89625  (not concave)
Iteration 178: log likelihood = -251.89624  (not concave)
Iteration 179: log likelihood = -251.89623  (not concave)
Iteration 180: log likelihood = -251.89622  (not concave)
Iteration 181: log likelihood = -251.89621  (not concave)
Iteration 182: log likelihood =  -251.8962  (not concave)
Iteration 183: log likelihood = -251.89619  (not concave)
Iteration 184: log likelihood = -251.89618  (not concave)
Iteration 185: log likelihood = -251.89617  (not concave)
Iteration 186: log likelihood = -251.89616  (not concave)
Iteration 187: log likelihood = -251.89615  (not concave)
Iteration 188: log likelihood = -251.89614  (not concave)
Iteration 189: log likelihood = -251.89613  (not concave)
Iteration 190: log likelihood = -251.89612  (not concave)
Iteration 191: log likelihood = -251.89611  (not concave)
Iteration 192: log likelihood =  -251.8961  (not concave)
Iteration 193: log likelihood = -251.89609  (not concave)
Iteration 194: log likelihood = -251.89608  (not concave)
Iteration 195: log likelihood = -251.89607  (not concave)
Iteration 196: log likelihood = -251.89606  (not concave)
Iteration 197: log likelihood = -251.89605  (not concave)
Iteration 198: log likelihood = -251.89605  (not concave)
Iteration 199: log likelihood = -251.89604  (not concave)
Iteration 200: log likelihood = -251.89603  (not concave)
Iteration 201: log likelihood = -251.89602  (not concave)
Iteration 202: log likelihood = -251.89601  (not concave)
Iteration 203: log likelihood =   -251.896  (not concave)
Iteration 204: log likelihood = -251.89599  (not concave)
Iteration 205: log likelihood = -251.89598  (not concave)
Iteration 206: log likelihood = -251.89597  (not concave)
Iteration 207: log likelihood = -251.89596  (not concave)
Iteration 208: log likelihood = -251.89595  (not concave)
Iteration 209: log likelihood = -251.89594  (not concave)
Iteration 210: log likelihood = -251.89593  (not concave)
Iteration 211: log likelihood = -251.89592  (not concave)
Iteration 212: log likelihood = -251.89591  (not concave)
Iteration 213: log likelihood =  -251.8959  (not concave)
Iteration 214: log likelihood = -251.89589  (not concave)
Iteration 215: log likelihood = -251.89588  (not concave)
Iteration 216: log likelihood = -251.89587  (not concave)
Iteration 217: log likelihood = -251.89586  (not concave)
Iteration 218: log likelihood = -251.89585  (not concave)
Iteration 219: log likelihood = -251.89584  (not concave)
Iteration 220: log likelihood = -251.89583  (not concave)
Iteration 221: log likelihood = -251.89582  (not concave)
Iteration 222: log likelihood = -251.89581  (not concave)
Iteration 223: log likelihood =  -251.8958  (not concave)
Iteration 224: log likelihood = -251.89579  (not concave)
Iteration 225: log likelihood = -251.89578  (not concave)
Iteration 226: log likelihood = -251.89577  (not concave)
Iteration 227: log likelihood = -251.89576  (not concave)
Iteration 228: log likelihood = -251.89575  (not concave)
Iteration 229: log likelihood = -251.89574  (not concave)
Iteration 230: log likelihood = -251.89573  (not concave)
Iteration 231: log likelihood = -251.89572  (not concave)
Iteration 232: log likelihood = -251.89571  (not concave)
Iteration 233: log likelihood =  -251.8957  (not concave)
Iteration 234: log likelihood = -251.89569  (not concave)
Iteration 235: log likelihood = -251.89568  (not concave)
Iteration 236: log likelihood = -251.89567  (not concave)
Iteration 237: log likelihood = -251.89566  (not concave)
Iteration 238: log likelihood = -251.89565  (not concave)
Iteration 239: log likelihood = -251.89564  (not concave)
Iteration 240: log likelihood = -251.89563  (not concave)
Iteration 241: log likelihood = -251.89562  (not concave)
Iteration 242: log likelihood = -251.89561  (not concave)
Iteration 243: log likelihood =  -251.8956  (not concave)
Iteration 244: log likelihood = -251.89559  (not concave)
Iteration 245: log likelihood = -251.89558  (not concave)
Iteration 246: log likelihood = -251.89557  (not concave)
Iteration 247: log likelihood = -251.89556  (not concave)
Iteration 248: log likelihood = -251.89555  (not concave)
Iteration 249: log likelihood = -251.89554  (not concave)
Iteration 250: log likelihood = -251.89553  (not concave)
Iteration 251: log likelihood = -251.89552  (not concave)
Iteration 252: log likelihood = -251.89551  (not concave)
Iteration 253: log likelihood =  -251.8955  (not concave)
Iteration 254: log likelihood = -251.89549  (not concave)
Iteration 255: log likelihood = -251.89548  (not concave)
Iteration 256: log likelihood = -251.89547  (not concave)
Iteration 257: log likelihood = -251.89546  (not concave)
Iteration 258: log likelihood = -251.89544  (not concave)
Iteration 259: log likelihood = -251.89543  (not concave)
Iteration 260: log likelihood = -251.89542  (not concave)
Iteration 261: log likelihood = -251.89541  (not concave)
Iteration 262: log likelihood =  -251.8954  (not concave)
Iteration 263: log likelihood = -251.89539  (not concave)
Iteration 264: log likelihood = -251.89538  (not concave)
Iteration 265: log likelihood = -251.89537  (not concave)
Iteration 266: log likelihood = -251.89536  (not concave)
Iteration 267: log likelihood = -251.89535  (not concave)
Iteration 268: log likelihood = -251.89534  (not concave)
Iteration 269: log likelihood = -251.89533  (not concave)
Iteration 270: log likelihood = -251.89532  (not concave)
Iteration 271: log likelihood = -251.89531  (not concave)
Iteration 272: log likelihood =  -251.8953  (not concave)
Iteration 273: log likelihood = -251.89529  (not concave)
Iteration 274: log likelihood = -251.89528  (not concave)
Iteration 275: log likelihood = -251.89527  (not concave)
Iteration 276: log likelihood = -251.89526  (not concave)
Iteration 277: log likelihood = -251.89525  (not concave)
Iteration 278: log likelihood = -251.89524  (not concave)
Iteration 279: log likelihood = -251.89523  (not concave)
Iteration 280: log likelihood = -251.89522  (not concave)
Iteration 281: log likelihood = -251.89521  (not concave)
Iteration 282: log likelihood =  -251.8952  (not concave)
Iteration 283: log likelihood = -251.89519  (not concave)
Iteration 284: log likelihood = -251.89518  (not concave)
Iteration 285: log likelihood = -251.89517  (not concave)
Iteration 286: log likelihood = -251.89516  (not concave)
Iteration 287: log likelihood = -251.89515  (not concave)
Iteration 288: log likelihood = -251.89514  (not concave)
Iteration 289: log likelihood = -251.89513  (not concave)
Iteration 290: log likelihood = -251.89512  (not concave)
Iteration 291: log likelihood = -251.89511  (not concave)
Iteration 292: log likelihood =  -251.8951  (not concave)
Iteration 293: log likelihood = -251.89509  (not concave)
Iteration 294: log likelihood = -251.89508  (not concave)
Iteration 295: log likelihood = -251.89507  (not concave)
Iteration 296: log likelihood = -251.89506  (not concave)
Iteration 297: log likelihood = -251.89505  (not concave)
Iteration 298: log likelihood = -251.89504  (not concave)
Iteration 299: log likelihood = -251.89503  (not concave)
Iteration 300: log likelihood = -251.89502  (not concave)
convergence not achieved
                ------------------------------------------- begin mopt_post ---
                - args b V C wgt touse depvar
                - if `:length local touse' {
                = if 8 {
                - tempname esamp
                - quietly gen byte `esamp' = `touse'
                = quietly gen byte __000014 = __00000R
                - }
                - ereturn post `b' `V' `C' `wgt', esample(`esamp') depname(`dep
> var') buildfvinfo
                = ereturn post __000011 __000012 __000013 [], esample(__000014)
>  depname() buildfvinfo
                --------------------------------------------- end mopt_post ---
              - ereturn scalar k_eq_model = abs($ML_waldtest)
              = ereturn scalar k_eq_model = abs(0)
              - if `:length global ML_ll_0' {
              = if 0 {
                ereturn scalar ll_0 = $ML_ll_0
                if `:length global ML_rank0' {
                ereturn scalar rank0 = $ML_rank0
                ereturn scalar df_m = e(rank) - $ML_rank0
                }
                else ereturn scalar df_m = e(rank) - $ML_k0
                }
              - if !`:length global ML_ll_0' | inlist(e(vce), "robust", "cluste
> r", "linearized") {
              = if !0 | inlist(e(vce), "robust", "cluster", "linearized") {
              - if "$ML_svy" == "" {
              = if "" == "" {
              - _prefix_model_test, minimum
                ---------------------------------- begin _prefix_model_test ---
                - version 9
                - syntax [name(name=cmd)] [, svy noADJust noSVYadjust MINimum ]
                - if (inlist("`cmd'","asmixlogit","cmmixlogit","cmxtmixlogit"))
>  {
                = if (inlist("","asmixlogit","cmmixlogit","cmxtmixlogit")) {
                  _asmixtest, `svy' `adjust' `svyadjust'
                  exit
                  }
                - local K = 1
                - if "`e(k_eq_model)'" != "" {
                = if "0" != "" {
                - capture confirm integer number `e(k_eq_model)'
                = capture confirm integer number 0
                - if ! c(rc) {
                - local K = e(k_eq_model)
                - }
                - }
                - if "`e(k_eq_model_skip)'" != "" {
                = if "" != "" {
                  capture confirm integer number `e(k_eq_model_skip)'
                  if ! c(rc) {
                  local skip = e(k_eq_model_skip)
                  }
                  }
                - ereturn local df_m
                - ereturn local F
                - ereturn local chi2
                - ereturn local chi2type
                - ereturn local p
                - if (`K' == 0) {
                = if (0 == 0) {
                - exit
                ------------------------------------ end _prefix_model_test ---
              - }
              - else {
                _prefix_model_test, $ML_svy $ML_noadj
                }
              - }
              - else if `:length global ML_ll_0' {
              = else if 0 {
                if `"`maxmin'"' == "minimize" {
                ereturn scalar chi2 = -2*(e(ll)-e(ll_0))
                }
                else {
                ereturn scalar chi2 = 2*(e(ll)-e(ll_0))
                }
                ereturn scalar p = chi2tail(e(df_m), e(chi2))
                ereturn local chi2type "LR"
                }
              - if `:length global ML_wexp' {
              = if 0 {
                ereturn local wtype `"$ML_wtyp"'
                ereturn local wexp `"$ML_wexp"'
                }
              - if `:length global ML_group' {
              = if 0 {
                ereturn local group `"$ML_group"'
                if `"`e(clustvar)'"' == "$ML_grp" & "$ML_grp" != "" {
                ereturn local clustvar `"$ML_group"'
                }
                }
              - ereturn local cmd "ml"
              - if `:length local score' {
              = if 0 {
                mata: Mopt_score(0)
                ereturn local scorevars `scores'
                }
              - if "$ML_preserve" != "no" {
              = if "yes" != "no" {
              - restore
              - if "`e(prefix)'" == "svy" & e(N_strata_omit) {
              = if "" == "svy" & e(N_strata_omit) {
                tempname v
                quietly _svy2 $ML_sample if $ML_sample, type(total) svy v(`v') 
> subpop(`e(subpop)') touse($ML_sample)
                }
              - ereturn repost, esample($ML_sample)
              = ereturn repost, esample(__00000R)
              - }
              - if `"`moptobj'"' != "" {
              = if `""' != "" {
                local clear noclear
                }
              - if !`:length local clear' {
              = if !0 {
              - Clear
                ------------------------------------------ begin mopt.Clear ---
                - syntax [, NOTANOPTION]
                - capture drop $ML_w
                = capture drop 
                - capture drop $ML_samp
                = capture drop __00000R
                - capture drop $ML_sample
                = capture drop __00000R
                - capture drop $ML_subv
                = capture drop 
                - capture drop $ML_grp
                = capture drop 
                - mata: Mopt_drop_external()
                - macro drop ML_*
                -------------------------------------------- end mopt.Clear ---
              - }
              - else {
                capture confirm var $ML_sample
                if c(rc) {
                quietly gen byte $ML_sample = e(sample)
                }
                }
              - if `:length local output' == 0 {
              = if 8 == 0 {
                Display, level(`level') `options'
                }
              --------------------------------------------- end mopt.MaxMin ---
            - }
            ------------------------------------------------ end mopt.Model ---
          - if c(rc) {
            local rc = c(rc)
            Clear
            exit `rc'
            }
          - exit
          -------------------------------------------------------- end mopt ---
        - exit
        ------------------------------------------------------------ end ml ---
      - if (c(rc) == 1400) & "`lininit'" == "" {
      = if (c(rc) == 1400) & "" == "" {
        noi di as txt "[initial values infeasible, retrying with -lininit- opti
> on]"
        `cmdline' lininit
        exit
        }
      - }
      - else {
        if "`mlmethod'" == "" {
        if inlist("`scale'","hazard","odds","normal") {
        local mlmethod e2
        }
        else {
        local mlmethod lf
        }
        if "`scale'" == "normal" & "`rs'" != "" {
        local mlmethod lf
        }
        }
        if "`mlmethod'" == "lf" {
        local addlf _lf
        }
        if "`failconvlininit'" != "" {
        local captureml capture
        }
        `captureml' ml model `mlmethod' stpm2_ml`addlf'_`scale'`rs' (xb: `bhaza
> rd' = `varlist' `rcsterms', `constant' `offopt') `thetaeq' (dxb: `drcsterms',
>  nocons) `xb0' if `touse' `wt', `mlopts' collinear constraints(`conslist') `i
> nitopt' search(off) waldtest(0) `log' maximize
        if (c(rc) == 1400) & "`lininit'" == "" {
        noi di as txt "[initial values infeasible, retrying with -lininit- opti
> on]"
        `cmdline' lininit
        exit
        }
        }
      - capture mata: rmexternal("`stpm2_struct'")
      = capture mata: rmexternal("__00000Q")
      - ereturn local cmdline `cmdline'
      = ereturn local cmdline stpm2 udca male age_tv any_high_risk_condition et
> h_bin imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 bmi_cat5 s
> moking1 smoking2 smoking3 severe_disease covid_vacc_first liver_trans, tvc(ud
> ca severe_disease covid_vacc_first liver_trans age_tv) dftvc(1) df(1) scale(h
> azard) eform
      - ereturn local predict stpm2_pred
      - ereturn local cmd stpm2
      - ereturn local depvar "_d _t"
      - ereturn local varlist `varlist'
      = ereturn local varlist udca male age_tv o.any_high_risk_condition eth_bi
> n imd1 imd2 imd3 imd4 imd5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 o.bmi_cat5 smo
> king1 smoking2 o.smoking3 severe_disease covid_vacc_first liver_trans
      - ereturn local varnames `varnames'
      = ereturn local varnames udca male age_tv eth_bin imd1 imd2 imd3 imd4 imd
> 5 bmi_cat1 bmi_cat2 bmi_cat3 bmi_cat4 smoking1 smoking2 severe_disease covid_
> vacc_first liver_trans
      - ereturn local tvc `tvc'
      = ereturn local tvc udca severe_disease covid_vacc_first liver_trans age_
> tv
      - ereturn local constant `noconstant'
      = ereturn local constant 
      - ereturn local rcsbaseoff `rcsbaseoff'
      = ereturn local rcsbaseoff 
      - ereturn local nosecondder `nosecondder'
      = ereturn local nosecondder 
      - ereturn local nofirstder `nofirstder'
      = ereturn local nofirstder 
      - local exp_lowerknot = exp(`lowerknot')
      = local exp_lowerknot = exp(1.945910149055313)
      - local exp_upperknot = exp(`upperknot')
      = local exp_upperknot = exp(6.889591308354466)
      - ereturn local boundary_knots "`exp_lowerknot' `exp_upperknot'"
      = ereturn local boundary_knots "6.999999999999998 981.9999999999999"
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - local exp_lowerknot = exp(`lowerknot_`tvcvar'')
      = local exp_lowerknot = exp(1.945910149055313)
      - local exp_upperknot = exp(`upperknot_`tvcvar'')
      = local exp_upperknot = exp(6.889591308354466)
      - ereturn local boundary_knots_`tvcvar' "`exp_lowerknot' `exp_upperknot'"
      = ereturn local boundary_knots_udca "6.999999999999998 981.9999999999999"
      - }
      - local exp_lowerknot = exp(`lowerknot_`tvcvar'')
      = local exp_lowerknot = exp(1.945910149055313)
      - local exp_upperknot = exp(`upperknot_`tvcvar'')
      = local exp_upperknot = exp(6.889591308354466)
      - ereturn local boundary_knots_`tvcvar' "`exp_lowerknot' `exp_upperknot'"
      = ereturn local boundary_knots_severe_disease "6.999999999999998 981.9999
> 999999999"
      - }
      - local exp_lowerknot = exp(`lowerknot_`tvcvar'')
      = local exp_lowerknot = exp(1.945910149055313)
      - local exp_upperknot = exp(`upperknot_`tvcvar'')
      = local exp_upperknot = exp(6.889591308354466)
      - ereturn local boundary_knots_`tvcvar' "`exp_lowerknot' `exp_upperknot'"
      = ereturn local boundary_knots_covid_vacc_first "6.999999999999998 981.99
> 99999999999"
      - }
      - local exp_lowerknot = exp(`lowerknot_`tvcvar'')
      = local exp_lowerknot = exp(1.945910149055313)
      - local exp_upperknot = exp(`upperknot_`tvcvar'')
      = local exp_upperknot = exp(6.889591308354466)
      - ereturn local boundary_knots_`tvcvar' "`exp_lowerknot' `exp_upperknot'"
      = ereturn local boundary_knots_liver_trans "6.999999999999998 981.9999999
> 999999"
      - }
      - local exp_lowerknot = exp(`lowerknot_`tvcvar'')
      = local exp_lowerknot = exp(1.945910149055313)
      - local exp_upperknot = exp(`upperknot_`tvcvar'')
      = local exp_upperknot = exp(6.889591308354466)
      - ereturn local boundary_knots_`tvcvar' "`exp_lowerknot' `exp_upperknot'"
      = ereturn local boundary_knots_age_tv "6.999999999999998 981.999999999999
> 9"
      - }
      - if `df' >1 {
      = if 1 >1 {
        forvalues i = 2/`df' {
        local addknot = exp(real(word("`bhknots'",`i')))
        local exp_bhknots `exp_bhknots' `addknot'
        }
        ereturn local bhknots `exp_bhknots'
        }
      - ereturn local ln_bhknots `bhknots'
      = ereturn local ln_bhknots 
      - ereturn local rcsterms_base `rcsterms_base'
      = ereturn local rcsterms_base  _rcs1
      - ereturn local drcsterms_base `drcsterms_base'
      = ereturn local drcsterms_base  _d_rcs1
      - ereturn scalar dfbase = `df'
      = ereturn scalar dfbase = 1
      - _ms_eq_info
      - ereturn scalar nxbterms = `r(k1)'
      = ereturn scalar nxbterms = 28
      - if "`scale'" != "theta" {
      = if "hazard" != "theta" {
      - ereturn scalar ndxbterms = `r(k2)'
      = ereturn scalar ndxbterms = 6
      - }
      - else {
        ereturn scalar ndxbterms = `r(k3)'
        }
      - foreach tvcvar in `tvc' {
      = foreach tvcvar in udca severe_disease covid_vacc_first liver_trans age_
> tv {
      - local exp_knots
      - ereturn scalar df_`tvcvar' = `tvc_`tvcvar'_df'
      = ereturn scalar df_udca = 1
      - ereturn local rcsterms_`tvcvar' `rcsterms_`tvcvar''
      = ereturn local rcsterms_udca  _rcs_udca1
      - ereturn local drcsterms_`tvcvar' `drcsterms_`tvcvar''
      = ereturn local drcsterms_udca  _d_rcs_udca1
      - if `tvc_`tvcvar'_df'>1 {
      = if 1>1 {
        forvalues i = 2/`tvc_`tvcvar'_df' {
        local addknot = exp(real(word("`tvcknots_`tvcvar''",`i')))
        local exp_knots `exp_knots' `addknot'
        }
        ereturn local tvcknots_`tvcvar' `exp_knots'
        ereturn local ln_tvcknots_`tvcvar' `tvcknots_`tvcvar''
        }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - ereturn matrix R_`tvcvar' = `R_`tvcvar''
      = ereturn matrix R_udca = __00000G
      - }
      - }
      - local exp_knots
      - ereturn scalar df_`tvcvar' = `tvc_`tvcvar'_df'
      = ereturn scalar df_severe_disease = 1
      - ereturn local rcsterms_`tvcvar' `rcsterms_`tvcvar''
      = ereturn local rcsterms_severe_disease  _rcs_severe_disease1
      - ereturn local drcsterms_`tvcvar' `drcsterms_`tvcvar''
      = ereturn local drcsterms_severe_disease  _d_rcs_severe_disease1
      - if `tvc_`tvcvar'_df'>1 {
      = if 1>1 {
        forvalues i = 2/`tvc_`tvcvar'_df' {
        local addknot = exp(real(word("`tvcknots_`tvcvar''",`i')))
        local exp_knots `exp_knots' `addknot'
        }
        ereturn local tvcknots_`tvcvar' `exp_knots'
        ereturn local ln_tvcknots_`tvcvar' `tvcknots_`tvcvar''
        }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - ereturn matrix R_`tvcvar' = `R_`tvcvar''
      = ereturn matrix R_severe_disease = __00000I
      - }
      - }
      - local exp_knots
      - ereturn scalar df_`tvcvar' = `tvc_`tvcvar'_df'
      = ereturn scalar df_covid_vacc_first = 1
      - ereturn local rcsterms_`tvcvar' `rcsterms_`tvcvar''
      = ereturn local rcsterms_covid_vacc_first  _rcs_covid_vacc_first1
      - ereturn local drcsterms_`tvcvar' `drcsterms_`tvcvar''
      = ereturn local drcsterms_covid_vacc_first  _d_rcs_covid_vacc_first1
      - if `tvc_`tvcvar'_df'>1 {
      = if 1>1 {
        forvalues i = 2/`tvc_`tvcvar'_df' {
        local addknot = exp(real(word("`tvcknots_`tvcvar''",`i')))
        local exp_knots `exp_knots' `addknot'
        }
        ereturn local tvcknots_`tvcvar' `exp_knots'
        ereturn local ln_tvcknots_`tvcvar' `tvcknots_`tvcvar''
        }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - ereturn matrix R_`tvcvar' = `R_`tvcvar''
      = ereturn matrix R_covid_vacc_first = __00000K
      - }
      - }
      - local exp_knots
      - ereturn scalar df_`tvcvar' = `tvc_`tvcvar'_df'
      = ereturn scalar df_liver_trans = 1
      - ereturn local rcsterms_`tvcvar' `rcsterms_`tvcvar''
      = ereturn local rcsterms_liver_trans  _rcs_liver_trans1
      - ereturn local drcsterms_`tvcvar' `drcsterms_`tvcvar''
      = ereturn local drcsterms_liver_trans  _d_rcs_liver_trans1
      - if `tvc_`tvcvar'_df'>1 {
      = if 1>1 {
        forvalues i = 2/`tvc_`tvcvar'_df' {
        local addknot = exp(real(word("`tvcknots_`tvcvar''",`i')))
        local exp_knots `exp_knots' `addknot'
        }
        ereturn local tvcknots_`tvcvar' `exp_knots'
        ereturn local ln_tvcknots_`tvcvar' `tvcknots_`tvcvar''
        }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - ereturn matrix R_`tvcvar' = `R_`tvcvar''
      = ereturn matrix R_liver_trans = __00000M
      - }
      - }
      - local exp_knots
      - ereturn scalar df_`tvcvar' = `tvc_`tvcvar'_df'
      = ereturn scalar df_age_tv = 1
      - ereturn local rcsterms_`tvcvar' `rcsterms_`tvcvar''
      = ereturn local rcsterms_age_tv  _rcs_age_tv1
      - ereturn local drcsterms_`tvcvar' `drcsterms_`tvcvar''
      = ereturn local drcsterms_age_tv  _d_rcs_age_tv1
      - if `tvc_`tvcvar'_df'>1 {
      = if 1>1 {
        forvalues i = 2/`tvc_`tvcvar'_df' {
        local addknot = exp(real(word("`tvcknots_`tvcvar''",`i')))
        local exp_knots `exp_knots' `addknot'
        }
        ereturn local tvcknots_`tvcvar' `exp_knots'
        ereturn local ln_tvcknots_`tvcvar' `tvcknots_`tvcvar''
        }
      - if "`orthog'" != "" {
      = if "orthog" != "" {
      - ereturn matrix R_`tvcvar' = `R_`tvcvar''
      = ereturn matrix R_age_tv = __00000O
      - }
      - }
      - if "`orthog'" != "" & "`rcsbaseoff'" == "" {
      = if "orthog" != "" & "" == "" {
      - ereturn matrix R_bh = `R_bh'
      = ereturn matrix R_bh = __00000D
      - }
      - ereturn local noconstant `constant'
      = ereturn local noconstant 
      - ereturn local scale `scale'
      = ereturn local scale hazard
      - ereturn scalar k_eform = 1
      - ereturn local orthog `orthog'
      = ereturn local orthog orthog
      - ereturn local bhazard `bhazard'
      = ereturn local bhazard 
      - ereturn scalar del_entry = `del_entry'
      = ereturn scalar del_entry = 1
      - ereturn scalar dev = -2*e(ll)
      - ereturn scalar AIC = -2*e(ll) + 2 * e(rank)
      - qui count if `touse' == 1 & _d == 1
      = qui count if __00000F == 1 & _d == 1
      - ereturn scalar BIC = -2*e(ll) + ln(r(N)) * e(rank)
      - ereturn local reverse `reverse'
      = ereturn local reverse 
      - ereturn local cure `cure'
      = ereturn local cure 
      - if "`keepcons'" == "" {
      = if "" == "" {
      - constraint drop `dropconslist'
      = constraint drop 1999 1998 1997 1996 1995 1994 1993 1992 1991 1990 1989 
> 1988 1987 1986 1985 1984 1983 1982 1981 1980 1979 1978 1977 1976 1975 1974 19
> 73 1972 1971 1970 1969
      - }
      - else {
        ereturn local sp_constraints `dropconslist'
        }
      - Replay, level(`level') `alleq' `eform' `showcons' `diopts' `header' `co
> ef'
      = Replay, level(95)  eform    
        ------------------------------------------------ begin stpm2.Replay ---
        - syntax [, EFORM ALLEQ SHOWCons Level(int `c(level)') noCOEF noHEADer 
> * ]
        = syntax [, EFORM ALLEQ SHOWCons Level(int 95) noCOEF noHEADer * ]
        - _get_diopts diopts, `options'
        = _get_diopts diopts, 
          ----------------------------------------------- begin _get_diopts ---
          - version 11
          - syntax namelist(max=2) [, *]
          - gettoken name1 namelist : namelist
          - gettoken name2 namelist : namelist
          - GetDiopts diopts options, `options'
          = GetDiopts diopts options, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 2 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local diopts                         
            - if `K' == 2 {
            = if 2 == 2 {
            - c_local `c_opts' `"`options'"'
            = c_local  options `""'
            - }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - c_local `name1' `"`diopts'"'
          = c_local diopts `""'
          - local snames : s(macros)
          - foreach sname of local snames {
          - local S_`sname' = s(`sname')
          = local S_level = s(level)
          - }
          - local S_`sname' = s(`sname')
          = local S_log = s(log)
          - }
          - local S_`sname' = s(`sname')
          = local S_k_fill = s(k_fill)
          - }
          - local S_`sname' = s(`sname')
          = local S_k = s(k)
          - }
          - local S_`sname' = s(`sname')
          = local S_copy = s(copy)
          - }
          - sreturn clear
          - GetDiopts DEFAULT
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 1 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DEFAULT                         
            - if `K' == 2 {
            = if 1 == 2 {
              c_local `c_opts' `"`options'"'
              }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - if `"`name2'"' == "" {
          = if `""' == "" {
          - GetDiopts DUPS, `options'
          = GetDiopts DUPS, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 1 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DUPS                         
            - if `K' == 2 {
            = if 1 == 2 {
              c_local `c_opts' `"`options'"'
              }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - }
          - else {
            GetDiopts DUPS options, `options'
            c_local `name2' `"`options'"'
            }
          - local DUPS : list DUPS - DEFAULT
          - gettoken DUPS : DUPS
          - if `"`DUPS'"' != "" {
          = if `""' != "" {
            if (strpos(`"`DUPS'"', "(")) {
            gettoken DUPS : DUPS, parse("(")
            local DUPS `"`DUPS'()"'
            }
            di as err "duplicate {bf:`DUPS'} option not allowed"
            exit 198
            }
          - sreturn clear
          - foreach sname of local snames {
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local level = `"95"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local log = `"log"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local k_fill = `"62"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local k = `"62"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local copy = `"copy"'
          - }
          ------------------------------------------------- end _get_diopts ---
        - if "`alleq'" == "" {
        = if "" == "" {
        - local neq neq(1)
        - if "`e(scale)'" == "theta" {
        = if "hazard" == "theta" {
          local neq neq(2)
          }
        - }
        - if "`showcons'" == "" {
        = if "" == "" {
        - local showcons nocnsreport
        - }
        - else {
          local showcons
          }
        - if "`coef'" == "" {
        = if "" == "" {
        - ml display, `eform' `neq' `showcons' level(`level') `diopts' `header'
        = ml display, eform neq(1) nocnsreport level(95)  
          -------------------------------------------------------- begin ml ---
          - if _caller()>=11 {
          - mopt `0'
          = mopt display, eform neq(1) nocnsreport level(95)  
            ---------------------------------------------------- begin mopt ---
            - local vv : di "version " string(_caller()) ":"
            - version 12
            - gettoken subcmd 0 : 0, parse(" ,")
            - local lcmd : length local subcmd
            - if "`subcmd'" == "clear" {
            = if "display" == "clear" {
              Clear
              exit
              }
            - if `"`subcmd'"' == "hold" {
            = if `"display"' == "hold" {
              ml_hold `0'
              exit
              }
            - if `"`subcmd'"' == "unhold" {
            = if `"display"' == "unhold" {
              ml_unhold `0'
              exit
              }
            - if "`subcmd'" == "score" {
            = if "display" == "score" {
              if _caller() > 12 {
              `vv' Score `0'
              }
              else {
              Score `0'
              }
              exit
              }
            - if "`subcmd'" == "count" {
            = if "display" == "count" {
              Count `0'
              exit
              }
            - if "`subcmd'" == "trace" {
            = if "display" == "trace" {
              Trace `0'
              exit
              }
            - if "`subcmd'" == bsubstr("graph",1,max(2,`lcmd')) {
            = if "display" == bsubstr("graph",1,max(2,7)) {
              Graph `0'
              exit
              }
            - if "`subcmd'" == "init" {
            = if "display" == "init" {
              Interactive 0
              `vv' Init `0'
              exit
              }
            - if "`subcmd'" == bsubstr("maximize",1,max(3,`lcmd')) {
            = if "display" == bsubstr("maximize",1,max(3,7)) {
              Interactive 1
              `vv' MaxMin maximize `0'
              exit
              }
            - if "`subcmd'" == bsubstr("minimize",1,max(3,`lcmd')) {
            = if "display" == bsubstr("minimize",1,max(3,7)) {
              Interactive 1
              `vv' MaxMin minimize `0'
              exit
              }
            - if "`subcmd'" == bsubstr("display",1,max(2,`lcmd')) {
            = if "display" == bsubstr("display",1,max(2,7)) {
            - Display `0'
            = Display , eform neq(1) nocnsreport level(95)  
              ------------------------------------------ begin mopt.Display ---
              - if !inlist("`e(opt)'", "ml", "moptimize") {
              = if !inlist("moptimize", "ml", "moptimize") {
                error 301
                }
              - if "`e(svyml)'" != "" | "`e(prefix)'" == "svy" {
              = if "" != "" | "" == "svy" {
                _prefix_display `0'
                exit
                }
              - syntax [, Level(cilevel) PLus noHeader First SHOWEQns NEQ(integ
> er -1) noFOOTnote NOSKIP TItle(passthru) NOTEST * ]
              - if "`plus'" != "" {
              = if "" != "" {
                local footnote nofootnote
                }
              - if `neq' >= 0 {
              = if 1 >= 0 {
              - local neqopt neq(`neq')
              = local neqopt neq(1)
              - }
              - _get_diopts diopts options, `options'
              = _get_diopts diopts options, eform nocnsreport
                ----------------------------------------- begin _get_diopts ---
                - version 11
                - syntax namelist(max=2) [, *]
                - gettoken name1 namelist : namelist
                - gettoken name2 namelist : namelist
                - GetDiopts diopts options, `options'
                = GetDiopts diopts options, eform nocnsreport
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive "nocnsreport "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts nocnsreport 
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `"nocnsreport"' != "" {
                    - local ++n
                    - gettoken item`n' opts : opts, bind
                    = gettoken item1 opts : opts, bind
                    - }
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 1 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 2 == 1 & 5 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local diopts     nocnsreport                    
                  - if `K' == 2 {
                  = if 2 == 2 {
                  - c_local `c_opts' `"`options'"'
                  = c_local  options `"eform"'
                  - }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - c_local `name1' `"`diopts'"'
                = c_local diopts `"nocnsreport"'
                - local snames : s(macros)
                - foreach sname of local snames {
                - local S_`sname' = s(`sname')
                = local S_level = s(level)
                - }
                - local S_`sname' = s(`sname')
                = local S_copy = s(copy)
                - }
                - local S_`sname' = s(`sname')
                = local S_k = s(k)
                - }
                - local S_`sname' = s(`sname')
                = local S_k_fill = s(k_fill)
                - }
                - local S_`sname' = s(`sname')
                = local S_log = s(log)
                - }
                - sreturn clear
                - GetDiopts DEFAULT
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 1 == 1 & 0 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local DEFAULT                         
                  - if `K' == 2 {
                  = if 1 == 2 {
                    c_local `c_opts' `"`options'"'
                    }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - if `"`name2'"' == "" {
                = if `"options"' == "" {
                  GetDiopts DUPS, `options'
                  }
                - else {
                - GetDiopts DUPS options, `options'
                = GetDiopts DUPS options, eform
                  ----------------------------- begin _get_diopts.GetDiopts ---
                  - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASE
> levels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYce
> lls NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string)
>  sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRA
> PON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBR
> EV ABBREV
                  - syntax namelist(max=2) [, `DIOPTS' *]
                  = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASEl
> evels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTY
> cells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cf
> ormat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(pa
> ssthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(pas
> sthru) NOABBREV ABBREV *]
                  - opts_exclusive "`allbaselevels' `noallbaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`allbaselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`baselevels' `nobaselevels'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`emptycells' `noemptycells'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`fvlabel' `nofvlabel'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`omitted' `noomitted'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`lstretch' `nolstretch'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`cnsreport' `fullcnsreport'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`coeflegend' `selegend'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local K : list sizeof namelist
                  - gettoken c_diopts c_opts : namelist
                  - opts_exclusive "`coding' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`versus' `compare'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - opts_exclusive "`abbrev' `noabbrev'"
                  = opts_exclusive " "
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local allbaselevels `allbaselevels' `noallbaselevels'
                  = local allbaselevels  
                  - local baselevels `baselevels' `nobaselevels'
                  = local baselevels  
                  - local emptycells `emptycells' `noemptycells'
                  = local emptycells  
                  - local omitted `omitted' `noomitted'
                  = local omitted  
                  - local lstretch `lstretch' `nolstretch'
                  = local lstretch  
                  - local fvlabel `fvlabel' `nofvlabel'
                  = local fvlabel  
                  - local abbrev `abbrev' `noabbrev'
                  = local abbrev  
                  - if "`allbaselevels'`baselevels'" == "" {
                  = if "" == "" {
                  - if c(showbaselevels) == "all" {
                    local allbaselevels allbaselevels
                    }
                  - else if c(showbaselevels) == "on" {
                    local baselevels baselevels
                    }
                  - }
                  - if "`emptycells'" == "" {
                  = if "" == "" {
                  - if c(showemptycells) == "off" {
                    local emptycells noemptycells
                    }
                  - }
                  - if "`omitted'" == "" {
                  = if "" == "" {
                  - if c(showomitted) == "off" {
                    local omitted noomitted
                    }
                  - }
                  - if "`lstretch'" == "" {
                  = if "" == "" {
                  - if c(lstretch) == "off" {
                    local lstretch nolstretch
                    }
                  - }
                  - if `:length local cformat' {
                  = if 0 {
                    confirm numeric format `cformat'
                    if fmtwidth(`"`cformat'"') > 9 {
                    local cformat "%9.0g"
                    di "{txt}note: invalid cformat(), using default"
                    }
                    sreturn local cformat `"`cformat'"'
                    local cformat `"cformat(`cformat')"'
                    }
                  - if `:length local sformat' {
                  = if 0 {
                    confirm numeric format `sformat'
                    if fmtwidth(`"`sformat'"') > 8 {
                    local sformat "%8.2f"
                    di "{txt}note: invalid sformat(), using default"
                    }
                    sreturn local sformat `"`sformat'"'
                    local sformat `"sformat(`sformat')"'
                    }
                  - if `:length local pformat' {
                  = if 0 {
                    confirm numeric format `pformat'
                    if fmtwidth(`"`pformat'"') > 5 {
                    local pformat "%5.3f"
                    di "{txt}note: invalid pformat(), using default"
                    }
                    sreturn local pformat `"`pformat'"'
                    local pformat `"pformat(`pformat')"'
                    }
                  - if `K' == 1 & `:length local options' {
                  = if 2 == 1 & 5 {
                    syntax namelist(max=2) [, `DIOPTS']
                    }
                  - if reldif(`level', c(level)) > 1e-3 {
                  = if reldif(95, c(level)) > 1e-3 {
                    local levelopt level(`level')
                    }
                  - Wrapon , `fvwrapon'
                  = Wrapon , 
                    ------------------------------ begin _get_diopts.Wrapon ---
                    - capture syntax [, WOrd WIdth]
                    - if c(rc) {
                      di as err "invalid fvwrapon() option;"
                      syntax [, WOrd WIdth]
                      exit 198
                      }
                    - opts_exclusive "`word' `width'" fvwrapon
                    = opts_exclusive " " fvwrapon
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local fvwrapon `word' `width'
                    = local fvwrapon  
                    - if `:length local fvwrapon' {
                    = if 0 {
                      c_local fvwrapon fvwrapon(`fvwrapon')
                      }
                    -------------------------------- end _get_diopts.Wrapon ---
                  - if "`fvwrap'" != "" {
                  = if "" != "" {
                    FVWrap, `fvwrap'
                    }
                  - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `ba
> selevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coef
> legend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' 
> `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
                  = c_local DUPS                         
                  - if `K' == 2 {
                  = if 2 == 2 {
                  - c_local `c_opts' `"`options'"'
                  = c_local  options `"eform"'
                  - }
                  - sreturn local coding `coding'
                  = sreturn local coding 
                  - sreturn local versus `versus'
                  = sreturn local versus 
                  - sreturn local compare `compare'
                  = sreturn local compare 
                  - sreturn local level `level'
                  = sreturn local level 95
                  ------------------------------- end _get_diopts.GetDiopts ---
                - c_local `name2' `"`options'"'
                = c_local options `"eform"'
                - }
                - local DUPS : list DUPS - DEFAULT
                - gettoken DUPS : DUPS
                - if `"`DUPS'"' != "" {
                = if `""' != "" {
                  if (strpos(`"`DUPS'"', "(")) {
                  gettoken DUPS : DUPS, parse("(")
                  local DUPS `"`DUPS'()"'
                  }
                  di as err "duplicate {bf:`DUPS'} option not allowed"
                  exit 198
                  }
                - sreturn clear
                - foreach sname of local snames {
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local level = `"95"'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local copy = `"copy"'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local k = `"62"'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local k_fill = `"62"'
                - }
                - sreturn local `sname' = `"`S_`sname''"'
                = sreturn local log = `"log"'
                - }
                ------------------------------------------- end _get_diopts ---
              - _get_eformopts , eformopts(`options') soptions allowed(__all__)
              = _get_eformopts , eformopts(eform) soptions allowed(__all__)
                -------------------------------------- begin _get_eformopts ---
                - version 8.0
                - syntax [, eformopts(string asis) soptions ALLOWed(string) ]
                - local 0 , `eformopts'
                = local 0 , eform
                - local EFALL NOHR hr NOSHR shr or IRr RRr tr TRatio
                - if "`soptions'" != "" {
                = if "soptions" != "" {
                - syntax [, EForm1(passthru) EForm `EFALL' * ]
                = syntax [, EForm1(passthru) EForm NOHR hr NOSHR shr or IRr RRr
>  tr TRatio * ]
                - local opts `"`options'"'
                = local opts `""'
                - local 0 , `eform1' `eform' `nohr' `hr' `noshr' `shr' `or' `ir
> r' `rrr' `tr' `tratio'
                = local 0 ,  eform         
                - }
                - if "`allowed'" == "__all__" {
                = if "__all__" == "__all__" {
                - local allowed `EFALL'
                = local allowed NOHR hr NOSHR shr or IRr RRr tr TRatio
                - }
                - foreach ef of local allowed {
                - capture confirm name `ef'
                = capture confirm name NOHR
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts  nohr
                - }
                - capture confirm name `ef'
                = capture confirm name hr
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr
                - }
                - capture confirm name `ef'
                = capture confirm name NOSHR
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr noshr
                - }
                - capture confirm name `ef'
                = capture confirm name shr
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr noshr shr
                - }
                - capture confirm name `ef'
                = capture confirm name or
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr noshr shr or
                - }
                - capture confirm name `ef'
                = capture confirm name IRr
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr noshr shr or irr
                - }
                - capture confirm name `ef'
                = capture confirm name RRr
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr noshr shr or irr rrr
                - }
                - capture confirm name `ef'
                = capture confirm name tr
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr noshr shr or irr rrr tr
                - }
                - capture confirm name `ef'
                = capture confirm name TRatio
                - if _rc {
                  di as err "`ef' is not a valid name"
                  exit 198
                  }
                - local efopts `efopts' `=lower("`ef'")'
                = local efopts nohr hr noshr shr or irr rrr tr tratio
                - }
                - local efopts : list uniq efopts
                - syntax [, EForm1(string) EForm `allowed' ]
                = syntax [, EForm1(string) EForm NOHR hr NOSHR shr or IRr RRr t
> r TRatio ]
                - foreach ef of local efopts {
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - local eform `eform' ``ef''
                = local eform eform 
                - }
                - if `"`eform1'"'=="Odds Ratio" local eform_cons_ti = "Odds"
                = if `""'=="Odds Ratio" local eform_cons_ti = "Odds"
                - else if `"`eform1'"'=="Haz. Ratio" local eform_cons_ti="Hazar
> d"
                = else if `""'=="Haz. Ratio" local eform_cons_ti="Hazard"
                - else if `"`eform1'"'=="Time Ratio" local eform_cons_ti = "Tim
> e"
                = else if `""'=="Time Ratio" local eform_cons_ti = "Time"
                - else if `"`eform1'"'=="IRR" local eform_cons_ti = "Inc. Rate"
                = else if `""'=="IRR" local eform_cons_ti = "Inc. Rate"
                - else if `"`eform1'"'=="Risk Ratio" local eform_cons_ti = "Ris
> k"
                = else if `""'=="Risk Ratio" local eform_cons_ti = "Risk"
                - else if `"`eform1'"'=="Hlth Ratio" local eform_cons_ti="Healt
> h"
                = else if `""'=="Hlth Ratio" local eform_cons_ti="Health"
                - local k : list sizeof eform
                - if `k' {
                = if 1 {
                - opts_exclusive "`eform'"
                = opts_exclusive "eform"
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts eform
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `"eform"' != "" {
                  - local ++n
                  - gettoken item`n' opts : opts, bind
                  = gettoken item1 opts : opts, bind
                  - }
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 1 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if `:length local eform1' {
                = if 0 {
                  opts_exclusive "eform() `eform'"
                  }
                - }
                - if `k' {
                = if 1 {
                - if ("`eform'"=="eform") local eform1 = "exp(b)"
                = if ("eform"=="eform") local eform1 = "exp(b)"
                - else if ("`eform'"=="hr") {
                = else if ("eform"=="hr") {
                  local eform1 = "Haz. Ratio"
                  local eform_cons_ti = "Hazard"
                  }
                - else if ("`eform'"=="shr") {
                = else if ("eform"=="shr") {
                  local eform1 = "SHR"
                  local eform_cons_ti = "Subhazard"
                  }
                - else if ("`eform'"=="tr") {
                = else if ("eform"=="tr") {
                  local eform1 = "Time Ratio"
                  local eform_cons_ti = "Time"
                  }
                - else if ("`eform'"=="tratio") {
                = else if ("eform"=="tratio") {
                  local eform1 = "Time Ratio"
                  local eform_cons_ti = "Time"
                  }
                - else if ("`eform'"=="or") {
                = else if ("eform"=="or") {
                  local eform1 = "Odds Ratio"
                  if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd
> )'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                  local eform_cons_ti = "Rel. Risk"
                  }
                  else {
                  local eform_cons_ti = "Odds"
                  }
                  }
                - else if ("`eform'"=="irr") {
                = else if ("eform"=="irr") {
                  local eform1 = "IRR"
                  local eform_cons_ti = "Inc. Rate"
                  }
                - else if ("`eform'"=="rrr") {
                = else if ("eform"=="rrr") {
                  local eform1 = "RRR"
                  local eform_cons_ti = "Rel. Risk"
                  }
                - else if ("`eform'"!="nohr") & ("`eform'"!="noshr") {
                = else if ("eform"!="nohr") & ("eform"!="noshr") {
                  local eform1 = upper("`eform'")
                  }
                - }
                - sreturn clear
                - sreturn local options `"`opts'"'
                = sreturn local options `""'
                - sreturn local opt `eform'
                = sreturn local opt eform
                - sreturn local str `eform1'
                = sreturn local str exp(b)
                - if `"`eform1'"' != "" {
                = if `"exp(b)"' != "" {
                - sreturn local eform eform(`"`eform1'"')
                = sreturn local eform eform(`"exp(b)"')
                - }
                - else sreturn local eform ""
                - sreturn local eform_cons_ti `eform_cons_ti'
                = sreturn local eform_cons_ti 
                ---------------------------------------- end _get_eformopts ---
              - local eform `s(eform)'
              = local eform eform(`"exp(b)"')
              - local diparm `s(options)'
              = local diparm 
              - _get_diparmopts , diparmopts(`diparm') level(`level')
              = _get_diparmopts , diparmopts() level(95)
                ------------------------------------- begin _get_diparmopts ---
                - if _caller() < 8.2 {
                  _get_diparmopts_8 `0'
                  exit
                  }
                - version 9
                - local version : di "version " string(_caller()) ":"
                - syntax [, diparmopts(string asis) EXECute soptions bottom plu
> s SYNTAXonly * ]
                - local goptions `options'
                = local goptions level(95)
                - SpliceGlobals junk , `goptions'
                = SpliceGlobals junk , level(95)
                  --------------------- begin _get_diparmopts.SpliceGlobals ---
                  - syntax name(id="macro name" name=c_diparm) [, diparm(string
>  asis) Level(cilevel) dof(passthru) syntaxonly ]
                  - if `"`dof'"' == "" & `"`e(df_r)'"' != "" {
                  = if `""' == "" & `""' != "" {
                    capture confirm integer number `e(df_r)'
                    if !c(rc) {
                    local gdof dof(`e(df_r)')
                    }
                    capture
                    }
                  - else local gdof `"`dof'"'
                  = else local gdof `""'
                  - local glevel `level'
                  = local glevel 95
                  - local lopt level(`glevel')
                  = local lopt level(95)
                  - if (`"`diparm'"' == "") exit
                  = if (`""' == "") exit
                  ----------------------- end _get_diparmopts.SpliceGlobals ---
                - local 0 `", `diparmopts'"'
                = local 0 `", "'
                - local diparmopts
                - local k 0
                - syntax [, diparm(string asis) * ]
                - while `"`diparm'"' != "" {
                = while `""' != "" {
                  local ++k
                  local single 1
                  local after
                  capture _on_colon_parse `diparm'
                  if !c(rc) {
                  local single 0
                  local diparm `"`s(before)'"'
                  local after `"`s(after)'"'
                  }
                  capture
                  SpliceGlobals diparm , diparm(`diparm') `syntaxonly' `goption
> s'
                  local diparm`k' `"`diparm'"'
                  local diparmopts `"`diparmopts' : `diparm'"'
                  if `single' | `"`:list retok after'"' == "" {
                  local 0 `", `options'"'
                  syntax [, diparm(string asis) * ]
                  }
                  else {
                  local diparm `"`after'"'
                  }
                  }
                - if `"`soptions'"' == "" {
                = if `""' == "" {
                - syntax [, diparm(string asis) ]
                - }
                - if ("`execute'" == "") {
                = if ("" == "") {
                - sreturn clear
                - sreturn local options `"`options'"'
                = sreturn local options `""'
                - sreturn local diparm `"`diparmopts'"'
                = sreturn local diparm `""'
                - forval i = 1/`k' {
                = forval i = 1/0 {
                  sreturn local diparm`i' `"`diparm`i''"'
                  }
                - sreturn local k `k'
                = sreturn local k 0
                - exit
                --------------------------------------- end _get_diparmopts ---
              - if "`header'"=="" {
              = if ""=="" {
              - _coef_table_header, `title'
              = _coef_table_header, 
                ---------------------------------- begin _coef_table_header ---
                - version 9
                - if !c(noisily) {
                  exit
                  }
                - syntax [, rclass noHeader obj(string) * ]
                - if ("`header'" != "") exit
                = if ("" != "") exit
                - local has_obj = `"`obj'"' != ""
                = local has_obj = `""' != ""
                - if `has_obj' == 0 {
                = if 0 == 0 {
                - tempname obj
                - }
                - if "`rclass'" != "" {
                = if "" != "" {
                  tempname rhold
                  _return hold `rhold'
                  }
                - .`obj' = ._coef_table__header.new, `rclass' `options'
                = .__00000R = ._coef_table__header.new,  
                  -class _coef_table__header {
                  -        string  result          = "e"
                  -        double  opt_dvheader    = 0
                  -        double  opt_modeltest   = 0
                  -        double  opt_cluster     = 0
                  -        double  opt_rules       = 0
                  -        double  opt_tvar        = 0
                  -        double  opt_septitle    = 0
                  -        double  linesize        = 0
                  -        string  title           = ""
                  -        string  title2          = ""
                  -        string  cmd             = ""
                  -        string  cmd2            = ""
                  -        string  prefix          = ""
                  -        double  is_prefix       = 0
                  -        double  is_svy          = 0
                  -        double  is_margins      = 0
                  -        double  is_gsem         = 0
                  -        double  is_gsem_group   = 0
                  -        double  is_sem          = 0
                  -        double  is_areg         = 0
                  -        double  is_sum          = 0
                  -        double  is_tab          = 0
                  -        double  prop_pushtitle  = 0
                  -        double  prop_groupvar   = 0
                  -        double  prop_censlimits = 0
                  -        double  prop_censored   = 0
                  -        double  prop_nouncensored       = 0
                  -        double  prop_iselected  = 0
                  -        double  prop_selected   = 0
                  -        double  prop_groups     = 0
                  -        double  prop_balance    = 0
                  -        double  ablen           = 16
                  -        double  width           = 78
                  -        double  c1              = 1
                  -        double  c2              = 16
                  -        double  c3              = 49
                  -        double  c4              = 67
                  -        double  c2wfmt          = 10
                  -        double  c4wfmt          = 10
                  -        string  scheme          = "ml"
                  -        array   left
                  -        array   right
                  -}
                  --------------------------- begin _coef_table__header.new ---
                  - version 16
                  - syntax [, rclass noDVHeader noMODELtest TItle(string asis) 
> nocluster noRULES noTVAR SEPTITLE linesize(int 0) ]
                  - if "`rclass'" != "" {
                  = if "" != "" {
                    .result = "r"
                    }
                  - if "`dvheader'" == "" {
                  = if "" == "" {
                  - .opt_dvheader = 1
                  - }
                  - if "`modeltest'" == "" {
                  = if "" == "" {
                  - .opt_modeltest = 1
                  - }
                  - if "`cluster'" == "" {
                  = if "" == "" {
                  - .opt_cluster = 1
                  - }
                  - if "`rules'" == "" {
                  = if "" == "" {
                  - .opt_rules = 1
                  - }
                  - if "`tvar'" == "" {
                  = if "" == "" {
                  - .opt_tvar = 1
                  - }
                  - if "`septitle'" != "" {
                  = if "" != "" {
                    .opt_septitle = 1
                    }
                  - .linesize = `linesize'
                  = .linesize = 0
                  - .title = `"`title'"'
                  = .title = `""'
                  - if `"`.result'"' == "e" {
                  = if `"e"' == "e" {
                  - .New4e
                    ----------------------- begin _coef_table__header.New4e ---
                    - version 16
                    - .cmd = "`e(cmd)'"
                    = .cmd = "stpm2"
                    - .cmd2 = "`e(cmd2)'"
                    = .cmd2 = ""
                    - .prefix = "`e(prefix)'"
                    = .prefix = ""
                    - if `"`.prefix'"' != "" {
                    = if `""' != "" {
                      .is_prefix = 1
                      }
                    - if "`.prefix'" == "svy" {
                    = if "" == "svy" {
                      .is_svy = 1
                      }
                    - if "`.cmd'" == "margins" {
                    = if "stpm2" == "margins" {
                      .is_margins = 1
                      }
                    - if inlist("`.cmd'", "contrast", "pwcompare") {
                    = if inlist("stpm2", "contrast", "pwcompare") {
                      if "`.cmd2'" == "margins" {
                      .is_margins = 1
                      }
                      }
                    - if "`.cmd'" == "gsem" | "`.cmd2'" == "gsem" {
                    = if "stpm2" == "gsem" | "" == "gsem" {
                      .is_gsem = 1
                      }
                    - if "`.cmd'" == "sem" {
                    = if "stpm2" == "sem" {
                      .is_sem = 1
                      }
                    - if "`.cmd'" == "areg" {
                    = if "stpm2" == "areg" {
                      .is_areg = 1
                      }
                    - is_svysum `.cmd'
                    = is_svysum stpm2
                      ------------------------------------- begin is_svysum ---
                      - version 9
                      - local SvySum mean prop proportion ratio total
                      - if `"`0'"' != "" & `:list 0 in SvySum' {
                      = if `"stpm2"' != "" & 0 {
                        return scalar is_svysum = 1
                        }
                      - else return scalar is_svysum = 0
                      --------------------------------------- end is_svysum ---
                    - .is_sum = r(is_svysum)
                    - if `.is_svy' {
                    = if 0 {
                      if "`.cmd'" == "tabulate" {
                      .is_tab = 1
                      }
                      }
                    - if `.is_gsem' {
                    = if 0 {
                      if `"`e(groupvar)'"' != "" & "`.cmd2'" == "" {
                      .is_gsem_group = 1
                      }
                      }
                    - local c2pfix 20
                    - if `.is_sem' | `.is_gsem_group' {
                    = if 0 | 0 {
                      local crlen = udstrlen(`"`e(crittype)'"')
                      if `crlen' >= `c2pfix' {
                      local c2pfix = `crlen' + 2
                      }
                      }
                    - if `.is_sum' {
                    = if 0 {
                      if `.linesize' > 62 {
                      local offset = `.linesize' - 62
                      }
                      else local offset 0
                      .width = 62 + `offset'
                      .c2 = 18
                      .c3 = 35 + `offset'
                      .c4 = 51 + `offset'
                      .c2wfmt = 7
                      .c4wfmt = 10
                      .scheme = "compact"
                      }
                    - else if `.is_prefix' | `.is_sem' | `.is_gsem_group' {
                    = else if 0 | 0 | 0 {
                      .width = 78
                      .c2 = `c2pfix'
                      .c3 = 49
                      .c4 = 67
                      .c2wfmt = 9
                      .c4wfmt = 10
                      .scheme = "svy"
                      }
                    - if `.is_svy' {
                    = if 0 {
                      local maxlen = `.width'-`.c2'-(`.c2wfmt'+2)-2-(`.c4'-`.c3
> ')-2
                      if `maxlen' > 19 {
                      local maxlen 19
                      }
                      local len : display %`maxlen'.0fc e(N_pop)
                      local len : list retok len
                      local len : length local len
                      local ++maxlen
                      local ++len
                      if `.c4wfmt' <= `len' & `len' <= `maxlen' {
                      .c3 = `.c3' + `.c4wfmt' - `len'
                      .c4 = `.c4' + `.c4wfmt' - `len'
                      .c4wfmt = `len'
                      }
                      }
                    ------------------------- end _coef_table__header.New4e ---
                  - }
                  - else {
                    .New4r
                    }
                  - local props `"`.Macro _coef_table_props'"'
                    ----------------------- begin _coef_table__header.Macro ---
                    - version 16
                    - class exit `"``.result'(`0')'"'
                    = class exit `""'
                    ------------------------- end _coef_table__header.Macro ---
                  = local props `""'
                  - if `.is_sem' | `.is_gsem_group' | `:list posof "pushtitle" 
> in props' {
                  = if 0 | 0 | 0 {
                    .prop_pushtitle = 1
                    }
                  - if `.is_sem' | `.is_gsem_group' | `:list posof "groupvar" i
> n props' {
                  = if 0 | 0 | 0 {
                    .prop_groupvar = 1
                    }
                  - local list tobit cpoisson ivtobit metobit
                  - local list2 metobit
                  - if `:list posof "`.cmd'" in list' | `:list posof "`.cmd2'" 
> in list2' | `:list posof "censlimits" in props' {
                  = if 0 | 0 | 0 {
                    .prop_censlimits = !missing(e(N_unc))
                    }
                  - local list intreg tobit cpoisson ivtobit eintreg
                  - local list2 meintreg metobit stintreg
                  - if `:list posof "`.cmd'" in list' | `:list posof "`.cmd2'" 
> in list2' | `:list posof "censored" in props' {
                  = if 0 | 0 | 0 {
                    .prop_censored = !missing(e(N_unc))
                    }
                  - if `:list posof "nouncensored" in props' {
                  = if 0 {
                    .prop_nouncensored = 1
                    }
                  - local list eintreg
                  - if `:list posof "`.cmd'" in list' | `:list posof "iselected
> " in props' {
                  = if 0 | 0 {
                    .prop_iselected = 1
                    }
                  - local list eregress eprobit eoprobit
                  - if `:list posof "`.cmd'" in list' | `:list posof "selected"
>  in props' {
                  = if 0 | 0 {
                    .prop_selected = 1
                    }
                  - if `:list posof "groups" in props' {
                  = if 0 {
                    .prop_groups = 1
                    }
                  - if `:list posof "balance" in props' {
                  = if 0 {
                    .prop_balance = 1
                    }
                  - .left = {}
                  - .right = {}
                  ----------------------------- end _coef_table__header.new ---
                - if "`rclass'" != "" {
                = if "" != "" {
                  _return restore `rhold'
                  .`obj'.New4r
                  }
                - .`obj'.build
                = .__00000R.build
                  ------------------------- begin _coef_table__header.build ---
                  - version 16
                  - if `"`.title'"' == "" {
                  = if `""' == "" {
                  - .title = `"`.Macro title'"'
                    ----------------------- begin _coef_table__header.Macro ---
                    - version 16
                    - class exit `"``.result'(`0')'"'
                    = class exit `""'
                    ------------------------- end _coef_table__header.Macro ---
                  = .title = `""'
                  - .title2 = `"`.Macro title2'"'
                    ----------------------- begin _coef_table__header.Macro ---
                    - version 16
                    - class exit `"``.result'(`0')'"'
                    = class exit `""'
                    ------------------------- end _coef_table__header.Macro ---
                  = .title2 = `""'
                  - }
                  - if `.is_areg' {
                  = if 0 {
                    local absvar = abbrev("`e(absvar)'", 22)
                    .title2 = "Absorbed variable: {bf:`absvar'}"
                    }
                  - if `.prop_pushtitle' {
                  = if 0 {
                    .PushLeft `"`.title'"'
                    .title = ""
                    .title2 = ""
                    }
                  - if `.prop_groupvar' | `.is_gsem_group' {
                  = if 0 | 0 {
                    local groupvar `"`.Macro groupvar'"'
                    if `"`groupvar'"' != "" {
                    .PushLeft "Grouping variable" "= " as res abbrev("`groupvar
> '",`.ablen')
                    }
                    }
                  - if `.is_svy' {
                  = if 0 {
                    .BuildLeft4svy
                    }
                  - else if `.is_prefix' {
                  = else if 0 {
                    if !`.is_margins' {
                    .Build4strata
                    }
                    }
                  - if (`.is_tab' | `.is_sum') & !missing(`.result'(N_stdize)) 
> {
                  = if (0 | 0) & !missing(e(N_stdize)) {
                    .PushLeft "N. of std strata" "= " as res %`.c2wfmt'.0fc `.r
> esult'(N_stdize)
                    }
                  - .Build4tvar
                    ------------------ begin _coef_table__header.Build4tvar ---
                    - version 16
                    - if `.opt_tvar' == 0 {
                    = if 1 == 0 {
                      exit
                      }
                    - if "`.Macro tvar'" == "" {
                      --------------------- begin _coef_table__header.Macro ---
                      - version 16
                      - class exit `"``.result'(`0')'"'
                      = class exit `""'
                      ----------------------- end _coef_table__header.Macro ---
                    = if "" == "" {
                    - exit
                    -------------------- end _coef_table__header.Build4tvar ---
                  - if !missing(`.Scalar N') {
                    ---------------------- begin _coef_table__header.Scalar ---
                    - version 16
                    - class exit `"`= `.result'(`0')'"'
                    = class exit `"2839"'
                    ------------------------ end _coef_table__header.Scalar ---
                  = if !missing(2839) {
                  - .PushRight "Number of obs" "= " as res %`.c4wfmt'.0fc `.Sca
> lar N'
                    ---------------------- begin _coef_table__header.Scalar ---
                    - version 16
                    - class exit `"`= `.result'(`0')'"'
                    = class exit `"2839"'
                    ------------------------ end _coef_table__header.Scalar ---
                  = .PushRight "Number of obs" "= " as res %10.0fc 2839
                    ------------------- begin _coef_table__header.PushRight ---
                    - version 16
                    - gettoken tok rest : 0
                    - if `:length local rest' {
                    = if 25 {
                    - .right.Arrpush `.C3' `"`tok'"' `.C4' `rest'
                      ------------------------ begin _coef_table__header.C3 ---
                      - version 16
                      - class exit `"_col(`.c3')"'
                      = class exit `"_col(49)"'
                      -------------------------- end _coef_table__header.C3 ---
                      ------------------------ begin _coef_table__header.C4 ---
                      - version 16
                      - class exit `"_col(`.c4')"'
                      = class exit `"_col(67)"'
                      -------------------------- end _coef_table__header.C4 ---
                    = .right.Arrpush _col(49) `"Number of obs"' _col(67)  "= " 
> as res %10.0fc 2839
                    - }
                    - else if `:length local tok' {
                    = else if 13 {
                      .right.Arrpush `.C3' `"`tok'"'
                      }
                    - else {
                      .right.Arrpush
                      }
                    --------------------- end _coef_table__header.PushRight ---
                  - }
                  - if `.is_areg' {
                  = if 0 {
                    .PushRight "No. of categories" "= " as res %`.c4wfmt'.0fc e
> (k_absorb)
                    }
                  - if `.is_sem' | `.is_gsem_group' {
                  = if 0 | 0 {
                    if `"`.Macro groupvar'"' != "" {
                    .PushRight "Number of groups" "= " as res %`.c4wfmt'.0fc `.
> Scalar N_groups'
                    }
                    }
                  - if `.is_sem' & !`.is_svy' {
                  = if 0 & !0 {
                    .PushLeft "Estimation method" "= " as res `"`.Macro method'
> "'
                    }
                  - if `.prop_selected' {
                  = if 0 {
                    .Build4selected
                    }
                  - if `.is_svy' {
                  = if 0 {
                    .BuildRight4svy
                    if `.prop_censored' {
                    .PushRight
                    .Build4censobs "header"
                    .PushRight
                    }
                    }
                  - else {
                  - if `.is_margins' {
                  = if 0 {
                    .Build4subpop
                    }
                  - if `.prop_iselected' {
                  = if 0 {
                    .Build4title
                    .Build4iselected
                    }
                  - if `.prop_censored' {
                  = if 0 {
                    .Build4title
                    .Build4censobs
                    if !`.is_prefix' {
                    .PushRight
                    }
                    }
                  - .Build4cluster
                    --------------- begin _coef_table__header.Build4cluster ---
                    - version 16
                    - if missing(`.Scalar N_clust') {
                      -------------------- begin _coef_table__header.Scalar ---
                      - version 16
                      - class exit `"`= `.result'(`0')'"'
                      = class exit `"."'
                      ---------------------- end _coef_table__header.Scalar ---
                    = if missing(.) {
                    - exit
                    ----------------- end _coef_table__header.Build4cluster ---
                  - .Build4reps
                    ------------------ begin _coef_table__header.Build4reps ---
                    - version 16
                    - if !missing(`.Scalar N_reps') {
                      -------------------- begin _coef_table__header.Scalar ---
                      - version 16
                      - class exit `"`= `.result'(`0')'"'
                      = class exit `"."'
                      ---------------------- end _coef_table__header.Scalar ---
                    = if !missing(.) {
                      .PushRight "Replications" "= " as res %`.c4wfmt'.0fc `.Sc
> alar N_reps'
                      if `.prop_censored' & !`.is_svy' {
                      .PushRight
                      }
                      }
                    -------------------- end _coef_table__header.Build4reps ---
                  - }
                  - if `.prop_groups' {
                  = if 0 {
                    .Build4groups
                    }
                  - .Build4modeltest
                    ------------- begin _coef_table__header.Build4modeltest ---
                    - version 16
                    - if "`.result'" != "e" {
                    = if "e" != "e" {
                      exit
                      }
                    - if `.opt_modeltest' == 0 {
                    = if 1 == 0 {
                      exit
                      }
                    - if `"`.Macro k_eq_model'"' == "0" {
                      --------------------- begin _coef_table__header.Macro ---
                      - version 16
                      - class exit `"``.result'(`0')'"'
                      = class exit `"0"'
                      ----------------------- end _coef_table__header.Macro ---
                    = if `"0"' == "0" {
                    - exit
                    --------------- end _coef_table__header.Build4modeltest ---
                  - .Build4r2
                    -------------------- begin _coef_table__header.Build4r2 ---
                    - version 16
                    - if "`.result'" != "e" {
                    = if "e" != "e" {
                      exit
                      }
                    - if !missing(e(r2)) {
                      .PushRight "R-squared" "= " as res %`.c4wfmt'.4f e(r2)
                      }
                    - if !missing(e(r2_p)) {
                      .PushRight "Pseudo R2" "= " as res %`.c4wfmt'.4f e(r2_p)
                      }
                    - if !missing(e(r2_a)) {
                      .PushRight "Adj R-squared" "= " as res %`.c4wfmt'.4f e(r2
> _a)
                      }
                    - if !missing(e(rmse)) {
                      .PushRight "Root MSE" "= " as res %`.c4wfmt'.4f e(rmse)
                      }
                    ---------------------- end _coef_table__header.Build4r2 ---
                  - .Build4title
                    ----------------- begin _coef_table__header.Build4title ---
                    - version 16
                    - if `.opt_septitle' {
                    = if 0 {
                      exit
                      }
                    - if `"`.title'"' == "" {
                    = if `""' == "" {
                    - exit
                    ------------------- end _coef_table__header.Build4title ---
                  - if `.prop_censlimits' {
                  = if 0 {
                    .Build4censlimits 1
                    }
                  - if `.is_gsem' {
                  = if 0 {
                    if `.opt_dvheader' {
                    gsem_depvar_header, left(`.left.objkey') right(`.right.objk
> ey') c3(`.c3') c4(`.c4') c4wfmt(`.c4wfmt')
                    }
                    }
                  - .Build4crit
                    ------------------ begin _coef_table__header.Build4crit ---
                    - version 16
                    - if "`.result'" != "e" {
                    = if "e" != "e" {
                      exit
                      }
                    - local offset 1
                    - local hascrit = !missing(`"`e(ll)'"') & !missing(`"`e(cri
> ttype)'"')
                    = local hascrit = !missing(`"-251.8950220682983"') & !missi
> ng(`"log likelihood"')
                    - if inlist("`e(dispers)'", "mean", "constant") {
                    = if inlist("", "mean", "constant") {
                      if `hascrit' {
                      local ++offset
                      local crtype `"`e(crittype)'"'
                      local clen : length local crtype
                      .c2 = `clen' + 2
                      }
                      local DISPERS `""Dispersion" "= " as res e(dispers)"'
                      }
                    - .FillLeft `offset'
                    = .FillLeft 1
                      ------------------ begin _coef_table__header.FillLeft ---
                      - version 16
                      - args offset
                      - local kr = `.right.arrnels'
                      = local kr = 1
                      - local kl = `.left.arrnels'
                      = local kl = 0
                      - local diff = `kr' - `kl' - 0`offset'
                      = local diff = 1 - 0 - 01
                      - forval i = 1/`diff' {
                      = forval i = 1/0 {
                        .left.Arrpush ""
                        }
                      -------------------- end _coef_table__header.FillLeft ---
                    - if `"`DISPERS'"' != "" {
                    = if `""' != "" {
                      .PushLeft `DISPERS'
                      }
                    - local crtype = upper(bsubstr(`"`e(crittype)'"',1,1)) + bs
> ubstr(`"`e(crittype)'"',2,.)
                    = local crtype = upper(bsubstr(`"log likelihood"',1,1)) + b
> substr(`"log likelihood"',2,.)
                    - if `.is_sem' & `"`e(critvalue)'"' != "" & !`.is_svy' {
                    = if 0 & `""' != "" & !0 {
                      .PushLeft "`crtype'" "= " as res %10.0g e(critvalue)
                      }
                    - else if `hascrit' {
                    = else if 1 {
                    - if `.is_gsem_group' {
                    = if 0 {
                      .PushLeft "`crtype'" "= " as res %10.0g e(ll)
                      }
                    - else {
                    - .left.Arrpush `""`crtype' = " as res %10.0g e(ll)"'
                    = .left.Arrpush `""Log likelihood = " as res %10.0g e(ll)"'
                    - }
                    - }
                    -------------------- end _coef_table__header.Build4crit ---
                  --------------------------- end _coef_table__header.build ---
                - if `has_obj' == 0 {
                = if 0 == 0 {
                - .`obj'.display
                = .__00000R.display
                  ----------------------- begin _coef_table__header.display ---
                  - version 16
                  - .ShowRules
                    ------------------- begin _coef_table__header.ShowRules ---
                    - version 16
                    - if "`.result'" != "e" {
                    = if "e" != "e" {
                      exit
                      }
                    - if `.opt_rules' == 0 {
                    = if 1 == 0 {
                      exit
                      }
                    - if !inlist("`.cmd'", "logistic", "logit", "probit") {
                    = if !inlist("stpm2", "logistic", "logit", "probit") {
                    - exit
                    --------------------- end _coef_table__header.ShowRules ---
                  - local nl = `.left.arrnels'
                  = local nl = 1
                  - local nr = `.right.arrnels'
                  = local nr = 1
                  - local K = max(`nl',`nr')
                  = local K = max(1,1)
                  - display

                  - if `"`.title'"' != "" {
                  = if `""' != "" {
                    display as txt `"`.title'"'
                    if `"`.title2'"' != "" {
                    display as txt `"`.title2'"'
                    }
                    if `K' {
                    display
                    }
                    }
                  - forval i = 1/`K' {
                  = forval i = 1/1 {
                  - display as txt `.left[`i']' as txt `.right[`i']'
                  = display as txt "Log likelihood = " as res %10.0g e(ll) as t
> xt _col(49) `"Number of obs"' _col(67)  "= " as res %10.0fc 2839
Log likelihood = -251.89502                     Number of obs     =      2,839
                  - }
                  ------------------------- end _coef_table__header.display ---
                - }
                ------------------------------------ end _coef_table_header ---
              - di

              - }
              - _coef_table, `first' level(`level') `neqopt' `plus' `noskip' `s
> howeqns' `diopts' `options' `notest'
              = _coef_table,  level(95) neq(1)    nocnsreport eform 
                ----------------------------------------- begin _coef_table ---
                - version 11
                - local vv : di "version " string(max(11,_caller())) ", missing
> :"
                - if (!c(noisily) & c(coeftabresults) == "off") {
                  exit
                  }
                - _check_eclass
                - syntax [, BMATrix(passthru) VMATrix(passthru) * ]
                - if "`e(b)'" == "" & "`e(V)'" == "" & "`bmatrix'`vmatrix'"==""
>  {
                = if "matrix" == "" & "matrix" == "" & ""=="" {
                  exit
                  }
                - local mc_cmds contrast margins pwcompare pwmean
                - local cmd "`e(cmd)'"
                = local cmd "stpm2"
                - local keepmc : list cmd in mc_cmds
                - if inlist("`cmd'", "pwcompare", "pwmean") {
                = if inlist("stpm2", "pwcompare", "pwmean") {
                  local groups GROUPS
                  }
                - if "`cmd'" == "regress" {
                = if "stpm2" == "regress" {
                  local beta Beta
                  }
                - if "`cmd'" == "gsem" {
                = if "stpm2" == "gsem" {
                  local fvignore fvignore(int 0)
                  local flignore flignore
                  }
                - if "`cmd'" == "sem" {
                = if "stpm2" == "sem" {
                  local standardized STANDARDIZED
                  local showginvariant SHOWGINVariant
                  local nolabel NOLABel LABel NOFVLABel FVLABel
                  local nofootnote NOFOOTnote
                  local wrap wrap(numlist max=1) fvwrap(passthru)
                  }
                - if "`e(mi)'"=="mi" {
                = if ""=="mi" {
                  local dftable DFTable
                  local dfonly DFONLY
                  local noclustreport NOCLUSTReport
                  local pisematrix PISEMATrix(string)
                  }
                - syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(s
> tring) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) R
> OWCFormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(strin
> g) MVMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCL
> ASSMATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string 
> asis) `beta' `standardized' NOCI NOPValues `dftable' `dfonly' dfci DFPValues 
> dfmissing `groups' COEFLegend selegend `fvignore' `flignore' `showginvariant'
>  `nolabel' `nofootnote' `wrap' sort `pisematrix' depname(string) COEFTitle(st
> ring) coeftitle2(string) ptitle(string) cititle(string) NOMCLEGend noCNSRepor
> t FULLCNSReport `noclustreport' cformat(passthru) sformat(passthru) pformat(p
> assthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM NOTEST SEParator(int
> eger 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(string) eqselect(st
> ring) * ]
                = syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(s
> tring) DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) R
> OWCFormat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(strin
> g) MVMATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCL
> ASSMATrix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string 
> asis)   NOCI NOPValues   dfci DFPValues dfmissing  COEFLegend selegend       
> sort  depname(string) COEFTitle(string) coeftitle2(string) ptitle(string) cit
> itle(string) NOMCLEGend noCNSReport FULLCNSReport  cformat(passthru) sformat(
> passthru) pformat(passthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM N
> OTEST SEParator(integer 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(
> string) eqselect(string) * ]
                - if "`wrap'" != "" {
                = if "" != "" {
                  opts_exclusive `"wrap(`wrap') `fvwrap'"'
                  local fvwrap fvwrap(`wrap')
                  }
                - if "`nolabel'`label'" != "" {
                = if "" != "" {
                  opts_exclusive "`nolabel' `label'"
                  opts_exclusive "`nofvlabel' `fvlabel'"
                  opts_exclusive "`nolabel' `fvlabel'"
                  opts_exclusive "`nofvlabel' `label'"
                  if "`nolabel'" != "" {
                  local fvlabel nofvlabel
                  }
                  else {
                  local fvlabel fvlabel
                  }
                  }
                - else local fvlabel `nofvlabel' `fvlabel'
                = else local fvlabel  
                - local type `coeflegend' `selegend'
                = local type  
                - opts_exclusive "`type' `standardized'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if (`"`rowmatrix'"'=="" & "`norowci'"!="") {
                = if (`""'=="" & ""!="") {
                  di as err "{bf:norowci} requires {bf:rowmatrix()}"
                  exit 198
                  }
                - if ("`dftable'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`dftable'}"
                  exit 198
                  }
                - if ("`dfonly'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`dfonly'}"
                  exit 198
                  }
                - if ("`noci'"!="" & "`norowci'"!="") {
                = if (""!="" & ""!="") {
                  di as err "{bf:norowci} is not allowed with {bf:`noci'}"
                  exit 198
                  }
                - if "`standardized'" != "" & "`bstdmatrix'" != "" {
                = if "" != "" & "" != "" {
                  local beta beta
                  local standardized
                  }
                - if `:length local type' == 0 {
                = if 0 == 0 {
                - local type `beta' `noci' `nopvalues' `dftable' `dfonly' `grou
> ps' `dfci' `dfpvalues'
                = local type        
                - }
                - opts_exclusive "`type'"
                = opts_exclusive ""
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts 
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`first' `nofirst'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - opts_exclusive "`first' `showeqns'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local cnsreport `cnsreport' `fullcnsreport'
                = local cnsreport nocnsreport 
                - opts_exclusive "`cnsreport'"
                = opts_exclusive "nocnsreport"
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts nocnsreport
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `"nocnsreport"' != "" {
                  - local ++n
                  - gettoken item`n' opts : opts, bind
                  = gettoken item1 opts : opts, bind
                  - }
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 1 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if `"`showeqns'"' != "" {
                = if `""' != "" {
                  local nofirst nofirst
                  }
                - if `"`ematrix'`noeqcheck'"' == "" {
                = if `""' == "" {
                - if `"`e(error)'"' == "matrix" {
                = if `""' == "matrix" {
                  local ematrix e(error)
                  }
                - }
                - _get_mcompare, `options'
                = _get_mcompare, eform
                  ------------------------------------- begin _get_mcompare ---
                  - version 11
                  - local cmd `"`e(cmd)'"'
                  = local cmd `"stpm2"'
                  - syntax [name(name=caller)] [, *]
                  - local is_pwc = inlist("pwcompare", "`cmd'", "`caller'") | i
> nlist("pwmean", "`cmd'", "`caller'")
                  = local is_pwc = inlist("pwcompare", "stpm2", "") | inlist("p
> wmean", "stpm2", "")
                  - local is_marg = inlist("margins", "`cmd'", "`e(cmd2)'", "`c
> aller'")
                  = local is_marg = inlist("margins", "stpm2", "", "")
                  - local OPTIONS NOADJust BONferroni DUNCan DUNNett SCHeffe SI
> Dak SNK TUKey ADJustall
                  - if `is_pwc' {
                  = if 0 {
                    syntax [name] [, `OPTIONS' MCOMPare(string) *]
                    }
                  - else {
                  - syntax [name] [, MCOMPare(string) *]
                  - local suboption mcompare()
                  - }
                  - sreturn clear
                  - sreturn local options `"`options'"'
                  = sreturn local options `"eform"'
                  - if `is_pwc' {
                  = if 0 {
                    local METHOD `noadjust' `bonferroni' `duncan' `dunnett' `sc
> heffe' `sidak' `snk' `tukey'
                    local METHOD : list uniq METHOD
                    opts_exclusive "`METHOD'"
                    local ALL `adjustall'
                    opts_exclusive "`noadjust' `ALL'"
                    }
                  - local 0 `", `mcompare'"'
                  = local 0 `", "'
                  - capture syntax [, `OPTIONS']
                  = capture syntax [, NOADJust BONferroni DUNCan DUNNett SCHeff
> e SIDak SNK TUKey ADJustall]
                  - if c(rc) {
                    di as err "invalid mcompare() option;"
                    di as err "method '`mcompare'' not allowed"
                    error 198
                    }
                  - local METHOD `METHOD' `noadjust' `bonferroni' `duncan' `dun
> nett' `scheffe' `sidak' `snk' `tukey'
                  = local METHOD         
                  - local METHOD : list uniq METHOD
                  - local ALL `ALL' `adjustall'
                  = local ALL  
                  - local ALL : list uniq ALL
                  - opts_exclusive "`METHOD'" `suboption'
                  = opts_exclusive "" mcompare()
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts 
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 0 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - if "`METHOD'" == "" {
                  = if "" == "" {
                  - if "`ALL'" != "" {
                  = if "" != "" {
                    di as err "multiple comparison method required with the adj
> ustall option"
                    exit 198
                    }
                  - local METHOD noadjust
                  - local noadjust noadjust
                  - }
                  - opts_exclusive "`ALL' `noadjust'" `suboption'
                  = opts_exclusive " noadjust" mcompare()
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts  noadjust
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `"noadjust"' != "" {
                    - local ++n
                    - gettoken item`n' opts : opts, bind
                    = gettoken item1 opts : opts, bind
                    - }
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 1 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - local EXCLUDE duncan dunnett snk tukey
                  - if `:list METHOD in EXCLUDE' {
                  = if 0 {
                    if `is_pwc' {
                    local opt : copy local METHOD
                    }
                    else {
                    local opt "mcompare(`METHOD')"
                    }
                    local cmdlist anova manova regress mvreg pwmean
                    if "`cmd'" == "pwcompare" {
                    local cmd `"`e(cmd_est)'"'
                    }
                    if `is_marg' {
                    local cmd margins
                    }
                    if !`:list cmd in cmdlist' | !`is_pwc' {
                    di as err `"method `opt' is not allowed with results from `
> cmd'"'
                    exit 322
                    }
                    if `"`e(prefix)'"' == "svy" {
                    di as err `"method `opt' is not allowed with results using 
> the svy prefix"'
                    exit 322
                    }
                    local vce `"`e(vce)'"'
                    if !inlist("`vce'", "", "ols") {
                    di as err `"method `opt' is not allowed with results using 
> vce(`vce')"'
                    exit 322
                    }
                    }
                  - local EXCLUDE duncan dunnett snk tukey scheffe
                  - if `:list METHOD in EXCLUDE' {
                  = if 0 {
                    if "`ALL'" != "" {
                    di as err `"option adjustall is not allowed with method `ME
> THOD'"'
                    exit 198
                    }
                    }
                  - sreturn local method `"`METHOD'"'
                  = sreturn local method `"noadjust"'
                  - sreturn local adjustall `"`ALL'"'
                  = sreturn local adjustall `""'
                  --------------------------------------- end _get_mcompare ---
                - local method `"`s(method)'"'
                = local method `"noadjust"'
                - local all `"`s(adjustall)'"'
                = local all `""'
                - local options `"`s(options)'"'
                = local options `"eform"'
                - if "`method'" != "noadjust" {
                = if "noadjust" != "noadjust" {
                  local keepmc 1
                  }
                - opts_exclusive "`all' `groups'"
                = opts_exclusive " "
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - if "`method'" == "dunnett" {
                = if "noadjust" == "dunnett" {
                  opts_exclusive "`method' `groups'"
                  }
                - _get_diopts diopts options, `options' `fvwrap' `fvlabel'
                = _get_diopts diopts options, eform  
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, eform
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 5 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `"eform"'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local diopts `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_method = s(method)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_options = s(options)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `"options"' == "" {
                    GetDiopts DUPS, `options'
                    }
                  - else {
                  - GetDiopts DUPS options, `options'
                  = GetDiopts DUPS options, eform
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 5 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `"eform"'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name2' `"`options'"'
                  = c_local options `"eform"'
                  - }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local method = `"noadjust"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local options = `"eform"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - local legend coeflegend selegend
                - local legend : list legend & diopts
                - local diopts : list diopts - legend
                - local lstretch lstretch nolstretch
                - local lstretch : list lstretch & diopts
                - local diopts : list diopts - lstretch
                - local markdown markdown
                - local markdown : list markdown & diopts
                - local diopts : list diopts - markdown
                - _get_diopts ignore, `diopts' `cformat' `sformat' `pformat'
                = _get_diopts ignore,    
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `""'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local ignore `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_options = s(options)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_method = s(method)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `""' == "" {
                  - GetDiopts DUPS, `options'
                  = GetDiopts DUPS, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - }
                  - else {
                    GetDiopts DUPS options, `options'
                    c_local `name2' `"`options'"'
                    }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local options = `"eform"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local method = `"noadjust"'
                  - }
                  ----------------------------------------- end _get_diopts ---
                - local cformat `"`s(cformat)'"'
                = local cformat `""'
                - local sformat `"`s(sformat)'"'
                = local sformat `""'
                - local pformat `"`s(pformat)'"'
                = local pformat `""'
                - _get_eformopts , eformopts(`options') allowed(__all__) soptio
> ns
                = _get_eformopts , eformopts(eform) allowed(__all__) soptions
                  ------------------------------------ begin _get_eformopts ---
                  - version 8.0
                  - syntax [, eformopts(string asis) soptions ALLOWed(string) ]
                  - local 0 , `eformopts'
                  = local 0 , eform
                  - local EFALL NOHR hr NOSHR shr or IRr RRr tr TRatio
                  - if "`soptions'" != "" {
                  = if "soptions" != "" {
                  - syntax [, EForm1(passthru) EForm `EFALL' * ]
                  = syntax [, EForm1(passthru) EForm NOHR hr NOSHR shr or IRr R
> Rr tr TRatio * ]
                  - local opts `"`options'"'
                  = local opts `""'
                  - local 0 , `eform1' `eform' `nohr' `hr' `noshr' `shr' `or' `
> irr' `rrr' `tr' `tratio'
                  = local 0 ,  eform         
                  - }
                  - if "`allowed'" == "__all__" {
                  = if "__all__" == "__all__" {
                  - local allowed `EFALL'
                  = local allowed NOHR hr NOSHR shr or IRr RRr tr TRatio
                  - }
                  - foreach ef of local allowed {
                  - capture confirm name `ef'
                  = capture confirm name NOHR
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts  nohr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name hr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name NOSHR
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name shr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name or
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or
                  - }
                  - capture confirm name `ef'
                  = capture confirm name IRr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name RRr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name tr
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr tr
                  - }
                  - capture confirm name `ef'
                  = capture confirm name TRatio
                  - if _rc {
                    di as err "`ef' is not a valid name"
                    exit 198
                    }
                  - local efopts `efopts' `=lower("`ef'")'
                  = local efopts nohr hr noshr shr or irr rrr tr tratio
                  - }
                  - local efopts : list uniq efopts
                  - syntax [, EForm1(string) EForm `allowed' ]
                  = syntax [, EForm1(string) EForm NOHR hr NOSHR shr or IRr RRr
>  tr TRatio ]
                  - foreach ef of local efopts {
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - local eform `eform' ``ef''
                  = local eform eform 
                  - }
                  - if `"`eform1'"'=="Odds Ratio" local eform_cons_ti = "Odds"
                  = if `""'=="Odds Ratio" local eform_cons_ti = "Odds"
                  - else if `"`eform1'"'=="Haz. Ratio" local eform_cons_ti="Haz
> ard"
                  = else if `""'=="Haz. Ratio" local eform_cons_ti="Hazard"
                  - else if `"`eform1'"'=="Time Ratio" local eform_cons_ti = "T
> ime"
                  = else if `""'=="Time Ratio" local eform_cons_ti = "Time"
                  - else if `"`eform1'"'=="IRR" local eform_cons_ti = "Inc. Rat
> e"
                  = else if `""'=="IRR" local eform_cons_ti = "Inc. Rate"
                  - else if `"`eform1'"'=="Risk Ratio" local eform_cons_ti = "R
> isk"
                  = else if `""'=="Risk Ratio" local eform_cons_ti = "Risk"
                  - else if `"`eform1'"'=="Hlth Ratio" local eform_cons_ti="Hea
> lth"
                  = else if `""'=="Hlth Ratio" local eform_cons_ti="Health"
                  - local k : list sizeof eform
                  - if `k' {
                  = if 1 {
                  - opts_exclusive "`eform'"
                  = opts_exclusive "eform"
                    ---------------------------------- begin opts_exclusive ---
                    - version 8.2
                    - args opts optname errcode
                    - local opts `opts'
                    = local opts eform
                    - local n 0
                    - while `"`opts'"' != "" {
                    = while `"eform"' != "" {
                    - local ++n
                    - gettoken item`n' opts : opts, bind
                    = gettoken item1 opts : opts, bind
                    - }
                    - while `"`opts'"' != "" {
                    = while `""' != "" {
                      local ++n
                      gettoken item`n' opts : opts, bind
                      }
                    - if `n' < 2 {
                    = if 1 < 2 {
                    - exit
                    ------------------------------------ end opts_exclusive ---
                  - if `:length local eform1' {
                  = if 0 {
                    opts_exclusive "eform() `eform'"
                    }
                  - }
                  - if `k' {
                  = if 1 {
                  - if ("`eform'"=="eform") local eform1 = "exp(b)"
                  = if ("eform"=="eform") local eform1 = "exp(b)"
                  - else if ("`eform'"=="hr") {
                  = else if ("eform"=="hr") {
                    local eform1 = "Haz. Ratio"
                    local eform_cons_ti = "Hazard"
                    }
                  - else if ("`eform'"=="shr") {
                  = else if ("eform"=="shr") {
                    local eform1 = "SHR"
                    local eform_cons_ti = "Subhazard"
                    }
                  - else if ("`eform'"=="tr") {
                  = else if ("eform"=="tr") {
                    local eform1 = "Time Ratio"
                    local eform_cons_ti = "Time"
                    }
                  - else if ("`eform'"=="tratio") {
                  = else if ("eform"=="tratio") {
                    local eform1 = "Time Ratio"
                    local eform_cons_ti = "Time"
                    }
                  - else if ("`eform'"=="or") {
                  = else if ("eform"=="or") {
                    local eform1 = "Odds Ratio"
                    if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(c
> md)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                    local eform_cons_ti = "Rel. Risk"
                    }
                    else {
                    local eform_cons_ti = "Odds"
                    }
                    }
                  - else if ("`eform'"=="irr") {
                  = else if ("eform"=="irr") {
                    local eform1 = "IRR"
                    local eform_cons_ti = "Inc. Rate"
                    }
                  - else if ("`eform'"=="rrr") {
                  = else if ("eform"=="rrr") {
                    local eform1 = "RRR"
                    local eform_cons_ti = "Rel. Risk"
                    }
                  - else if ("`eform'"!="nohr") & ("`eform'"!="noshr") {
                  = else if ("eform"!="nohr") & ("eform"!="noshr") {
                    local eform1 = upper("`eform'")
                    }
                  - }
                  - sreturn clear
                  - sreturn local options `"`opts'"'
                  = sreturn local options `""'
                  - sreturn local opt `eform'
                  = sreturn local opt eform
                  - sreturn local str `eform1'
                  = sreturn local str exp(b)
                  - if `"`eform1'"' != "" {
                  = if `"exp(b)"' != "" {
                  - sreturn local eform eform(`"`eform1'"')
                  = sreturn local eform eform(`"exp(b)"')
                  - }
                  - else sreturn local eform ""
                  - sreturn local eform_cons_ti `eform_cons_ti'
                  = sreturn local eform_cons_ti 
                  -------------------------------------- end _get_eformopts ---
                - if inlist("`bmatrix'", "", "e(b)") & "`e(k_eform)'" == "0" {
                = if inlist("", "", "e(b)") & "1" == "0" {
                  local eform
                  }
                - else local eform `"`s(str)'"'
                = else local eform `"exp(b)"'
                - local eform_cons_ti `"`s(eform_cons_ti)'"'
                = local eform_cons_ti `""'
                - if ("`e(consonly)'"!="1" | `"`eform_cons_ti'"'=="") {
                = if ("0"!="1" | `""'=="") {
                - local eformdi `"`s(str)'"'
                = local eformdi `"exp(b)"'
                - }
                - else {
                  local eformdi `"`eform_cons_ti'"'
                  }
                - local coefttl = cond(`"`eform'"'==`""', `"`coeftitle'"', `"`e
> formdi'"')
                = local coefttl = cond(`"exp(b)"'==`""', `""', `"exp(b)"')
                - local options `"`s(options)'"'
                = local options `""'
                - _get_diparmopts, diparmopts(`options') level(`level')
                = _get_diparmopts, diparmopts() level(95)
                  ----------------------------------- begin _get_diparmopts ---
                  - if _caller() < 8.2 {
                    _get_diparmopts_8 `0'
                    exit
                    }
                  - version 9
                  - local version : di "version " string(_caller()) ":"
                  - syntax [, diparmopts(string asis) EXECute soptions bottom p
> lus SYNTAXonly * ]
                  - local goptions `options'
                  = local goptions level(95)
                  - SpliceGlobals junk , `goptions'
                  = SpliceGlobals junk , level(95)
                    ------------------- begin _get_diparmopts.SpliceGlobals ---
                    - syntax name(id="macro name" name=c_diparm) [, diparm(stri
> ng asis) Level(cilevel) dof(passthru) syntaxonly ]
                    - if `"`dof'"' == "" & `"`e(df_r)'"' != "" {
                    = if `""' == "" & `""' != "" {
                      capture confirm integer number `e(df_r)'
                      if !c(rc) {
                      local gdof dof(`e(df_r)')
                      }
                      capture
                      }
                    - else local gdof `"`dof'"'
                    = else local gdof `""'
                    - local glevel `level'
                    = local glevel 95
                    - local lopt level(`glevel')
                    = local lopt level(95)
                    - if (`"`diparm'"' == "") exit
                    = if (`""' == "") exit
                    --------------------- end _get_diparmopts.SpliceGlobals ---
                  - local 0 `", `diparmopts'"'
                  = local 0 `", "'
                  - local diparmopts
                  - local k 0
                  - syntax [, diparm(string asis) * ]
                  - while `"`diparm'"' != "" {
                  = while `""' != "" {
                    local ++k
                    local single 1
                    local after
                    capture _on_colon_parse `diparm'
                    if !c(rc) {
                    local single 0
                    local diparm `"`s(before)'"'
                    local after `"`s(after)'"'
                    }
                    capture
                    SpliceGlobals diparm , diparm(`diparm') `syntaxonly' `gopti
> ons'
                    local diparm`k' `"`diparm'"'
                    local diparmopts `"`diparmopts' : `diparm'"'
                    if `single' | `"`:list retok after'"' == "" {
                    local 0 `", `options'"'
                    syntax [, diparm(string asis) * ]
                    }
                    else {
                    local diparm `"`after'"'
                    }
                    }
                  - if `"`soptions'"' == "" {
                  = if `""' == "" {
                  - syntax [, diparm(string asis) ]
                  - }
                  - if ("`execute'" == "") {
                  = if ("" == "") {
                  - sreturn clear
                  - sreturn local options `"`options'"'
                  = sreturn local options `""'
                  - sreturn local diparm `"`diparmopts'"'
                  = sreturn local diparm `""'
                  - forval i = 1/`k' {
                  = forval i = 1/0 {
                    sreturn local diparm`i' `"`diparm`i''"'
                    }
                  - sreturn local k `k'
                  = sreturn local k 0
                  - exit
                  ------------------------------------- end _get_diparmopts ---
                - local NODIPARM : length local nodiparm
                - if `NODIPARM' {
                = if 0 {
                  local options
                  }
                - local GTOPTS parse(":") bind quotes
                - local k 0
                - if !`NODIPARM' {
                = if !0 {
                - if `"`e(diparm)'"' != "" {
                = if `""' != "" {
                  local i 0
                  local diparm `"`e(diparm)'"'
                  }
                - else if `"`e(diparm1)'"' != "" {
                = else if `""' != "" {
                  local i 1
                  local diparm `"`e(diparm1)'"'
                  }
                - while `:length local diparm' {
                = while 0 {
                  gettoken diparm rest : diparm, `GTOPTS'
                  while `:length local rest' {
                  local ++k
                  local diparm`k' : copy local diparm
                  gettoken COLON rest : rest, `GTOPTS'
                  gettoken diparm rest : rest, `GTOPTS'
                  }
                  local ++k
                  local diparm`k' : copy local diparm
                  local ++i
                  local diparm `"`e(diparm`i')'"'
                  }
                - }
                - if `:length local options' {
                = if 0 {
                  local 0 `", `options'"'
                  syntax [, diparm(string asis) *]
                  if `k' & `:length local diparm' {
                  local ++k
                  local diparm`k' __sep__
                  }
                  while `:length local diparm' {
                  gettoken diparm rest : diparm, `GTOPTS'
                  while `:length local rest' {
                  local ++k
                  local diparm`k' : copy local diparm
                  gettoken COLON rest : rest, `GTOPTS'
                  gettoken diparm rest : rest, `GTOPTS'
                  }
                  local ++k
                  local diparm`k' : copy local diparm
                  local 0 `", `options'"'
                  syntax [, diparm(string asis) *]
                  }
                  }
                - if "`markdown'" != "" {
                = if "" != "" {
                  local lsize = c(linesize)
                  set linesize 255
                  }
                - `vv' mata: _coef_table()
                = version 12, missing: mata: _coef_table()
                  --------------------------------------- begin _get_diopts ---
                  - version 11
                  - syntax namelist(max=2) [, *]
                  - gettoken name1 namelist : namelist
                  - gettoken name2 namelist : namelist
                  - GetDiopts diopts options, `options'
                  = GetDiopts diopts options, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 2 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local diopts                         
                    - if `K' == 2 {
                    = if 2 == 2 {
                    - c_local `c_opts' `"`options'"'
                    = c_local  options `""'
                    - }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - c_local `name1' `"`diopts'"'
                  = c_local __00000R `""'
                  - local snames : s(macros)
                  - foreach sname of local snames {
                  - local S_`sname' = s(`sname')
                  = local S_level = s(level)
                  - }
                  - local S_`sname' = s(`sname')
                  = local S_k = s(k)
                  - }
                  - sreturn clear
                  - GetDiopts DEFAULT
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DEFAULT                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - if `"`name2'"' == "" {
                  = if `""' == "" {
                  - GetDiopts DUPS, `options'
                  = GetDiopts DUPS, 
                    --------------------------- begin _get_diopts.GetDiopts ---
                    - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBA
> SElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTY
> cells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(strin
> g) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVW
> RAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOAB
> BREV ABBREV
                    - syntax namelist(max=2) [, `DIOPTS' *]
                    = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBAS
> Elevels ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMP
> TYcells EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND 
> cformat(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(
> passthru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(p
> assthru) NOABBREV ABBREV *]
                    - opts_exclusive "`allbaselevels' `noallbaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`allbaselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`baselevels' `nobaselevels'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`emptycells' `noemptycells'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`fvlabel' `nofvlabel'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`omitted' `noomitted'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`lstretch' `nolstretch'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`cnsreport' `fullcnsreport'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`coeflegend' `selegend'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local K : list sizeof namelist
                    - gettoken c_diopts c_opts : namelist
                    - opts_exclusive "`coding' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`versus' `compare'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - opts_exclusive "`abbrev' `noabbrev'"
                    = opts_exclusive " "
                      -------------------------------- begin opts_exclusive ---
                      - version 8.2
                      - args opts optname errcode
                      - local opts `opts'
                      = local opts  
                      - local n 0
                      - while `"`opts'"' != "" {
                      = while `""' != "" {
                        local ++n
                        gettoken item`n' opts : opts, bind
                        }
                      - if `n' < 2 {
                      = if 0 < 2 {
                      - exit
                      ---------------------------------- end opts_exclusive ---
                    - local allbaselevels `allbaselevels' `noallbaselevels'
                    = local allbaselevels  
                    - local baselevels `baselevels' `nobaselevels'
                    = local baselevels  
                    - local emptycells `emptycells' `noemptycells'
                    = local emptycells  
                    - local omitted `omitted' `noomitted'
                    = local omitted  
                    - local lstretch `lstretch' `nolstretch'
                    = local lstretch  
                    - local fvlabel `fvlabel' `nofvlabel'
                    = local fvlabel  
                    - local abbrev `abbrev' `noabbrev'
                    = local abbrev  
                    - if "`allbaselevels'`baselevels'" == "" {
                    = if "" == "" {
                    - if c(showbaselevels) == "all" {
                      local allbaselevels allbaselevels
                      }
                    - else if c(showbaselevels) == "on" {
                      local baselevels baselevels
                      }
                    - }
                    - if "`emptycells'" == "" {
                    = if "" == "" {
                    - if c(showemptycells) == "off" {
                      local emptycells noemptycells
                      }
                    - }
                    - if "`omitted'" == "" {
                    = if "" == "" {
                    - if c(showomitted) == "off" {
                      local omitted noomitted
                      }
                    - }
                    - if "`lstretch'" == "" {
                    = if "" == "" {
                    - if c(lstretch) == "off" {
                      local lstretch nolstretch
                      }
                    - }
                    - if `:length local cformat' {
                    = if 0 {
                      confirm numeric format `cformat'
                      if fmtwidth(`"`cformat'"') > 9 {
                      local cformat "%9.0g"
                      di "{txt}note: invalid cformat(), using default"
                      }
                      sreturn local cformat `"`cformat'"'
                      local cformat `"cformat(`cformat')"'
                      }
                    - if `:length local sformat' {
                    = if 0 {
                      confirm numeric format `sformat'
                      if fmtwidth(`"`sformat'"') > 8 {
                      local sformat "%8.2f"
                      di "{txt}note: invalid sformat(), using default"
                      }
                      sreturn local sformat `"`sformat'"'
                      local sformat `"sformat(`sformat')"'
                      }
                    - if `:length local pformat' {
                    = if 0 {
                      confirm numeric format `pformat'
                      if fmtwidth(`"`pformat'"') > 5 {
                      local pformat "%5.3f"
                      di "{txt}note: invalid pformat(), using default"
                      }
                      sreturn local pformat `"`pformat'"'
                      local pformat `"pformat(`pformat')"'
                      }
                    - if `K' == 1 & `:length local options' {
                    = if 1 == 1 & 0 {
                      syntax namelist(max=2) [, `DIOPTS']
                      }
                    - if reldif(`level', c(level)) > 1e-3 {
                    = if reldif(95, c(level)) > 1e-3 {
                      local levelopt level(`level')
                      }
                    - Wrapon , `fvwrapon'
                    = Wrapon , 
                      ---------------------------- begin _get_diopts.Wrapon ---
                      - capture syntax [, WOrd WIdth]
                      - if c(rc) {
                        di as err "invalid fvwrapon() option;"
                        syntax [, WOrd WIdth]
                        exit 198
                        }
                      - opts_exclusive "`word' `width'" fvwrapon
                      = opts_exclusive " " fvwrapon
                        ------------------------------ begin opts_exclusive ---
                        - version 8.2
                        - args opts optname errcode
                        - local opts `opts'
                        = local opts  
                        - local n 0
                        - while `"`opts'"' != "" {
                        = while `""' != "" {
                          local ++n
                          gettoken item`n' opts : opts, bind
                          }
                        - if `n' < 2 {
                        = if 0 < 2 {
                        - exit
                        -------------------------------- end opts_exclusive ---
                      - local fvwrapon `word' `width'
                      = local fvwrapon  
                      - if `:length local fvwrapon' {
                      = if 0 {
                        c_local fvwrapon fvwrapon(`fvwrapon')
                        }
                      ------------------------------ end _get_diopts.Wrapon ---
                    - if "`fvwrap'" != "" {
                    = if "" != "" {
                      FVWrap, `fvwrap'
                      }
                    - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `
> baselevels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `co
> eflegend' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare
> ' `fvwrap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbre
> v'
                    = c_local DUPS                         
                    - if `K' == 2 {
                    = if 1 == 2 {
                      c_local `c_opts' `"`options'"'
                      }
                    - sreturn local coding `coding'
                    = sreturn local coding 
                    - sreturn local versus `versus'
                    = sreturn local versus 
                    - sreturn local compare `compare'
                    = sreturn local compare 
                    - sreturn local level `level'
                    = sreturn local level 95
                    ----------------------------- end _get_diopts.GetDiopts ---
                  - }
                  - else {
                    GetDiopts DUPS options, `options'
                    c_local `name2' `"`options'"'
                    }
                  - local DUPS : list DUPS - DEFAULT
                  - gettoken DUPS : DUPS
                  - if `"`DUPS'"' != "" {
                  = if `""' != "" {
                    if (strpos(`"`DUPS'"', "(")) {
                    gettoken DUPS : DUPS, parse("(")
                    local DUPS `"`DUPS'()"'
                    }
                    di as err "duplicate {bf:`DUPS'} option not allowed"
                    exit 198
                    }
                  - sreturn clear
                  - foreach sname of local snames {
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local level = `"95"'
                  - }
                  - sreturn local `sname' = `"`S_`sname''"'
                  = sreturn local k = `"0"'
                  - }
                  ----------------------------------------- end _get_diopts ---
------------------------------------------------------------------------------
             |     exp(b)   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
xb           |
        udca |   .8342601   .5005153    -0.30   0.763      .257408    2.703839
        male |   1.059277   .2789239     0.22   0.827     .6322301    1.774778
      age_tv |   1.002852   .0071841     0.40   0.691     .9888697    1.017032
any_high_r~n |          1   1.30e-15    -0.06   0.955            1           1
     eth_bin |   1.082922    .411589     0.21   0.834      .514137    2.280949
        imd1 |   1.337127   1.303348     0.30   0.766     .1979131    9.033807
        imd2 |   3.067092    2.87107     1.20   0.231     .4896965    19.20997
        imd3 |   2.250609   2.155614     0.85   0.397     .3443708    14.70868
        imd4 |   3.392891   3.160514     1.31   0.190     .5465964    21.06071
        imd5 |   3.084154   2.910981     1.19   0.233     .4849859    19.61296
    bmi_cat1 |   1.959383   1.581541     0.83   0.405     .4027738    9.531857
    bmi_cat2 |   1.895095   1.327495     0.91   0.361     .4801456    7.479785
    bmi_cat3 |   1.005276   .7748585     0.01   0.995     .2219145    4.553912
    bmi_cat4 |   1.989214    1.40755     0.97   0.331     .4970261    7.961299
    bmi_cat5 |          1  (omitted)
    smoking1 |   .5900629   .3476984    -0.90   0.371     .1859184    1.872726
    smoking2 |    .841771   .2866204    -0.51   0.613     .4318794    1.640686
    smoking3 |          1  (omitted)
severe_dis~e |   .7421339   .2406522    -0.92   0.358     .3930634    1.401206
covid_vacc~t |   1.424936   3.004587     0.17   0.867     .0228545     88.8421
 liver_trans |   1.15e-63  (constrained)
       _rcs1 |   3.375678   1.263753     3.25   0.001     1.620678    7.031136
  _rcs_udca1 |   .9936407   .5343323    -0.01   0.991     .3463331    2.850787
_rcs_sever~1 |   .9081086   .2676342    -0.33   0.744     .5096535    1.618082
_rcs_covid~1 |   .8851884   1.216507    -0.09   0.929     .0598737    13.08685
_rcs_liver~1 |   1.017341   .5860259     0.03   0.976     .3289602    3.146227
_rcs_age_tv1 |   1.001151   .0074349     0.15   0.877     .9866849     1.01583
       _cons |   .0089882   .0113388    -3.74   0.000     .0007583     .106533
------------------------------------------------------------------------------
                - if "`markdown'" != "" {
                = if "" != "" {
                  set linesize `lsize'
                  }
                - if "`eqselect'" == "" {
                = if "" == "" {
                - if "`eformdi'"!="" & ("`e(cmd)'"!="gnbreg" | "`e(prefix)'"=="
> svy") {
                = if "exp(b)"!="" & ("stpm2"!="gnbreg" | ""=="svy") {
                - local k_eform `e(k_eform)'
                = local k_eform 1
                - if ("`k_eform'"=="") {
                = if ("1"=="") {
                  local k_eform = 1
                  }
                - local k_eq `e(k_eq)'
                = local k_eq 3
                - if ("`k_eq'"=="") {
                = if ("3"=="") {
                  local k_eq = 1
                  }
                - if (`k_eform'<`k_eq' & `k_eform') {
                = if (1<3 & 1) {
                - if ("`e(cmd2)'" == "stintreg" | "`e(cmd2)'" == "streg") & ("`
> e(cmd)'" == "weibull" | "`e(cmd)'" == "gompertz") {
                = if ("" == "stintreg" | "" == "streg") & ("stpm2" == "weibull"
>  | "stpm2" == "gompertz") {
                  }
                - else {
                - _eform_multeq_note efnote : `k_eform'
                = _eform_multeq_note efnote : 1
                  -------------------------------- begin _eform_multeq_note ---
                  - args eformnote colon k_eform
                  - local eformlnk "{help eform_option:Estimates are transforme
> d}"
                  - local efnote Note: `eformlnk' only in the first
                  = local efnote Note: {help eform_option:Estimates are transfo
> rmed} only in the first
                  - if (`k_eform'==1) {
                  = if (1==1) {
                  - local efnote `efnote' equation.
                  = local efnote Note: {help eform_option:Estimates are transfo
> rmed} only in the first equation.
                  - }
                  - else {
                    local efnote `efnote' `k_eform' equations.
                    }
                  - local efnote {p 0 6 2}`efnote'{p_end}
                  = local efnote {p 0 6 2}Note: {help eform_option:Estimates ar
> e transformed} only in the first equation.{p_end}
                  - c_local `eformnote' `efnote'
                  = c_local efnote {p 0 6 2}Note: {help eform_option:Estimates 
> are transformed} only in the first equation.{p_end}
                  ---------------------------------- end _eform_multeq_note ---
                - di as txt "`efnote'"
                = di as txt "{p 0 6 2}Note: {help eform_option:Estimates are tr
> ansformed} only in the first equation.{p_end}"
Note: Estimates are transformed only in the first equation.
                - }
                - }
                - }
                - if (`"`eformdi'"'!="" & "`e(noconstant)'"=="0" & `"`eform_con
> s_ti'"'!="" & "`e(consonly)'"!="1") {
                = if (`"exp(b)"'!="" & ""=="0" & `""'!="" & "0"!="1") {
                  if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd
> )'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                  local asvar = `"`e(ranvars)'`e(fixvars)'`e(indvars)'"' != ""
                  if `"`e(casevars)'"' != "" & `asvar' {
                  local note1 "Exponentiated coefficients represent odds ratios
>  for "
                  local note2 "alternative-specific variables (first equation) 
> and "
                  local note3 "{help j_cmrisk##|_new:relative-risk ratios} "
                  local note4 "for case-specific variables."
                  di as txt "{p 0 6 2}Note: `note1'`note2'`note3'`note4'{p_end}
> "
                  }
                  }
                  if "`eform_cons_ti'" == "Inc. Rate" {
                  local eform_cons_note "incidence rate"
                  }
                  else if "`eform_cons_ti'" == "Rel. Risk" {
                  local eform_cons_note "relative risk"
                  }
                  else if "`eform_cons_ti'" == "Health" {
                  local eform_cons_note "health (probability of no disease)"
                  }
                  else {
                  local eform_cons_note = strlower(`"`eform_cons_ti'"')
                  }
                  local eform_cons_note "baseline `eform_cons_note'"
                  if ("`e(cmd2)'"=="") {
                  local cmd `e(cmd)'
                  }
                  else {
                  local cmd `e(cmd2)'
                  }
                  local f2 = udsubstr("`cmd'",1,2)
                  local is_re = ("`f2'"=="xt" | "`f2'"=="me")
                  if `is_re' {
                  local extranote " (conditional on zero random effects)"
                  }
                  di as txt "{p 0 6 2}Note: {res:_cons} estimates " "`eform_con
> s_note'`extranote'" _c
                  if ("`e(cmd)'"=="mlogit" | "`e(cmd)'"=="asclogit" | "`e(cmd)'
> "=="cmclogit" | "`e(cmd)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
                  di as txt " for each outcome" _c
                  }
                  di as txt ".{p_end}"
                  }
                - }
                - return add
                - if !`keepmc' {
                = if !0 {
                - return local mcmethod
                - return local mctitle
                - }
                ------------------------------------------- end _coef_table ---
              - if "`footnote'" == "" {
              = if "" == "" {
              - ml_footnote
                ----------------------------------------- begin ml_footnote ---
                - version 9
                - syntax
                - _check_e_rc
                  --------------------------------------- begin _check_e_rc ---
                  - version 11
                  - syntax [, ignorerc]
                  - if e(rc) == 504 & inlist("`e(opt)'", "ml", "moptimize") {
                  = if e(rc) == 504 & inlist("moptimize", "ml", "moptimize") {
                    di as err "{p 0 0 2}variance matrix missing because `e(user
> )' failed" "to compute scores or computed scores with missing values{p_end}"
                    exit 504
                    }
                  - if (`"`ignorerc'"'=="" & !missing(e(rc)) & e(rc) != 0) erro
> r e(rc)
                  = if (`""'=="" & !missing(e(rc)) & e(rc) != 0) error e(rc)
convergence not achieved
                  ----------------------------------------- end _check_e_rc ---
                ------------------------------------------- end ml_footnote ---
                }
              -------------------------------------------- end mopt.Display ---
              exit
              }
            ------------------------------------------------------ end mopt ---
            exit
            }
          ---------------------------------------------------------- end ml ---
          }
        -------------------------------------------------- end stpm2.Replay ---
      -------------------------------------------------- end stpm2.Estimate ---
    ------------------------------------------------------------- end stpm2 ---
    summ _t
    local tmax=r(max)
    local tmaxplus1=r(max)+1
    range days 0 `tmax' `tmaxplus1'
    stpm2_standsurv if udca == 1, at1(udca 0) at2(udca 1) timevar(days) ci cont
> rast(difference) fail
    gen date = d(1/3/2020)+ days
    format date %tddd_Month
    for var _at1 _at2 _at1_lci _at1_uci _at2_lci _at2_uci _contrast2_1 _contras
> t2_1_lci _contrast2_1_uci: replace X=100*X
    list _at1* if days==`tmax', noobs
    list _at2* if days==`tmax', noobs
    list _contrast* if days==`tmax', noobs
    twoway (rarea _at1_lci _at1_uci days, color(red%25)) (rarea _at2_lci _at2_u
> ci days, color(blue%25)) (line _at1 days, sort lcolor(red)) (line _at2 days, 
> sort lcolor(blue) lpattern(dash)) , legend(order(1 "No UDCA" 2 "UDCA") ring(0
> ) cols(1) pos(11) region(lwidth(none))) title("Time to `outcome'", justificat
> ion(left) size(med) ) yscale(range(0, 1)) ylabel(0 (1) 10, angle(0) format(%4
> .1f) labsize(small)) xlabel(0 (200) 1035, labsize(small)) ytitle("Cumulative 
> outcomes (%)", size(medsmall)) xtitle("Days since 1 Mar 2020", size(medsmall)
> ) graphregion(fcolor(white)) saving(adjcurv_f_`outcome', replace)
    graph export "./output/graphs/adjcurv_f_`outcome'.svg", as(svg) replace
    graph close
    }
r(430);

end of do-file
r(430);

end of do-file

r(430);


